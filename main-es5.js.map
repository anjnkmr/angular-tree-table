{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./dist/angular-tree-table/fesm5/angular-tree-table.js","./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/app.component.html","./src/app/components/basic/basic.component.html","./src/app/components/expandable-header-less/expandable-header-less.component.html","./src/app/components/expandable/expandable.component.html","./src/app/components/inputs/inputs.component.html","./src/app/components/select/select.component.html","./src/app/components/server-side/server-side.component.html","./src/app/app-routing.module.ts","./src/app/app.component.scss","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/components/basic/basic.component.scss","./src/app/components/basic/basic.component.ts","./src/app/components/expandable-header-less/expandable-header-less.component.scss","./src/app/components/expandable-header-less/expandable-header-less.component.ts","./src/app/components/expandable/expandable.component.scss","./src/app/components/expandable/expandable.component.ts","./src/app/components/inputs/inputs.component.scss","./src/app/components/inputs/inputs.component.ts","./src/app/components/select/select.component.scss","./src/app/components/select/select.component.ts","./src/app/components/server-side/server-side.component.scss","./src/app/components/server-side/server-side.component.ts","./src/environments/environment.ts","./src/main.ts","fs (ignored)","crypto (ignored)","stream (ignored)"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkI;AACvF;AACT;AACE;AACA;AACS;AACE;;AAE/C;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA,iBAAiB;AACjB;AACA;AACA,0DAA0D,WAAW;AACrE,iEAAiE,wEAAkB,EAAE,sDAAsD,sCAAsC,EAAE,sDAAsD;AACzO;AACA,CAAC;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,WAAW,EAyBV;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,WAAW,EA4MV;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,WAAW,EASV;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,WAAW,EA6DV;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,WAAW,EAkDV;;AAED;AACA;AACA,cAAc,wGAAwG;AACtgBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uCAAuC,sDAAQ,4DAA4D,yBAAyB;AACpI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,6DAA6D,uCAAuC;AACpG,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,6CAA6C,mCAAmC;AAChF,gBAAgB,yDAAM;AACtB,aAAa;AACb;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,kDAAkD,iBAAiB;AACnE,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,sDAAQ,mDAAmD,UAAU;AAC/G;AACA,2CAA2C,EAAE;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,EAAE;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,QAAQ,gBAAgB;AAC/D;AACA;AACA;AACA;AACA,qCAAqC,0BAA0B;AAC/D;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD,WAAW,EAsCV;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb,aAAa,mCAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,0DAAY;AACnD,yCAAyC,0DAAY;AACrD,uCAAuC,0DAAY;AACnD;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,0BAA0B,oBAAoB,EAAE;AAChD,SAAS;AACT;AACA,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,0BAA0B,mBAAmB,EAAE;AAC/C,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,8BAA8B,sDAAQ,iCAAiC,gBAAgB;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,8BAA8B,sDAAQ,iCAAiC,gBAAgB;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,sDAAQ,iCAAiC,gBAAgB;AAC/F;AACA;AACA;AACA;AACA,+BAA+B,QAAQ,gBAAgB;AACvD;AACA;AACA;AACA;AACA,6BAA6B,0BAA0B;AACvD;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA,+BAA+B,iDAAiD;AAChF;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA,0CAA0C,sDAAQ,iCAAiC,gBAAgB;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,QAAQ,gBAAgB;AAC3D;AACA;AACA;AACA;AACA,iCAAiC,0BAA0B;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,sDAAQ,iCAAiC,gBAAgB;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,EAAE;AAC7C;AACA;AACA,iEAAiE,sDAAQ,6DAA6D,UAAU;AAChJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,QAAQ,gBAAgB;AACvE;AACA;AACA;AACA;AACA,6CAA6C,0BAA0B;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,QAAQ,gBAAgB;AAC3D;AACA;AACA;AACA;AACA,iCAAiC,0BAA0B;AAC3D;AACA;AACA;AACA;AACA,0CAA0C,sDAAQ,iCAAiC,gBAAgB;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,QAAQ,gBAAgB;AAC3D;AACA;AACA;AACA;AACA,iCAAiC,0BAA0B;AAC3D;AACA;AACA;AACA,aAAa;AACb,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,oCAAoC,gFAAgF;AACpH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,iDAAiD,yBAAyB;AAC1E;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,yCAAyC,kDAAkD;AAC3F;AACA;AACA;AACA;AACA;AACA,yDAAyD,iCAAiC;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,0BAA0B,sDAAQ,sCAAsC,UAAU;AAClF;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,iDAAiD,sDAAQ,0CAA0C,UAAU;AAC7G;AACA;AACA;AACA;AACA,+BAA+B,QAAQ,gBAAgB;AACvD;AACA;AACA;AACA;AACA,6BAA6B,0BAA0B;AACvD;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA,mBAAmB,EAAE;AACrB,0FAA0F;AAC1F,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,iBAAiB,0CAAK;AACtB,mBAAmB,EAAE;AACrB,kBAAkB,UAAU,WAAW;AACvC,mBAAmB,EAAE;AACrB,0BAA0B,kDAAK,MAAM,kCAAkC;AACvE,mBAAmB,EAAE;AACrB,4CAA4C,iBAAiB;AAC7D,QAAQ,yDAAM;AACd;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,sBAAsB,mBAAmB,EAAE;AAC3C;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,sBAAsB,mBAAmB,UAAU,EAAE;AACrD;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,sBAAsB,oBAAoB,UAAU,EAAE;AACtD;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,uBAAuB;AACvB;AACA,0BAA0B,sDAAQ,8BAA8B,UAAU;AAC1E;AACA;AACA;AACA;AACA,wBAAwB,SAAS,iBAAiB;AAClD;AACA;AACA;AACA;AACA,qBAAqB,4BAA4B;AACjD;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,sDAAQ;AAC3B,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,sBAAsB,eAAe,EAAE;AACvC;AACA;AACA,eAAe,EAA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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable, ɵɵdefineInjectable, EventEmitter, Component, KeyValueDiffers, Input, Output, NgModule } from '@angular/core';\nimport { __values, __spread } from 'tslib';\nimport * as moment_ from 'moment';\nimport { saveAs } from 'file-saver';\nimport { utils, write } from 'xlsx';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar AngularTreeTableService = /** @class */ (function () {\n    function AngularTreeTableService() {\n    }\n    AngularTreeTableService.decorators = [\n        { type: Injectable, args: [{\n                    providedIn: 'root'\n                },] }\n    ];\n    /** @nocollapse */\n    AngularTreeTableService.ctorParameters = function () { return []; };\n    /** @nocollapse */ AngularTreeTableService.ngInjectableDef = ɵɵdefineInjectable({ factory: function AngularTreeTableService_Factory() { return new AngularTreeTableService(); }, token: AngularTreeTableService, providedIn: \"root\" });\n    return AngularTreeTableService;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar TreeTableRow = /** @class */ (function () {\n    function TreeTableRow(id, data, expandable, children) {\n        this.id = null;\n        this.data = {};\n        this.expandable = false;\n        this.children = null;\n        this.expanded = false;\n        // Clickables Context for Actions\n        this.clickablesContext = null;\n        // Clickable Properties and Actions\n        this.clickables = {};\n        this.styles = {};\n        this.classes = [];\n        // Actions Header Buttons\n        this.actions = [];\n        // Is row selected\n        this.selected = false;\n        this.options = [];\n        this.id = id;\n        this.data = data;\n        this.expandable = expandable;\n        this.children = children;\n    }\n    return TreeTableRow;\n}());\nif (false) {\n    /** @type {?} */\n    TreeTableRow.prototype.id;\n    /** @type {?} */\n    TreeTableRow.prototype.data;\n    /** @type {?} */\n    TreeTableRow.prototype.expandable;\n    /** @type {?} */\n    TreeTableRow.prototype.children;\n    /** @type {?} */\n    TreeTableRow.prototype.expanded;\n    /** @type {?} */\n    TreeTableRow.prototype.clickablesContext;\n    /** @type {?} */\n    TreeTableRow.prototype.clickables;\n    /** @type {?} */\n    TreeTableRow.prototype.styles;\n    /** @type {?} */\n    TreeTableRow.prototype.classes;\n    /** @type {?} */\n    TreeTableRow.prototype.actions;\n    /** @type {?} */\n    TreeTableRow.prototype.selected;\n    /** @type {?} */\n    TreeTableRow.prototype.options;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar TreeTableDataConfig = /** @class */ (function () {\n    function TreeTableDataConfig() {\n        /**\n         * Context should be Host component instance of tree table\n         *\n         * Default value is `null`\n         */\n        this.context = null;\n        /**\n         * This is two dimensional array, each subarray should contain 2 or less strings, and there is no limit for subarrays count\n         *\n         * Default value is `[]`\n         */\n        this.extraInfos = [];\n        /**\n         * This is used to show/ hide Table Headers\n         *\n         * Default value is `true` - Shows Table Headers\n         */\n        this.showTableHeaders = true;\n        /**\n         * Column Visibility will show the group of buttons on top of table, which will allow us to toggle the visibility of each column\n         *\n         * Default value is `false` - hidden\n         */\n        this.columnVisibility = false;\n        /**\n         * Same as Column Visibility but it shown as popover. It requires popper js library to work\n         *\n         * Default value is `false` - hidden\n         */\n        this.columnVisibilityDropDown = false;\n        /**\n         * Enables seperate search field for each column under each table header\n         *\n         * Default value is `false` - Disabled\n         */\n        this.visibleColumnFiltersVisibility = false;\n        /**\n         * This is used to set the search value by default based on `dataProperty`\n         *\n         * Ex: {country: 'India'}\n         *\n         * Default value is `{}`\n         */\n        this.visibleColumnFilters = {};\n        /**\n         * Class name for table tag\n         *\n         * Default value is `stacktable table-bordered large-only table table-sm`\n         */\n        this.fullClassName = 'stacktable table-bordered large-only table table-sm';\n        /**\n         * Class name for th tag which is sorted in `ascending` order\n         *\n         * Default value is `col-sort col-sort-asc`\n         */\n        this.sortAscClassName = 'col-sort col-sort-asc';\n        /**\n         * Class name for th tag which is sorted in `descending` order\n         *\n         * Default value is `col-sort col-sort-desc`\n         */\n        this.sortDescClassName = 'col-sort col-sort-desc';\n        /**\n         * Class name for th tag which is `not sorted`\n         *\n         * Default value is `col-sort col-sort-nothing`\n         */\n        this.sortNothingClassName = 'col-sort col-sort-nothing';\n        /**\n         * Extra class name for table tag\n         *\n         * Default value is `null`\n         */\n        this.customClassName = null;\n        /**\n         * This option will show the Expand Row Button on each row, if child exists\n         *\n         * Default value is `false`\n         */\n        this.showExpandArrows = false;\n        /**\n         * This option will show the Expand Row Button on table header, which will expand/ collapse all rows with children at a time\n         *\n         * Default value is `false`\n         */\n        this.showExpandAllArrows = false;\n        /**\n         * If this option is `true` then it will expand all the rows irrespective of child table has rows or not\n         *\n         * Default value is `false` - Only expand rows with child which has rows\n         */\n        this.showExpandAllEmptyChildren = false;\n        /**\n         * This is used set the default sorted column and order based on dataProperty\n         *\n         * Ex: {firstName: 'asc'}\n         *\n         * Default value is `{}`\n         */\n        this.sortedColumn = {};\n        /**\n         * This will shows the page length dropdown, which will used to render the no of rows on each page\n         *\n         * Default value is `true`\n         */\n        this.showPageLengthDropdown = true;\n        /**\n         * This will used to customize page length dropdown options\n         *\n         * Default value is `[10, 25, 50, 100]`\n         */\n        this.pageSizes = [10, 25, 50, 100];\n        /**\n         * This is for internal pupose of the `angular-tree-table`. Don't use it.\n         *\n         * Default value is `0`\n         */\n        this.level = 0;\n        /**\n         * Column Filters are used to send the column wise search keywords to server. Don't use it. It will be used by `angular-tree-table` itself.\n         */\n        this.columnFilters = {};\n        /**\n         * Row clickables are allows you to configure the row detail clicking actions with a callback method based on dataProperty\n         *\n         * Default value is `{}`\n         */\n        this.rowClickables = {};\n        /**\n         * This should be instance of component or the instance of class where the callbacks of rowClickables implemented\n         *\n         * Default value is `null`\n         */\n        this.rowClickablesContext = null;\n        /**\n         * This is used to show/ hide the common search box\n         *\n         * Default value is `true`\n         */\n        this.commonSearch = true;\n        /**\n         * This is used to show/ hide Export Excel Button\n         *\n         * Default value is `false`\n         */\n        this.excelExportButton = false;\n        /**\n         * This is used to configure the ExcelExport file name\n         *\n         * Default value is `ExportFile`\n         */\n        this.excelExportFileName = 'ExportFile';\n        /**\n         * This is used to configure the Excel Export Button text\n         *\n         * Default value is `Excel Export`\n         */\n        this.excelExportButtonText = 'Excel Export';\n        /**\n         * It is WIP, Which will be used to export to excel file along with all children of rows\n         *\n         * Default value is `true`\n         */\n        this.excelExportAllChildren = true;\n        /**\n         * It is WIP, Which will be used to export to excel file along with all children of rows\n         *\n         * Default value is `true`\n         */\n        this.excelExportOnlyExpanded = false;\n        /**\n         * It is WIP, which will used to configure the callbacks for events of the `angular-tree-table`\n         */\n        this.events = new TreeTableDataEvents();\n    }\n    return TreeTableDataConfig;\n}());\nif (false) {\n    /**\n     * Context should be Host component instance of tree table\n     *\n     * Default value is `null`\n     * @type {?}\n     */\n    TreeTableDataConfig.prototype.context;\n    /**\n     * This is two dimensional array, each subarray should contain 2 or less strings, and there is no limit for subarrays count\n     *\n     * Default value is `[]`\n     * @type {?}\n     */\n    TreeTableDataConfig.prototype.extraInfos;\n    /**\n     * This is used to show/ hide Table Headers\n     *\n     * Default value is `true` - Shows Table Headers\n     * @type {?}\n     */\n    TreeTableDataConfig.prototype.showTableHeaders;\n    /**\n     * Column Visibility will show the group of buttons on top of table, which will allow us to toggle the visibility of each column\n     *\n     * Default value is `false` - hidden\n     * @type {?}\n     */\n    TreeTableDataConfig.prototype.columnVisibility;\n    /**\n     * Same as Column Visibility but it shown as popover. It requires popper js library to work\n     *\n     * Default value is `false` - hidden\n     * @type {?}\n     */\n    TreeTableDataConfig.prototype.columnVisibilityDropDown;\n    /**\n     * Enables seperate search field for each column under each table header\n     *\n     * Default value is `false` - Disabled\n     * @type {?}\n     */\n    TreeTableDataConfig.prototype.visibleColumnFiltersVisibility;\n    /**\n     * This is used to set the search value by default based on `dataProperty`\n     *\n     * Ex: {country: 'India'}\n     *\n     * Default value is `{}`\n     * @type {?}\n     */\n    TreeTableDataConfig.prototype.visibleColumnFilters;\n    /**\n     * Class name for table tag\n     *\n     * Default value is `stacktable table-bordered large-only table table-sm`\n     * @type {?}\n     */\n    TreeTableDataConfig.prototype.fullClassName;\n    /**\n     * Class name for th tag which is sorted in `ascending` order\n     *\n     * Default value is `col-sort col-sort-asc`\n     * @type {?}\n     */\n    TreeTableDataConfig.prototype.sortAscClassName;\n    /**\n     * Class name for th tag which is sorted in `descending` order\n     *\n     * Default value is `col-sort col-sort-desc`\n     * @type {?}\n     */\n    TreeTableDataConfig.prototype.sortDescClassName;\n    /**\n     * Class name for th tag which is `not sorted`\n     *\n     * Default value is `col-sort col-sort-nothing`\n     * @type {?}\n     */\n    TreeTableDataConfig.prototype.sortNothingClassName;\n    /**\n     * Extra class name for table tag\n     *\n     * Default value is `null`\n     * @type {?}\n     */\n    TreeTableDataConfig.prototype.customClassName;\n    /**\n     * This option will show the Expand Row Button on each row, if child exists\n     *\n     * Default value is `false`\n     * @type {?}\n     */\n    TreeTableDataConfig.prototype.showExpandArrows;\n    /**\n     * This option will show the Expand Row Button on table header, which will expand/ collapse all rows with children at a time\n     *\n     * Default value is `false`\n     * @type {?}\n     */\n    TreeTableDataConfig.prototype.showExpandAllArrows;\n    /**\n     * If this option is `true` then it will expand all the rows irrespective of child table has rows or not\n     *\n     * Default value is `false` - Only expand rows with child which has rows\n     * @type {?}\n     */\n    TreeTableDataConfig.prototype.showExpandAllEmptyChildren;\n    /**\n     * This is used set the default sorted column and order based on dataProperty\n     *\n     * Ex: {firstName: 'asc'}\n     *\n     * Default value is `{}`\n     * @type {?}\n     */\n    TreeTableDataConfig.prototype.sortedColumn;\n    /**\n     * This will shows the page length dropdown, which will used to render the no of rows on each page\n     *\n     * Default value is `true`\n     * @type {?}\n     */\n    TreeTableDataConfig.prototype.showPageLengthDropdown;\n    /**\n     * This will used to customize page length dropdown options\n     *\n     * Default value is `[10, 25, 50, 100]`\n     * @type {?}\n     */\n    TreeTableDataConfig.prototype.pageSizes;\n    /**\n     * This is for internal pupose of the `angular-tree-table`. Don't use it.\n     *\n     * Default value is `0`\n     * @type {?}\n     */\n    TreeTableDataConfig.prototype.level;\n    /**\n     * Column Filters are used to send the column wise search keywords to server. Don't use it. It will be used by `angular-tree-table` itself.\n     * @type {?}\n     */\n    TreeTableDataConfig.prototype.columnFilters;\n    /**\n     * Row clickables are allows you to configure the row detail clicking actions with a callback method based on dataProperty\n     *\n     * Default value is `{}`\n     * @type {?}\n     */\n    TreeTableDataConfig.prototype.rowClickables;\n    /**\n     * This should be instance of component or the instance of class where the callbacks of rowClickables implemented\n     *\n     * Default value is `null`\n     * @type {?}\n     */\n    TreeTableDataConfig.prototype.rowClickablesContext;\n    /**\n     * This is used to show/ hide the common search box\n     *\n     * Default value is `true`\n     * @type {?}\n     */\n    TreeTableDataConfig.prototype.commonSearch;\n    /**\n     * This is used to show/ hide Export Excel Button\n     *\n     * Default value is `false`\n     * @type {?}\n     */\n    TreeTableDataConfig.prototype.excelExportButton;\n    /**\n     * This is used to configure the ExcelExport file name\n     *\n     * Default value is `ExportFile`\n     * @type {?}\n     */\n    TreeTableDataConfig.prototype.excelExportFileName;\n    /**\n     * This is used to configure the Excel Export Button text\n     *\n     * Default value is `Excel Export`\n     * @type {?}\n     */\n    TreeTableDataConfig.prototype.excelExportButtonText;\n    /**\n     * It is WIP, Which will be used to export to excel file along with all children of rows\n     *\n     * Default value is `true`\n     * @type {?}\n     */\n    TreeTableDataConfig.prototype.excelExportAllChildren;\n    /**\n     * It is WIP, Which will be used to export to excel file along with all children of rows\n     *\n     * Default value is `true`\n     * @type {?}\n     */\n    TreeTableDataConfig.prototype.excelExportOnlyExpanded;\n    /**\n     * It is WIP, which will used to configure the callbacks for events of the `angular-tree-table`\n     * @type {?}\n     */\n    TreeTableDataConfig.prototype.events;\n}\nvar TreeTableDataEvents = /** @class */ (function () {\n    function TreeTableDataEvents() {\n        this.shouldRowExpand = null;\n        this.rowExpanded = null;\n        this.shouldRowCollapse = null;\n        this.rowCollapsed = null;\n    }\n    return TreeTableDataEvents;\n}());\nif (false) {\n    /** @type {?} */\n    TreeTableDataEvents.prototype.shouldRowExpand;\n    /** @type {?} */\n    TreeTableDataEvents.prototype.rowExpanded;\n    /** @type {?} */\n    TreeTableDataEvents.prototype.shouldRowCollapse;\n    /** @type {?} */\n    TreeTableDataEvents.prototype.rowCollapsed;\n}\nvar TreeTableDataServerConfig = /** @class */ (function () {\n    function TreeTableDataServerConfig() {\n        /**\n         * `url` to invoke for the data from server\n         *\n         * Ex: `https://restapisample.com/entities`\n         *\n         * Default value is `null`\n         */\n        this.url = null;\n        /**\n         * `url` to invoke for the data from server as a file\n         *\n         * Ex: `https://restapisample.com/entities/export`\n         *\n         * Default value is `null`\n         */\n        this.excelExportUrl = null;\n        /**\n         * HTTP Method for `url` and `excelExportUrl`\n         *\n         * Default value is `null`\n         */\n        this.method = null;\n        /**\n         * `angular-tree-table` handles all the events, page change, next page, prev page, page length change through api call and using different parameter. These are used to customize those parameter keys as per the server side requirements\n         *\n         * Default values are `page, limit, sort, search, colSearch, colFilters, pageToken`\n         */\n        this.paramNames = new TreeTableDataServerConfigParamMapping();\n        /**\n         * This is used to configure the property key of array in the api response\n         *\n         * Default value is `rows`\n         */\n        this.rowsKey = 'rows';\n        /**\n         * This is used to configure the property key of totalRowsCount in the api response\n         *\n         * Default value is `totalRowsCount`\n         */\n        this.totalRowsCountKey = 'totalRowsCount';\n        /**\n         * This is used to configure the property key of filteredRowsCount in the api response\n         *\n         * Default value is `filteredRowCount`\n         */\n        this.filteredRowsCountKey = 'filteredRowsCount';\n        /**\n         * This is used to configure the unique key in the each row of the response\n         *\n         * Default value is `null`\n         */\n        this.rowUniqueKey = null;\n    }\n    return TreeTableDataServerConfig;\n}());\nif (false) {\n    /**\n     * `url` to invoke for the data from server\n     *\n     * Ex: `https://restapisample.com/entities`\n     *\n     * Default value is `null`\n     * @type {?}\n     */\n    TreeTableDataServerConfig.prototype.url;\n    /**\n     * `url` to invoke for the data from server as a file\n     *\n     * Ex: `https://restapisample.com/entities/export`\n     *\n     * Default value is `null`\n     * @type {?}\n     */\n    TreeTableDataServerConfig.prototype.excelExportUrl;\n    /**\n     * HTTP Method for `url` and `excelExportUrl`\n     *\n     * Default value is `null`\n     * @type {?}\n     */\n    TreeTableDataServerConfig.prototype.method;\n    /**\n     * `angular-tree-table` handles all the events, page change, next page, prev page, page length change through api call and using different parameter. These are used to customize those parameter keys as per the server side requirements\n     *\n     * Default values are `page, limit, sort, search, colSearch, colFilters, pageToken`\n     * @type {?}\n     */\n    TreeTableDataServerConfig.prototype.paramNames;\n    /**\n     * This is used to configure the property key of array in the api response\n     *\n     * Default value is `rows`\n     * @type {?}\n     */\n    TreeTableDataServerConfig.prototype.rowsKey;\n    /**\n     * This is used to configure the property key of totalRowsCount in the api response\n     *\n     * Default value is `totalRowsCount`\n     * @type {?}\n     */\n    TreeTableDataServerConfig.prototype.totalRowsCountKey;\n    /**\n     * This is used to configure the property key of filteredRowsCount in the api response\n     *\n     * Default value is `filteredRowCount`\n     * @type {?}\n     */\n    TreeTableDataServerConfig.prototype.filteredRowsCountKey;\n    /**\n     * This is used to configure the unique key in the each row of the response\n     *\n     * Default value is `null`\n     * @type {?}\n     */\n    TreeTableDataServerConfig.prototype.rowUniqueKey;\n}\nvar TreeTableDataServerConfigParamMapping = /** @class */ (function () {\n    function TreeTableDataServerConfigParamMapping() {\n        /**\n         * Page number of the page will send under key configured here\n         *\n         * Default value is `page`\n         */\n        this.page = 'page';\n        /**\n         * Limit of the page will send under key configured here\n         *\n         * Default value is `limit`\n         */\n        this.limit = 'limit';\n        /**\n         * Sort of the table of each column will send under key configured here\n         *\n         * Default value is `sort`\n         */\n        this.sort = 'sort';\n        /**\n         * Search keyword wil be send under key configured here\n         *\n         * Default value is `search`\n         */\n        this.search = 'search';\n        /**\n         * Search keyword of each column will be send under key configured here\n         *\n         * Default value is `colSearch`\n         */\n        this.colSearch = 'colSearch';\n        /**\n         * Filter of each column will be send under key configured here\n         *\n         * Default value is `colFilters`\n         */\n        this.colFilters = 'colFilters';\n        /**\n         * Not using right now\n         *\n         * Default value is `pageToken`\n         */\n        this.pageToken = 'pageToken';\n    }\n    return TreeTableDataServerConfigParamMapping;\n}());\nif (false) {\n    /**\n     * Page number of the page will send under key configured here\n     *\n     * Default value is `page`\n     * @type {?}\n     */\n    TreeTableDataServerConfigParamMapping.prototype.page;\n    /**\n     * Limit of the page will send under key configured here\n     *\n     * Default value is `limit`\n     * @type {?}\n     */\n    TreeTableDataServerConfigParamMapping.prototype.limit;\n    /**\n     * Sort of the table of each column will send under key configured here\n     *\n     * Default value is `sort`\n     * @type {?}\n     */\n    TreeTableDataServerConfigParamMapping.prototype.sort;\n    /**\n     * Search keyword wil be send under key configured here\n     *\n     * Default value is `search`\n     * @type {?}\n     */\n    TreeTableDataServerConfigParamMapping.prototype.search;\n    /**\n     * Search keyword of each column will be send under key configured here\n     *\n     * Default value is `colSearch`\n     * @type {?}\n     */\n    TreeTableDataServerConfigParamMapping.prototype.colSearch;\n    /**\n     * Filter of each column will be send under key configured here\n     *\n     * Default value is `colFilters`\n     * @type {?}\n     */\n    TreeTableDataServerConfigParamMapping.prototype.colFilters;\n    /**\n     * Not using right now\n     *\n     * Default value is `pageToken`\n     * @type {?}\n     */\n    TreeTableDataServerConfigParamMapping.prototype.pageToken;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar TreeTableData = /** @class */ (function () {\n    function TreeTableData(config, serverConfig, http) {\n        this.headers = [];\n        this.data = [];\n        this.isLoading = false;\n        this.keyword = null;\n        this.page = 1;\n        this.pageSize = 10;\n        this.lastParams = null;\n        this.totalRowsCount = 0;\n        this.filteredRowsCount = 0;\n        this.splashMessageFlag = false;\n        this.splashMessageContent = '';\n        this.tokens = [null];\n        this.isAllRowsExpanded = false;\n        this.serverConfig = new TreeTableDataServerConfig();\n        this.config = new TreeTableDataConfig();\n        this.loadCounter = 0;\n        this.http = null;\n        this.http = http;\n        if (serverConfig !== undefined && serverConfig !== null) {\n            if (serverConfig.paramNames === undefined || serverConfig.paramNames === null) {\n                serverConfig.paramNames = this.serverConfig.paramNames;\n            }\n            if (serverConfig.rowsKey === undefined || serverConfig.rowsKey === null) {\n                serverConfig.rowsKey = this.serverConfig.rowsKey;\n            }\n            if (serverConfig.rowUniqueKey === undefined || serverConfig.rowUniqueKey === null) {\n                serverConfig.rowUniqueKey = this.serverConfig.rowUniqueKey;\n            }\n            this.serverConfig = serverConfig;\n            this.loadData();\n        }\n        else {\n            // console.log('No Server Properties');\n        }\n        if (config !== undefined && config !== null) {\n            if (config.extraInfos !== undefined && config.extraInfos !== null) {\n                this.config.extraInfos = config.extraInfos;\n            }\n            if (config.context !== undefined && config.context !== null) {\n                this.config.context = config.context;\n            }\n            if (config.showTableHeaders !== undefined && config.showTableHeaders !== null) {\n                this.config.showTableHeaders = config.showTableHeaders;\n            }\n            if (config.showExpandArrows !== undefined && config.showExpandArrows !== null) {\n                this.config.showExpandArrows = config.showExpandArrows;\n            }\n            if (config.events === undefined || config.events === null) {\n                config.events = this.config.events;\n            }\n            else {\n                if (config.events.rowExpanded !== undefined\n                    && config.events.rowExpanded !== null) {\n                    this.config.events.rowExpanded = config.events.rowExpanded;\n                }\n                if (config.events.rowCollapsed !== undefined\n                    && config.events.rowCollapsed !== null) {\n                    this.config.events.rowCollapsed = config.events.rowCollapsed;\n                }\n            }\n            if (config.fullClassName !== undefined && config.fullClassName !== null) {\n                this.config.fullClassName = config.fullClassName;\n            }\n            if (config.excelExportFileName !== undefined && config.excelExportFileName !== null) {\n                this.config.excelExportFileName = config.excelExportFileName;\n            }\n            if (config.excelExportButtonText !== undefined && config.excelExportButtonText !== null) {\n                this.config.excelExportButtonText = config.excelExportButtonText;\n            }\n            if (config.sortAscClassName !== undefined && config.sortAscClassName !== null) {\n                this.config.sortAscClassName = config.sortAscClassName;\n            }\n            if (config.sortDescClassName !== undefined && config.sortDescClassName !== null) {\n                this.config.sortDescClassName = config.sortDescClassName;\n            }\n            if (config.sortNothingClassName !== undefined && config.sortNothingClassName !== null) {\n                this.config.sortNothingClassName = config.sortNothingClassName;\n            }\n            if (config.customClassName !== undefined && config.customClassName !== null) {\n                this.config.customClassName = config.customClassName;\n            }\n            if (config.showExpandAllArrows !== undefined && config.showExpandAllArrows !== null) {\n                this.config.showExpandAllArrows = config.showExpandAllArrows;\n            }\n            if (config.showExpandAllEmptyChildren !== undefined && config.showExpandAllEmptyChildren !== null) {\n                this.config.showExpandAllEmptyChildren = config.showExpandAllEmptyChildren;\n            }\n            if (config.showPageLengthDropdown !== undefined && config.showPageLengthDropdown !== null) {\n                this.config.showPageLengthDropdown = config.showPageLengthDropdown;\n            }\n            if (config.columnVisibility !== undefined && config.columnVisibility !== null) {\n                this.config.columnVisibility = config.columnVisibility;\n            }\n            if (config.columnVisibilityDropDown !== undefined && config.columnVisibilityDropDown !== null) {\n                this.config.columnVisibilityDropDown = config.columnVisibilityDropDown;\n            }\n            if (config.visibleColumnFiltersVisibility !== undefined && config.visibleColumnFiltersVisibility !== null) {\n                this.config.visibleColumnFiltersVisibility = config.visibleColumnFiltersVisibility;\n            }\n            if (config.sortedColumn !== undefined && config.sortedColumn !== null) {\n                this.config.sortedColumn = config.sortedColumn;\n            }\n            if (config.level !== undefined && config.level !== null) {\n                this.config.level = config.level;\n            }\n            if (config.commonSearch !== undefined && config.commonSearch !== null) {\n                this.config.commonSearch = config.commonSearch;\n            }\n            if (config.columnFilters !== undefined && config.columnFilters !== null) {\n                this.config.columnFilters = config.columnFilters;\n            }\n            if (config.pageSizes !== undefined && config.pageSizes !== null && config.pageSizes.length > 0) {\n                this.config.pageSizes.splice(0, this.config.pageSizes.length);\n                for (var p = 0; p < config.pageSizes.length; p++) {\n                    if (config.pageSizes[p] > 0) {\n                        this.config.pageSizes.push(config.pageSizes[p]);\n                    }\n                }\n                // this.config.pageSizes = config.pageSizes;\n            }\n            if (config.visibleColumnFilters !== undefined && config.visibleColumnFilters !== null) {\n                this.config.visibleColumnFilters = config.visibleColumnFilters;\n            }\n            if (config.rowClickablesContext !== undefined && config.rowClickablesContext !== null) {\n                this.config.rowClickablesContext = config.rowClickablesContext;\n            }\n            if (config.rowClickables !== undefined && config.rowClickables !== null) {\n                this.config.rowClickables = config.rowClickables;\n            }\n            if (config.commonSearch !== undefined && config.commonSearch !== null) {\n                this.config.commonSearch = config.commonSearch;\n            }\n            if (config.excelExportButton !== undefined && config.excelExportButton !== null) {\n                this.config.excelExportButton = config.excelExportButton;\n            }\n        }\n        else {\n            // console.log('No Properties');\n        }\n        // console.log('Properties', config);\n    }\n    /**\n     * @return {?}\n     */\n    TreeTableData.prototype.totalPagesCount = /**\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var pages = this.filteredRowsCount / this.pageSize;\n        return Math.ceil(pages);\n    };\n    /**\n     * @return {?}\n     */\n    TreeTableData.prototype.getParams = /**\n     * @return {?}\n     */\n    function () {\n        var e_1, _a;\n        /** @type {?} */\n        var params = {};\n        if (this.page - 1 >= 0) {\n            if (this.tokens[this.page - 1] !== undefined && this.tokens[this.page - 1] !== null) {\n                params[this.serverConfig.paramNames.pageToken] = this.tokens[this.page - 1];\n            }\n        }\n        params[this.serverConfig.paramNames.page] = this.page;\n        params[this.serverConfig.paramNames.search] = this.keyword;\n        params[this.serverConfig.paramNames.limit] = this.pageSize;\n        params[this.serverConfig.paramNames.colFilters] = JSON.stringify(this.config.columnFilters);\n        params[this.serverConfig.paramNames.sort] = JSON.stringify(this.config.sortedColumn);\n        /** @type {?} */\n        var colSearchKeys = Object.keys(this.config.visibleColumnFilters);\n        try {\n            for (var colSearchKeys_1 = __values(colSearchKeys), colSearchKeys_1_1 = colSearchKeys_1.next(); !colSearchKeys_1_1.done; colSearchKeys_1_1 = colSearchKeys_1.next()) {\n                var key = colSearchKeys_1_1.value;\n                if (this.config.visibleColumnFilters[key] === null) {\n                    delete this.config.visibleColumnFilters[key];\n                }\n                if (this.config.visibleColumnFilters[key] === undefined) {\n                    delete this.config.visibleColumnFilters[key];\n                }\n                if (this.config.visibleColumnFilters[key] === '') {\n                    delete this.config.visibleColumnFilters[key];\n                }\n                if (this.config.visibleColumnFilters[key].trim() === '') {\n                    delete this.config.visibleColumnFilters[key];\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (colSearchKeys_1_1 && !colSearchKeys_1_1.done && (_a = colSearchKeys_1.return)) _a.call(colSearchKeys_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        params[this.serverConfig.paramNames.colSearch] = JSON.stringify(this.config.visibleColumnFilters);\n        return params;\n    };\n    /**\n     * @param {?=} callback\n     * @return {?}\n     */\n    TreeTableData.prototype.loadExcelData = /**\n     * @param {?=} callback\n     * @return {?}\n     */\n    function (callback) {\n        if (this.serverConfig.excelExportUrl === null) {\n            console.warn('ExcelExportUrl not specified');\n            return;\n        }\n        /** @type {?} */\n        var params = this.getParams();\n        // delete params[this.serverConfig.paramNames.limit];\n        /** @type {?} */\n        var dis = this;\n        dis.isLoading = true;\n        if (this.serverConfig.method === 'GET') {\n            this.http.get(this.serverConfig.excelExportUrl, { params: params, responseType: 'blob' }).subscribe((/**\n             * @param {?} resp\n             * @return {?}\n             */\n            function (resp) {\n                dis.isLoading = false;\n                /** @type {?} */\n                var blob = new Blob([resp], { type: 'application/vnd.ms-excel' });\n                saveAs(blob, 'Orders.xlsx');\n            }));\n        }\n    };\n    /**\n     * @param {?=} callback\n     * @return {?}\n     */\n    TreeTableData.prototype.loadData = /**\n     * @param {?=} callback\n     * @return {?}\n     */\n    function (callback) {\n        var _this = this;\n        if (this.serverConfig.url === null) {\n            console.warn('URL not specified');\n            return;\n        }\n        /** @type {?} */\n        var params = this.getParams();\n        if (this.lastParams !== undefined && this.lastParams !== null) {\n            if (this.lastParams === JSON.stringify(params)) {\n                return;\n            }\n        }\n        this.lastParams = JSON.stringify(params);\n        /** @type {?} */\n        var dis = this;\n        dis.isLoading = true;\n        dis.loadCounter++;\n        if (this.serverConfig.method === 'GET') {\n            this.http.get(this.serverConfig.url, { params: params }).subscribe((/**\n             * @param {?} resp\n             * @return {?}\n             */\n            function (resp) {\n                var e_2, _a;\n                if (callback !== undefined && callback !== null) {\n                    /** @type {?} */\n                    var rows = [];\n                    if (resp[_this.serverConfig.rowsKey] === undefined || resp[_this.serverConfig.rowsKey] === null) {\n                        callback([]);\n                        dis.loadCounter--;\n                        if (dis.loadCounter <= 0) {\n                            dis.isLoading = false;\n                            dis.loadCounter = 0;\n                        }\n                    }\n                    else {\n                        _this.totalRowsCount = resp[_this.serverConfig.totalRowsCountKey];\n                        _this.filteredRowsCount = resp[_this.serverConfig.filteredRowsCountKey];\n                        try {\n                            for (var _b = __values(resp[_this.serverConfig.rowsKey]), _c = _b.next(); !_c.done; _c = _b.next()) {\n                                var rawRow = _c.value;\n                                /** @type {?} */\n                                var uniqueVal = null;\n                                if (_this.serverConfig.rowUniqueKey === undefined || _this.serverConfig.rowUniqueKey === null) {\n                                    uniqueVal = new Date().getTime();\n                                }\n                                else {\n                                    uniqueVal = rawRow[_this.serverConfig.rowUniqueKey];\n                                }\n                                /** @type {?} */\n                                var row = new TreeTableRow(uniqueVal, rawRow, false, undefined);\n                                row.clickablesContext = _this.config.rowClickablesContext;\n                                row.clickables = _this.config.rowClickables;\n                                rows.push(row);\n                            }\n                        }\n                        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                        finally {\n                            try {\n                                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                            }\n                            finally { if (e_2) throw e_2.error; }\n                        }\n                        /** @type {?} */\n                        var lastRawRow = resp[_this.serverConfig.rowsKey][resp[_this.serverConfig.rowsKey].length - 1];\n                        if (lastRawRow !== undefined && lastRawRow !== null) {\n                            if (_this.serverConfig.rowUniqueKey !== undefined && _this.serverConfig.rowUniqueKey !== null) {\n                                _this.tokens[_this.page] = lastRawRow[_this.serverConfig.rowUniqueKey];\n                            }\n                        }\n                        callback(rows);\n                        dis.loadCounter--;\n                        if (dis.loadCounter <= 0) {\n                            dis.isLoading = false;\n                            dis.loadCounter = 0;\n                        }\n                    }\n                }\n                else {\n                    dis.loadCounter--;\n                    if (dis.loadCounter <= 0) {\n                        dis.isLoading = false;\n                        dis.loadCounter = 0;\n                    }\n                }\n            }), (/**\n             * @param {?} err\n             * @return {?}\n             */\n            function (err) {\n                dis.loadCounter--;\n                if (dis.loadCounter <= 0) {\n                    dis.isLoading = false;\n                    dis.loadCounter = 0;\n                }\n            }));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    TreeTableData.prototype.allRowsExpanded = /**\n     * @return {?}\n     */\n    function () {\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    TreeTableData.prototype.allRowsCollapsed = /**\n     * @return {?}\n     */\n    function () {\n        return false;\n    };\n    /**\n     * @param {?} msg\n     * @return {?}\n     */\n    TreeTableData.prototype.splashMessage = /**\n     * @param {?} msg\n     * @return {?}\n     */\n    function (msg) {\n        this.splashMessageContent = msg;\n        this.splashMessageFlag = true;\n        /** @type {?} */\n        var dis = this;\n        setTimeout((/**\n         * @return {?}\n         */\n        function () {\n            dis.splashMessageFlag = false;\n        }), 2000);\n    };\n    return TreeTableData;\n}());\nif (false) {\n    /** @type {?} */\n    TreeTableData.prototype.headers;\n    /** @type {?} */\n    TreeTableData.prototype.data;\n    /** @type {?} */\n    TreeTableData.prototype.isLoading;\n    /** @type {?} */\n    TreeTableData.prototype.keyword;\n    /** @type {?} */\n    TreeTableData.prototype.page;\n    /** @type {?} */\n    TreeTableData.prototype.pageSize;\n    /** @type {?} */\n    TreeTableData.prototype.lastParams;\n    /** @type {?} */\n    TreeTableData.prototype.totalRowsCount;\n    /** @type {?} */\n    TreeTableData.prototype.filteredRowsCount;\n    /** @type {?} */\n    TreeTableData.prototype.splashMessageFlag;\n    /** @type {?} */\n    TreeTableData.prototype.splashMessageContent;\n    /** @type {?} */\n    TreeTableData.prototype.tokens;\n    /** @type {?} */\n    TreeTableData.prototype.isAllRowsExpanded;\n    /** @type {?} */\n    TreeTableData.prototype.serverConfig;\n    /** @type {?} */\n    TreeTableData.prototype.config;\n    /** @type {?} */\n    TreeTableData.prototype.loadCounter;\n    /**\n     * @type {?}\n     * @private\n     */\n    TreeTableData.prototype.http;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {string} */\nvar TtDataType = {\n    NUMBER: 'NUMBER',\n    TEXT: 'TEXT',\n    DATE: 'DATE',\n    ACTIONS: 'ACTIONS',\n    SELECT: 'SELECT',\n    INPUT_TEXT: 'INPUT_TEXT',\n    INPUT_SELECT: 'INPUT_SELECT',\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {number} */\nvar TreeTableRowActionType = {\n    BUTTON: 0, LINK: 1, TOGGLE_CHILD: 2, TOGGLE_SELECT: 3,\n};\nTreeTableRowActionType[TreeTableRowActionType.BUTTON] = 'BUTTON';\nTreeTableRowActionType[TreeTableRowActionType.LINK] = 'LINK';\nTreeTableRowActionType[TreeTableRowActionType.TOGGLE_CHILD] = 'TOGGLE_CHILD';\nTreeTableRowActionType[TreeTableRowActionType.TOGGLE_SELECT] = 'TOGGLE_SELECT';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar moment = moment_;\nvar AngularTreeTableComponent = /** @class */ (function () {\n    function AngularTreeTableComponent(differs) {\n        this.differs = differs;\n        this.tableData = new TreeTableData();\n        this.filteredData = [];\n        this.className = '';\n        this.randomInstance = null;\n        this.dropdownHideListenerAdded = false;\n        this.currentPageData = new TreeTableData();\n        this.json = null;\n        this.extraInfoItemWidthPercent = 100;\n        this.rowSelectionChanged = new EventEmitter();\n        this.inputRowSelectChanged = new EventEmitter();\n        this.inputRowTextChanged = new EventEmitter();\n        this.json = JSON;\n    }\n    /**\n     * @return {?}\n     */\n    AngularTreeTableComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        this.validateData();\n        this.setPageData(this.tableData.page);\n        this.className = 'table-tree level' + this.tableData.config.level;\n        if (this.tableData.config.level === 0) {\n            console.warn('Initialize Search Functionality');\n        }\n        this.dataDiffers = this.differs.find(this.tableData).create();\n        this.columnFiltersDiffers = this.differs.find(this.tableData.config.columnFilters).create();\n        this.randomInstance = Math.floor(Math.random() * Math.floor(9999));\n        this.extraInfoItemWidthPercent = 100 / this.tableData.config.extraInfos.length;\n        this.redefineTableDataFunctions();\n    };\n    /**\n     * @return {?}\n     */\n    AngularTreeTableComponent.prototype.redefineTableDataFunctions = /**\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var dis = this;\n        this.tableData.allRowsCollapsed = (/**\n         * @return {?}\n         */\n        function () {\n            return dis.currentPageData.data.length === dis.currentPageData.data.filter((/**\n             * @param {?} v\n             * @return {?}\n             */\n            function (v) { return !v.expanded; })).length;\n        });\n        this.tableData.allRowsExpanded = (/**\n         * @return {?}\n         */\n        function () {\n            return dis.currentPageData.data.length === dis.currentPageData.data.filter((/**\n             * @param {?} v\n             * @return {?}\n             */\n            function (v) { return v.expanded; })).length;\n        });\n    };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    AngularTreeTableComponent.prototype.dataChanged = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        this.redefineTableDataFunctions();\n        this.setPageData(this.tableData.page);\n    };\n    /**\n     * @return {?}\n     */\n    AngularTreeTableComponent.prototype.refreshTable = /**\n     * @return {?}\n     */\n    function () {\n        this.setPageData(this.tableData.page);\n    };\n    /**\n     * @return {?}\n     */\n    AngularTreeTableComponent.prototype.ngDoCheck = /**\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var changes = this.dataDiffers.diff(this.tableData);\n        if (changes) {\n            this.dataChanged(changes);\n        }\n        changes = this.columnFiltersDiffers.diff(this.tableData.config.columnFilters);\n        if (changes) {\n            this.dataChanged(changes);\n        }\n        if (!this.dropdownHideListenerAdded) {\n            $('#dropDownVisCon' + this.randomInstance).on('hide.bs.dropdown', (/**\n             * @param {?} e\n             * @return {?}\n             */\n            function (e) {\n                if (e.clickEvent !== undefined) {\n                    if ($(e.clickEvent.target).hasClass('btnVis')) {\n                        return false;\n                    }\n                }\n                this.dropdownHideListenerAdded = true;\n                return true;\n            }));\n        }\n    };\n    /**\n     * @param {?} row\n     * @return {?}\n     */\n    AngularTreeTableComponent.prototype.expandRow = /**\n     * @param {?} row\n     * @return {?}\n     */\n    function (row) {\n        row.expanded = true;\n        if (this.tableData.config.events.rowExpanded !== null) {\n            this.tableData.config.events.rowExpanded(row, this.tableData);\n        }\n    };\n    /**\n     * @param {?} row\n     * @return {?}\n     */\n    AngularTreeTableComponent.prototype.collapseRow = /**\n     * @param {?} row\n     * @return {?}\n     */\n    function (row) {\n        row.expanded = false;\n        this.tableData.isAllRowsExpanded = false;\n        if (this.tableData.config.events.rowCollapsed !== null) {\n            this.tableData.config.events.rowCollapsed(row, this.tableData);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    AngularTreeTableComponent.prototype.expandAllRows = /**\n     * @return {?}\n     */\n    function () {\n        this.expandAllRowsInData(this.currentPageData.data);\n        this.tableData.isAllRowsExpanded = true;\n    };\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    AngularTreeTableComponent.prototype.expandAllRowsInData = /**\n     * @param {?} data\n     * @return {?}\n     */\n    function (data) {\n        var e_1, _a;\n        try {\n            for (var data_1 = __values(data), data_1_1 = data_1.next(); !data_1_1.done; data_1_1 = data_1.next()) {\n                var row = data_1_1.value;\n                if (row.expandable) {\n                    if (row.children !== null) {\n                        if (row.children.data !== null) {\n                            if (this.tableData.config.showExpandAllEmptyChildren) {\n                                // row.expanded = true;\n                                this.expandRow(row);\n                                this.expandAllRowsInData(row.children.data);\n                                row.children.isAllRowsExpanded = true;\n                            }\n                            else {\n                                if (row.children.data.length > 0) {\n                                    // row.expanded = true;\n                                    this.expandRow(row);\n                                    this.expandAllRowsInData(row.children.data);\n                                    row.children.isAllRowsExpanded = true;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (data_1_1 && !data_1_1.done && (_a = data_1.return)) _a.call(data_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    AngularTreeTableComponent.prototype.collapseAllRows = /**\n     * @return {?}\n     */\n    function () {\n        this.collapseAllRowsInData(this.currentPageData.data);\n        this.tableData.isAllRowsExpanded = false;\n    };\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    AngularTreeTableComponent.prototype.collapseAllRowsInData = /**\n     * @param {?} data\n     * @return {?}\n     */\n    function (data) {\n        var e_2, _a;\n        try {\n            for (var data_2 = __values(data), data_2_1 = data_2.next(); !data_2_1.done; data_2_1 = data_2.next()) {\n                var row = data_2_1.value;\n                if (row.expandable) {\n                    if (row.children !== null) {\n                        if (row.children.data !== null) {\n                            if (this.tableData.config.showExpandAllEmptyChildren) {\n                                // row.expanded = false;\n                                this.collapseRow(row);\n                                this.collapseAllRowsInData(row.children.data);\n                                row.children.isAllRowsExpanded = false;\n                            }\n                            else {\n                                if (row.children.data.length > 0) {\n                                    // row.expanded = false;\n                                    this.collapseRow(row);\n                                    this.collapseAllRowsInData(row.children.data);\n                                    row.children.isAllRowsExpanded = false;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (data_2_1 && !data_2_1.done && (_a = data_2.return)) _a.call(data_2);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n    };\n    /**\n     * @param {?} row\n     * @return {?}\n     */\n    AngularTreeTableComponent.prototype.toggleRow = /**\n     * @param {?} row\n     * @return {?}\n     */\n    function (row) {\n        row.expanded ? this.collapseRow(row) : this.expandRow(row);\n    };\n    /**\n     * @param {?} row\n     * @param {?} action\n     * @return {?}\n     */\n    AngularTreeTableComponent.prototype.rowAction = /**\n     * @param {?} row\n     * @param {?} action\n     * @return {?}\n     */\n    function (row, action) {\n        if (action.type === TreeTableRowActionType.TOGGLE_CHILD) {\n            this.toggleRow(row);\n        }\n        if (action.action !== undefined && action.action !== null) {\n            action.action.bind(action.context, row.data, action)();\n        }\n    };\n    /**\n     * @param {?} page\n     * @return {?}\n     */\n    AngularTreeTableComponent.prototype.changePage = /**\n     * @param {?} page\n     * @return {?}\n     */\n    function (page) {\n        if (this.tableData.page === page || page < 1) {\n            return;\n        }\n        if (page > this.tableData.totalPagesCount()) {\n            return;\n        }\n        // if (this.currentPageData.data.length < this.tableData.pageSize && this.tableData.page < page) {\n        //   this.tableData.splashMessage('Reached last page');\n        //   return;\n        // }\n        this.setPageData(page);\n        this.collapseAllRows();\n    };\n    /**\n     * @param {?} pageNumber\n     * @return {?}\n     */\n    AngularTreeTableComponent.prototype.setPageData = /**\n     * @param {?} pageNumber\n     * @return {?}\n     */\n    function (pageNumber) {\n        var _this = this;\n        this.extraInfoItemWidthPercent = 100 / this.tableData.config.extraInfos.length;\n        /** @type {?} */\n        var dis = this;\n        if (this.tableData.serverConfig.url !== undefined && this.tableData.serverConfig.url !== null) {\n            if (pageNumber !== 1) {\n                if ((pageNumber - 1) * this.tableData.pageSize > this.tableData.totalRowsCount) {\n                    console.warn('Invalid Page', (pageNumber - 1) * this.tableData.pageSize, this.tableData.totalRowsCount);\n                    return;\n                }\n            }\n            this.tableData.page = pageNumber;\n            this.tableData.loadData((/**\n             * @param {?} rows\n             * @return {?}\n             */\n            function (rows) {\n                var e_3, _a;\n                // if (rows.length === 0) {\n                //   dis.changePage(dis.tableData.page - 1);\n                //   dis.tableData.splashMessage('Reached last page');\n                //   console.warn('No data on the next page');\n                //   // return;\n                // }\n                dis.filteredData.splice(0, _this.filteredData.length);\n                try {\n                    for (var rows_1 = __values(rows), rows_1_1 = rows_1.next(); !rows_1_1.done; rows_1_1 = rows_1.next()) {\n                        var row = rows_1_1.value;\n                        dis.filteredData.push(row);\n                    }\n                }\n                catch (e_3_1) { e_3 = { error: e_3_1 }; }\n                finally {\n                    try {\n                        if (rows_1_1 && !rows_1_1.done && (_a = rows_1.return)) _a.call(rows_1);\n                    }\n                    finally { if (e_3) throw e_3.error; }\n                }\n                /** @type {?} */\n                var rowsCount = dis.filteredData.length;\n                // dis.tableData.pagesCount = Math.floor(rowsCount / this.tableData.pageSize);\n                // if (dis.tableData.pageSize * dis.tableData.pagesCount < rowsCount) {\n                //   dis.tableData.pagesCount++;\n                // }\n                dis.currentPageData.headers = dis.tableData.headers;\n                /** @type {?} */\n                var startIndex = (pageNumber - 1) * _this.tableData.pageSize;\n                if (_this.currentPageData.data === undefined) {\n                    _this.currentPageData.data = [];\n                }\n                _this.currentPageData.data.splice(0, _this.currentPageData.data.length);\n                for (var i = 0; i < parseInt(_this.tableData.pageSize + '', 10); i++) {\n                    // console.log('Adding Vvalue', this.filteredData[i], i);\n                    if (_this.filteredData[i] !== null && _this.filteredData[i] !== undefined) {\n                        _this.currentPageData.data.push(_this.filteredData[i]);\n                    }\n                }\n            }));\n        }\n        else {\n            dis.tableData.totalRowsCount = dis.tableData.data.length;\n            if (pageNumber !== 1) {\n                if ((pageNumber - 1) * this.tableData.pageSize > this.tableData.totalRowsCount) {\n                    console.warn('Invalid Page', (pageNumber - 1) * this.tableData.pageSize, this.tableData.totalRowsCount);\n                    return;\n                }\n            }\n            this.tableData.page = pageNumber;\n            this.filteredData.splice(0, this.filteredData.length);\n            this.filteredData = this.tableData.data.filter((/**\n             * @param {?} v\n             * @return {?}\n             */\n            function (v) {\n                var e_4, _a, e_5, _b, e_6, _c, e_7, _d;\n                /** @type {?} */\n                var keys = Object.keys(v.data);\n                /** @type {?} */\n                var matched = false;\n                if (_this.tableData.keyword !== undefined && _this.tableData.keyword !== null && _this.tableData.keyword.trim() !== '') {\n                    try {\n                        for (var keys_1 = __values(keys), keys_1_1 = keys_1.next(); !keys_1_1.done; keys_1_1 = keys_1.next()) {\n                            var key = keys_1_1.value;\n                            if (v.data[key] === undefined || v.data[key] === null) {\n                                continue;\n                            }\n                            matched = v.data[key].toString().toLowerCase().indexOf(_this.tableData.keyword.toLowerCase()) > -1;\n                            if (matched) {\n                                break;\n                            }\n                        }\n                    }\n                    catch (e_4_1) { e_4 = { error: e_4_1 }; }\n                    finally {\n                        try {\n                            if (keys_1_1 && !keys_1_1.done && (_a = keys_1.return)) _a.call(keys_1);\n                        }\n                        finally { if (e_4) throw e_4.error; }\n                    }\n                }\n                else {\n                    matched = true;\n                }\n                if (matched && _this.tableData.config.columnFilters !== undefined && _this.tableData.config.columnFilters !== null) {\n                    try {\n                        for (var keys_2 = __values(keys), keys_2_1 = keys_2.next(); !keys_2_1.done; keys_2_1 = keys_2.next()) {\n                            var key = keys_2_1.value;\n                            if (_this.tableData.config.columnFilters[key] !== undefined &&\n                                _this.tableData.config.columnFilters[key] !== null &&\n                                Array.isArray(_this.tableData.config.columnFilters[key])) {\n                                if (v.data[key] === undefined || v.data[key] === null) {\n                                    matched = false;\n                                    break;\n                                }\n                                /** @type {?} */\n                                var orMatch = false;\n                                try {\n                                    for (var _e = (e_6 = void 0, __values(_this.tableData.config.columnFilters[key])), _f = _e.next(); !_f.done; _f = _e.next()) {\n                                        var orFilter = _f.value;\n                                        orMatch = v.data[key].toString().toLowerCase().indexOf(orFilter.toLowerCase()) > -1;\n                                        if (orMatch) {\n                                            break;\n                                        }\n                                    }\n                                }\n                                catch (e_6_1) { e_6 = { error: e_6_1 }; }\n                                finally {\n                                    try {\n                                        if (_f && !_f.done && (_c = _e.return)) _c.call(_e);\n                                    }\n                                    finally { if (e_6) throw e_6.error; }\n                                }\n                                matched = orMatch;\n                                if (!matched) {\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    catch (e_5_1) { e_5 = { error: e_5_1 }; }\n                    finally {\n                        try {\n                            if (keys_2_1 && !keys_2_1.done && (_b = keys_2.return)) _b.call(keys_2);\n                        }\n                        finally { if (e_5) throw e_5.error; }\n                    }\n                }\n                if (matched && _this.tableData.config.visibleColumnFilters !== undefined && _this.tableData.config.visibleColumnFilters !== null) {\n                    try {\n                        for (var keys_3 = __values(keys), keys_3_1 = keys_3.next(); !keys_3_1.done; keys_3_1 = keys_3.next()) {\n                            var key = keys_3_1.value;\n                            if (_this.tableData.config.visibleColumnFilters[key] !== undefined &&\n                                _this.tableData.config.visibleColumnFilters[key] !== null &&\n                                _this.tableData.config.visibleColumnFilters[key].trim() !== '') {\n                                if (v.data[key] === undefined || v.data[key] === null) {\n                                    matched = false;\n                                    break;\n                                }\n                                matched = v.data[key].toString().toLowerCase().indexOf(_this.tableData.config.visibleColumnFilters[key].toLowerCase()) > -1;\n                                if (!matched) {\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    catch (e_7_1) { e_7 = { error: e_7_1 }; }\n                    finally {\n                        try {\n                            if (keys_3_1 && !keys_3_1.done && (_d = keys_3.return)) _d.call(keys_3);\n                        }\n                        finally { if (e_7) throw e_7.error; }\n                    }\n                }\n                return matched;\n            }));\n            /** @type {?} */\n            var rowsCount = dis.filteredData.length;\n            dis.tableData.filteredRowsCount = rowsCount;\n            // dis.tableData.pagesCount = Math.floor(rowsCount / this.tableData.pageSize);\n            // if (dis.tableData.pageSize * dis.tableData.pagesCount < rowsCount) {\n            //   dis.tableData.pagesCount++;\n            // }\n            dis.currentPageData.headers = dis.tableData.headers;\n            /** @type {?} */\n            var startIndex = (pageNumber - 1) * this.tableData.pageSize;\n            if (this.currentPageData.data === undefined) {\n                this.currentPageData.data = [];\n            }\n            this.currentPageData.data.splice(0, this.currentPageData.data.length);\n            for (var i = startIndex; i < parseInt(startIndex + '', 10) + parseInt(this.tableData.pageSize + '', 10); i++) {\n                if (this.filteredData[i] !== null && this.filteredData[i] !== undefined) {\n                    this.currentPageData.data.push(this.filteredData[i]);\n                }\n            }\n        }\n    };\n    /**\n     * @param {?} row\n     * @param {?} dataProperty\n     * @return {?}\n     */\n    AngularTreeTableComponent.prototype.clickableClicked = /**\n     * @param {?} row\n     * @param {?} dataProperty\n     * @return {?}\n     */\n    function (row, dataProperty) {\n        if (typeof row.clickables[dataProperty] === 'string') {\n            if (row.clickables[dataProperty] === TreeTableRowActionType.TOGGLE_CHILD.toString()) {\n                this.toggleRow(row);\n                return;\n            }\n        }\n        if (row.clickablesContext !== null) {\n            row.clickables[dataProperty].bind(row.clickablesContext, row.data, dataProperty)();\n        }\n        else {\n            row.clickables[dataProperty](row.data, dataProperty);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    AngularTreeTableComponent.prototype.validateData = /**\n     * @return {?}\n     */\n    function () {\n        console.warn('Data Schema need to be validated');\n    };\n    /**\n     * @param {?} dataProperty\n     * @return {?}\n     */\n    AngularTreeTableComponent.prototype.columnSearchChanged = /**\n     * @param {?} dataProperty\n     * @return {?}\n     */\n    function (dataProperty) {\n        this.setPageData(1);\n    };\n    /**\n     * @return {?}\n     */\n    AngularTreeTableComponent.prototype.pageNumbers = /**\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var pageNumbers = [];\n        /** @type {?} */\n        var limit = 2;\n        /** @type {?} */\n        var maxLimit = 4;\n        for (var p = this.tableData.page - limit; p < this.tableData.page; p++) {\n            if (p > 0) {\n                pageNumbers.push(p);\n            }\n        }\n        /** @type {?} */\n        var unfilledCount = limit - pageNumbers.length;\n        for (var q = this.tableData.page; q <= this.tableData.page + unfilledCount + limit; q++) {\n            if (q <= this.tableData.totalPagesCount()) {\n                pageNumbers.push(q);\n            }\n        }\n        if (pageNumbers.length < maxLimit) {\n            for (var p = this.tableData.page - limit * 2; p < this.tableData.page - limit; p++) {\n                if (p > 0) {\n                    pageNumbers.unshift(p);\n                }\n            }\n        }\n        return pageNumbers;\n    };\n    /**\n     * @return {?}\n     */\n    AngularTreeTableComponent.prototype.exportExcelLocal = /**\n     * @return {?}\n     */\n    function () {\n        var e_8, _a, e_9, _b;\n        /** @type {?} */\n        var dataRows = [];\n        try {\n            for (var _c = __values(this.tableData.data), _d = _c.next(); !_d.done; _d = _c.next()) {\n                var d = _d.value;\n                /** @type {?} */\n                var obj = {};\n                try {\n                    for (var _e = (e_9 = void 0, __values(this.tableData.headers)), _f = _e.next(); !_f.done; _f = _e.next()) {\n                        var h = _f.value;\n                        obj[h.title] = d.data[h.dataProperty];\n                    }\n                }\n                catch (e_9_1) { e_9 = { error: e_9_1 }; }\n                finally {\n                    try {\n                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                    }\n                    finally { if (e_9) throw e_9.error; }\n                }\n                dataRows.push(obj);\n            }\n        }\n        catch (e_8_1) { e_8 = { error: e_8_1 }; }\n        finally {\n            try {\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n            }\n            finally { if (e_8) throw e_8.error; }\n        }\n        /** @type {?} */\n        var fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\n        /** @type {?} */\n        var fileExtension = '.xlsx';\n        /** @type {?} */\n        var ws = utils.json_to_sheet(dataRows);\n        /** @type {?} */\n        var wb = { Sheets: { data: ws }, SheetNames: ['data'] };\n        /** @type {?} */\n        var excelBuffer = write(wb, { bookType: 'xlsx', type: 'array' });\n        /** @type {?} */\n        var data = new Blob([excelBuffer], { type: fileType });\n        saveAs(data, this.tableData.config.excelExportFileName + fileExtension);\n    };\n    /**\n     * @param {?} header\n     * @return {?}\n     */\n    AngularTreeTableComponent.prototype.sortColumn = /**\n     * @param {?} header\n     * @return {?}\n     */\n    function (header) {\n        /** @type {?} */\n        var propertyName = header.dataProperty;\n        if (this.tableData.config.sortedColumn[propertyName] === undefined) {\n            this.tableData.config.sortedColumn = {};\n            this.tableData.config.sortedColumn[propertyName] = 'DESC';\n            this.sortDescend(header);\n        }\n        else if (this.tableData.config.sortedColumn[propertyName] === 'DESC') {\n            this.tableData.config.sortedColumn[propertyName] = 'ASC';\n            this.sortAscend(header);\n        }\n        else {\n            delete this.tableData.config.sortedColumn[propertyName];\n        }\n    };\n    /**\n     * @param {?} header\n     * @return {?}\n     */\n    AngularTreeTableComponent.prototype.sortAscend = /**\n     * @param {?} header\n     * @return {?}\n     */\n    function (header) {\n        /** @type {?} */\n        var propertyName = header.dataProperty;\n        if (header.dataType === TtDataType.NUMBER) {\n            this.tableData.data.sort((/**\n             * @param {?} a\n             * @param {?} b\n             * @return {?}\n             */\n            function (a, b) {\n                if (parseFloat(a.data[propertyName]) < parseFloat(b.data[propertyName])) {\n                    return -1;\n                }\n                else if (parseFloat(a.data[propertyName]) > parseFloat(b.data[propertyName])) {\n                    return 1;\n                }\n                return 0;\n            }));\n        }\n        else if (header.dataType === TtDataType.DATE) {\n            this.tableData.data.sort((/**\n             * @param {?} a\n             * @param {?} b\n             * @return {?}\n             */\n            function (a, b) {\n                if (moment(a.data[propertyName]).toDate().getTime() < moment(b.data[propertyName]).toDate().getTime()) {\n                    return -1;\n                }\n                else if (moment(a.data[propertyName]).toDate().getTime() > moment(b.data[propertyName]).toDate().getTime()) {\n                    return 1;\n                }\n                return 0;\n            }));\n        }\n        else {\n            this.tableData.data.sort((/**\n             * @param {?} a\n             * @param {?} b\n             * @return {?}\n             */\n            function (a, b) {\n                if (a.data[propertyName] < b.data[propertyName]) {\n                    return -1;\n                }\n                else if (a.data[propertyName] > b.data[propertyName]) {\n                    return 1;\n                }\n                return 0;\n            }));\n        }\n        this.setPageData(this.tableData.page);\n    };\n    /**\n     * @param {?} header\n     * @return {?}\n     */\n    AngularTreeTableComponent.prototype.sortDescend = /**\n     * @param {?} header\n     * @return {?}\n     */\n    function (header) {\n        /** @type {?} */\n        var propertyName = header.dataProperty;\n        if (header.dataType === TtDataType.NUMBER) {\n            this.tableData.data.sort((/**\n             * @param {?} a\n             * @param {?} b\n             * @return {?}\n             */\n            function (a, b) {\n                if (parseFloat(a.data[propertyName]) < parseFloat(b.data[propertyName])) {\n                    return 1;\n                }\n                else if (parseFloat(a.data[propertyName]) > parseFloat(b.data[propertyName])) {\n                    return -1;\n                }\n                return 0;\n            }));\n        }\n        else if (header.dataType === TtDataType.DATE) {\n            this.tableData.data.sort((/**\n             * @param {?} a\n             * @param {?} b\n             * @return {?}\n             */\n            function (a, b) {\n                if (moment(a.data[propertyName]).toDate().getTime() < moment(b.data[propertyName]).toDate().getTime()) {\n                    return 1;\n                }\n                else if (moment(a.data[propertyName]).toDate().getTime() > moment(b.data[propertyName]).toDate().getTime()) {\n                    return -1;\n                }\n                return 0;\n            }));\n        }\n        else {\n            this.tableData.data.sort((/**\n             * @param {?} a\n             * @param {?} b\n             * @return {?}\n             */\n            function (a, b) {\n                if (a.data[propertyName] < b.data[propertyName]) {\n                    return 1;\n                }\n                else if (a.data[propertyName] > b.data[propertyName]) {\n                    return -1;\n                }\n                return 0;\n            }));\n        }\n        this.setPageData(this.tableData.page);\n    };\n    /**\n     * @return {?}\n     */\n    AngularTreeTableComponent.prototype.search = /**\n     * @return {?}\n     */\n    function () {\n        this.setPageData(1);\n    };\n    /**\n     * @return {?}\n     */\n    AngularTreeTableComponent.prototype.pageSizeChanged = /**\n     * @return {?}\n     */\n    function () {\n        this.setPageData(1);\n    };\n    /**\n     * @return {?}\n     */\n    AngularTreeTableComponent.prototype.excelExportClicked = /**\n     * @return {?}\n     */\n    function () {\n        if (this.tableData.serverConfig !== undefined && this.tableData.serverConfig !== null && this.tableData.serverConfig.excelExportUrl !== undefined && this.tableData.serverConfig.excelExportUrl !== null) {\n            this.tableData.loadExcelData();\n        }\n        else {\n            this.exportExcelLocal();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    AngularTreeTableComponent.prototype.getPageTo = /**\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var to = this.tableData.pageSize * this.tableData.page;\n        if (to > this.tableData.filteredRowsCount) {\n            to = this.tableData.filteredRowsCount;\n        }\n        return to;\n    };\n    /**\n     * @param {?} header\n     * @return {?}\n     */\n    AngularTreeTableComponent.prototype.isAllRowsSelected = /**\n     * @param {?} header\n     * @return {?}\n     */\n    function (header) {\n        return this.tableData.data.filter((/**\n         * @param {?} v\n         * @return {?}\n         */\n        function (v) { return v.selected; })).length === this.tableData.data.length;\n    };\n    /**\n     * @param {?} header\n     * @return {?}\n     */\n    AngularTreeTableComponent.prototype.toggleSelectAllRows = /**\n     * @param {?} header\n     * @return {?}\n     */\n    function (header) {\n        this.isAllRowsSelected(header) ? this.deselectAllRows(header) : this.selectAllRows(header);\n    };\n    /**\n     * @private\n     * @param {?} header\n     * @return {?}\n     */\n    AngularTreeTableComponent.prototype.selectAllRows = /**\n     * @private\n     * @param {?} header\n     * @return {?}\n     */\n    function (header) {\n        this.tableData.data = this.tableData.data.map((/**\n         * @param {?} v\n         * @return {?}\n         */\n        function (v) { v.selected = true; return v; }));\n        this.updateHost();\n    };\n    /**\n     * @private\n     * @param {?} header\n     * @return {?}\n     */\n    AngularTreeTableComponent.prototype.deselectAllRows = /**\n     * @private\n     * @param {?} header\n     * @return {?}\n     */\n    function (header) {\n        this.tableData.data = this.tableData.data.map((/**\n         * @param {?} v\n         * @return {?}\n         */\n        function (v) { v.selected = false; return v; }));\n        this.updateHost();\n    };\n    /**\n     * @param {?} row\n     * @return {?}\n     */\n    AngularTreeTableComponent.prototype.toggleSelectRow = /**\n     * @param {?} row\n     * @return {?}\n     */\n    function (row) {\n        row.selected = !row.selected;\n        this.updateHost();\n    };\n    /**\n     * @param {?} row\n     * @return {?}\n     */\n    AngularTreeTableComponent.prototype.getRowClass = /**\n     * @param {?} row\n     * @return {?}\n     */\n    function (row) {\n        var e_10, _a;\n        /** @type {?} */\n        var classes = { 'expanded-row': row.expanded, 'collapsed-row': !row.expanded, 'selected': 'row.selected', 'unselected': '!row.selected' };\n        try {\n            for (var _b = __values(row.classes), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var cls = _c.value;\n                classes[cls] = true;\n            }\n        }\n        catch (e_10_1) { e_10 = { error: e_10_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_10) throw e_10.error; }\n        }\n        return classes;\n    };\n    /**\n     * @return {?}\n     */\n    AngularTreeTableComponent.prototype.getSelectedRows = /**\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var rows = __spread(this.tableData.data.filter((/**\n         * @param {?} v\n         * @return {?}\n         */\n        function (v) {\n            if (v.selected) {\n                return v.data;\n            }\n        })));\n        return rows.map((/**\n         * @param {?} v\n         * @return {?}\n         */\n        function (v) { return v.data; }));\n    };\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    AngularTreeTableComponent.prototype.childRowSelectionChanged = /**\n     * @param {?} data\n     * @return {?}\n     */\n    function (data) {\n        if (this.rowSelectionChanged !== undefined && this.rowSelectionChanged !== null) {\n            this.rowSelectionChanged.emit(data);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    AngularTreeTableComponent.prototype.updateHost = /**\n     * @return {?}\n     */\n    function () {\n        if (this.rowSelectionChanged !== undefined && this.rowSelectionChanged !== null) {\n            this.rowSelectionChanged.emit(this.getSelectedRows());\n        }\n    };\n    /**\n     * @param {?} event\n     * @param {?} rowData\n     * @param {?} headerKey\n     * @param {?} value\n     * @param {?} level\n     * @return {?}\n     */\n    AngularTreeTableComponent.prototype.inputRowSelectChangedInternal = /**\n     * @param {?} event\n     * @param {?} rowData\n     * @param {?} headerKey\n     * @param {?} value\n     * @param {?} level\n     * @return {?}\n     */\n    function (event, rowData, headerKey, value, level) {\n        this.inputRowSelectChanged.emit({ event: event, rowData: rowData, headerKey: headerKey, value: value, level: level });\n    };\n    /**\n     * @param {?} event\n     * @param {?} rowData\n     * @param {?} headerKey\n     * @param {?} value\n     * @param {?} level\n     * @return {?}\n     */\n    AngularTreeTableComponent.prototype.inputRowTextChangedInternal = /**\n     * @param {?} event\n     * @param {?} rowData\n     * @param {?} headerKey\n     * @param {?} value\n     * @param {?} level\n     * @return {?}\n     */\n    function (event, rowData, headerKey, value, level) {\n        this.inputRowTextChanged.emit({ event: event, rowData: rowData, headerKey: headerKey, value: value, level: level });\n    };\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    AngularTreeTableComponent.prototype.inputRowSelectChangedChild = /**\n     * @param {?} data\n     * @return {?}\n     */\n    function (data) {\n        this.inputRowSelectChanged.emit(data);\n    };\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    AngularTreeTableComponent.prototype.inputRowTextChangedChild = /**\n     * @param {?} data\n     * @return {?}\n     */\n    function (data) {\n        this.inputRowTextChanged.emit(data);\n    };\n    AngularTreeTableComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'angular-tree-table',\n                    template: \"<div class=\\\"tree-table\\\">\\r\\n  <div class=\\\"tree-table-loading\\\" [ngClass]=\\\"tableData.isLoading ? 'on' : 'off'\\\">\\r\\n    <div class=\\\"loader-msg\\\">\\r\\n      Loading...\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"action-container\\\">\\r\\n    <div class=\\\"search-section\\\" *ngIf=\\\"tableData.config.showPageLengthDropdown || tableData.config.commonSearch || tableData.config.excelExportButton\\\">\\r\\n      <div class=\\\"first-part\\\" *ngIf=\\\"tableData.config.showPageLengthDropdown\\\">\\r\\n        Show <select class=\\\"select-page-size form-control form-control-sm\\\" [(ngModel)]=\\\"tableData.pageSize\\\"\\r\\n          (change)=\\\"pageSizeChanged()\\\">\\r\\n          <option value=\\\"{{p}}\\\" *ngFor=\\\"let p of tableData.config.pageSizes\\\">{{p}}</option>\\r\\n        </select> Entries\\r\\n      </div>\\r\\n      <div class=\\\"second-part\\\">\\r\\n        <input *ngIf=\\\"tableData.config.commonSearch\\\" type=\\\"text\\\"\\r\\n          class=\\\"form-control form-control-sm text-center col-3 float-right\\\" [(ngModel)]=\\\"tableData.keyword\\\"\\r\\n          (keyup)=\\\"search()\\\" (change)=\\\"search()\\\" placeholder=\\\"Search\\\" />\\r\\n        <button *ngIf=\\\"tableData.config.excelExportButton\\\"\\r\\n          class=\\\"btn btn-sm btn-primary export excelExportButton float-right\\\" (click)=\\\"excelExportClicked()\\\">{{tableData.config.excelExportButtonText}}</button>\\r\\n        <div class=\\\"dropdown dropleft\\\" id=\\\"dropDownVisCon{{randomInstance}}\\\">\\r\\n          <button id=\\\"dropDownVis{{randomInstance}}\\\" *ngIf=\\\"tableData.config.columnVisibilityDropDown\\\"\\r\\n            class=\\\"btn btn-sm btn-secondary dropDownBtn v-elipses float-right dropdown-toggle\\\" data-toggle=\\\"dropdown\\\"\\r\\n            aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\u22EE</button>\\r\\n            <div class=\\\"dropDownBtn-data dropdown-menu\\\">\\r\\n              <button class=\\\"btnVis btn-sm btn\\\" *ngFor=\\\"let header of currentPageData.headers\\\"\\r\\n                [ngClass]=\\\"header.show ? 'active': ''\\\" (click)=\\\" header.show = !header.show;\\\">{{header.title}}</button>\\r\\n            </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"buttons-section\\\" *ngIf=\\\"tableData.config.columnVisibility\\\">\\r\\n      <div class=\\\"column-visibility\\\" *ngIf=\\\"tableData.config.columnVisibility\\\">\\r\\n        <button class=\\\"btnVis\\\" *ngFor=\\\"let header of currentPageData.headers\\\" [ngClass]=\\\"header.show ? 'active': ''\\\"\\r\\n          (click)=\\\"header.show = !header.show\\\">{{header.title}}</button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"extraInfo-section\\\" *ngIf=\\\"tableData.config.extraInfos.length > 0\\\">\\r\\n      <div class=\\\"extraInfo\\\" [style.width]=\\\"extraInfoItemWidthPercent + '%'\\\" *ngFor=\\\"let exInfo of tableData.config.extraInfos\\\">\\r\\n        {{exInfo[0]}}: {{exInfo[1]}}\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <table [class]=\\\"className + ' ' + tableData.config.customClassName + ' ' + tableData.config.fullClassName\\\">\\r\\n    <thead class=\\\"ds2-table-element--head-row thead-sm\\\" *ngIf=\\\"tableData.config.showTableHeaders\\\">\\r\\n      <tr>\\r\\n        <th *ngIf=\\\"!tableData.config.showExpandAllArrows\\\" [ngClass]=\\\"tableData.config.showExpandArrows ? 'used' : 'not-used'\\\"></th>\\r\\n        <th *ngIf=\\\"tableData.config.showExpandAllArrows\\\" [ngClass]=\\\"tableData.config.showExpandArrows ? 'used' : 'not-used'\\\">\\r\\n          <button class=\\\"btn btn-secondary btn-sm collapsed-row-button\\\" (click)=\\\"expandAllRows()\\\" \\r\\n                      *ngIf=\\\"!tableData.isAllRowsExpanded\\\"></button>\\r\\n              <button class=\\\"btn btn-secondary btn-sm expanded-row-button\\\" (click)=\\\"collapseAllRows()\\\" \\r\\n                      *ngIf=\\\"tableData.isAllRowsExpanded\\\"></button>\\r\\n        </th>\\r\\n        <ng-container *ngFor=\\\"let header of currentPageData.headers\\\">\\r\\n          <th *ngIf=\\\"header.show && header.dataType !== 'SELECT'\\\" [ngClass]=\\\"header.style\\\" (click)=\\\"sortColumn(header)\\\">{{header.title}}\\r\\n            <i [ngClass]=\\\"tableData.config.sortAscClassName+' sort-right-align'\\\" *ngIf=\\\"tableData.config.sortedColumn[header.dataProperty] === 'ASC'\\\"></i>\\r\\n            <i [ngClass]=\\\"tableData.config.sortDescClassName+' sort-right-align'\\\" *ngIf=\\\"tableData.config.sortedColumn[header.dataProperty] === 'DESC'\\\"></i>\\r\\n            <i [ngClass]=\\\"tableData.config.sortNothingClassName+' sort-right-align'\\\" *ngIf=\\\"tableData.config.sortedColumn[header.dataProperty] !== 'DESC' && tableData.config.sortedColumn[header.dataProperty] !== 'ASC'\\\"></i>\\r\\n          </th>\\r\\n          <th *ngIf=\\\"header.show && header.dataType === 'SELECT'\\\" [ngClass]=\\\"header.style\\\" (click)=\\\"toggleSelectAllRows(header)\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"header-check-box select-all\\\" [checked]=\\\"isAllRowsSelected(header) ? 'checked' : ''\\\"/> {{header.title}}\\r\\n          </th>\\r\\n        </ng-container>\\r\\n      </tr>\\r\\n      <tr *ngIf=\\\"tableData.config.visibleColumnFiltersVisibility\\\">\\r\\n        <th [ngClass]=\\\"tableData.config.showExpandArrows ? 'used' : 'not-used'\\\"></th>\\r\\n        <ng-container *ngFor=\\\"let header of currentPageData.headers\\\">\\r\\n          <th *ngIf=\\\"header.show\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control form-control-sm text-center\\\" placeholder=\\\"{{header.title}}\\\"\\r\\n              (change)=\\\"columnSearchChanged(header.dataProperty)\\\" (keyup)=\\\"columnSearchChanged(header.dataProperty)\\\"\\r\\n              [(ngModel)]=\\\"tableData.config.visibleColumnFilters[header.dataProperty]\\\"\\r\\n              [disabled]=\\\"!header.enableColumnSearch || header.dataType === 'SELECT'\\\" [name]=\\\"'filter_'+header.dataProperty\\\" />\\r\\n          </th>\\r\\n        </ng-container>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n      <ng-container *ngIf=\\\"currentPageData.data.length === 0\\\">\\r\\n        <tr *ngIf=\\\"tableData.isLoading\\\">\\r\\n          <td [ngClass]=\\\"tableData.config.showExpandArrows ? 'used' : 'not-used'\\\"></td>\\r\\n          <td [attr.colspan]=\\\"currentPageData.headers.length + 1\\\" style=\\\"text-align: center;\\\">\\r\\n            Loading...\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr *ngIf=\\\"!tableData.isLoading\\\">\\r\\n          <td [ngClass]=\\\"tableData.config.showExpandArrows ? 'used' : 'not-used'\\\"></td>\\r\\n          <td [attr.colspan]=\\\"currentPageData.headers.length + 1\\\" style=\\\"text-align: center;\\\">\\r\\n            No records found\\r\\n          </td>\\r\\n        </tr>\\r\\n      </ng-container>\\r\\n      <ng-container *ngFor=\\\"let row of currentPageData.data; let indi = index;\\\">\\r\\n        <ng-container *ngIf=\\\"row !== undefined\\\">\\r\\n          <tr [ngClass]=\\\"getRowClass(row)\\\">\\r\\n            <td *ngIf=\\\"!row.expandable\\\" [ngClass]=\\\"tableData.config.showExpandArrows ? 'used' : 'not-used'\\\"></td>\\r\\n            <td *ngIf=\\\"row.expandable\\\" [ngClass]=\\\"tableData.config.showExpandArrows ? 'used' : 'not-used'\\\">\\r\\n              <button class=\\\"btn btn-secondary btn-sm collapsed-row-button\\\" (click)=\\\"expandRow(row)\\\" \\r\\n                      *ngIf=\\\"!row.expanded\\\"></button>\\r\\n              <button class=\\\"btn btn-secondary btn-sm expanded-row-button\\\" (click)=\\\"collapseRow(row)\\\" \\r\\n                      *ngIf=\\\"row.expanded\\\"></button>\\r\\n            </td>\\r\\n            <ng-container *ngFor=\\\"let header of currentPageData.headers\\\">\\r\\n              <td *ngIf=\\\"header.show\\\" [style]=\\\"row.styles[header.dataProperty]\\\"\\r\\n                [ngClass]=\\\"row.classes[header.dataProperty]\\\">\\r\\n                <ng-container *ngIf=\\\"header.dataType === 'ACTIONS'\\\">\\r\\n                  <button class=\\\"tt-row-action  btn-xs btn btn-default\\\" *ngFor=\\\"let action of row.actions\\\"\\r\\n                    [ngClass]=\\\"action.classes\\\" (click)=\\\"rowAction(row, action)\\\" [title]=\\\"action.title\\\">\\r\\n                    {{action.label}}\\r\\n                  </button>\\r\\n                </ng-container>\\r\\n                <ng-container *ngIf=\\\"header.dataType === 'SELECT'\\\">\\r\\n                  <input type=\\\"checkbox\\\" class=\\\"header-check-box select-one\\\" \\r\\n                         [checked]=\\\"row.selected ? 'checked' : ''\\\" \\r\\n                         (change)=\\\"toggleSelectRow(row)\\\"/>\\r\\n                </ng-container>\\r\\n                <ng-container *ngIf=\\\"header.dataType === 'INPUT_TEXT'\\\">\\r\\n                  <input type=\\\"text\\\" class=\\\"header-input-text tt-input-tag\\\" [(ngModel)]=\\\"row.data[header.dataProperty]\\\" [name]=\\\"indi + '_' + header.dataProperty\\\" (change)=\\\"inputRowTextChangedInternal($event, row.data, header.dataProperty, row.data[header.dataProperty], tableData.config.level)\\\"/>\\r\\n                </ng-container>\\r\\n                <ng-container *ngIf=\\\"header.dataType === 'INPUT_SELECT'\\\">\\r\\n                  <select class=\\\"header-input-select tt-select-tag\\\" [(ngModel)]=\\\"row.data[header.dataProperty]\\\" [name]=\\\"indi + '_' + header.dataProperty\\\" (change)=\\\"inputRowSelectChangedInternal($event, row.data, header.dataProperty, row.data[header.dataProperty], tableData.config.level)\\\">\\r\\n                    <ng-container *ngIf=\\\"row.options !== undefined && row.options !== null\\\">\\r\\n                      <option [value]=\\\"opt.value\\\" *ngFor=\\\"let opt of row.options\\\">{{opt.displayText}}</option>\\r\\n                    </ng-container>\\r\\n                  </select>\\r\\n                </ng-container>\\r\\n                <ng-container *ngIf=\\\"header.dataType !== 'ACTIONS' && header.dataType !== 'SELECT'\\\">\\r\\n                  <ng-container *ngIf=\\\"row.clickables[header.dataProperty] !== undefined\\\">\\r\\n                    <button class=\\\"popup-link-button\\\"\\r\\n                      (click)=\\\"clickableClicked(row, header.dataProperty)\\\">{{row.data[header.dataProperty]}}</button>\\r\\n                  </ng-container>\\r\\n                  <ng-container *ngIf=\\\"row.clickables[header.dataProperty] === undefined && header.dataType !== 'INPUT_TEXT' && header.dataType !== 'INPUT_SELECT'\\\">\\r\\n                    {{row.data[header.dataProperty]}}\\r\\n                  </ng-container>\\r\\n                </ng-container>\\r\\n              </td>\\r\\n            </ng-container>\\r\\n          </tr>\\r\\n          <tr *ngIf=\\\"row.expanded\\\" [ngClass]=\\\"row.expanded ? 'expanded-row-content' : 'collapsed-row-content'\\\">\\r\\n            <td style=\\\"width: 10px;\\\"></td>\\r\\n            <td [colSpan]=\\\"currentPageData.headers.length\\\">\\r\\n              <angular-tree-table (inputRowSelectChanged)=\\\"inputRowSelectChangedChild($event)\\\" (inputRowTextChanged)=\\\"inputRowTextChangedChild($event)\\\" (rowSelectionChanged)=\\\"childRowSelectionChanged($event)\\\" [tableData]=\\\"row.children\\\"></angular-tree-table>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-container>\\r\\n      </ng-container>\\r\\n    </tbody>\\r\\n  </table>\\r\\n  <div class=\\\"table-bottom\\\">\\r\\n    <div class=\\\"page-number-status\\\">\\r\\n      Showing {{(tableData.pageSize * (tableData.page - 1)) + 1}} to {{getPageTo()}} of\\r\\n      <ng-container *ngIf=\\\"tableData.filteredRowsCount != tableData.totalRowsCount\\\">\\r\\n        {{tableData.filteredRowsCount}} rows filtered on {{tableData.totalRowsCount}}\\r\\n      </ng-container>\\r\\n      <ng-container *ngIf=\\\"tableData.filteredRowsCount === tableData.totalRowsCount\\\">\\r\\n        {{tableData.filteredRowsCount}}\\r\\n      </ng-container>\\r\\n      rows\\r\\n    </div>\\r\\n    <div class=\\\"pagination-buttons\\\" *ngIf=\\\"tableData.totalRowsCount > tableData.pageSize\\\">\\r\\n      <div [class]=\\\"tableData.splashMessageFlag ? 'splash-message show' : 'splash-message hide'\\\">\\r\\n        <div class=\\\"message-content\\\">{{tableData.splashMessageContent}}</div>\\r\\n      </div>\\r\\n      <div class=\\\"btn btnGroup btn-group\\\">\\r\\n        <button class=\\\"btn big\\\" [class]=\\\"tableData.page === 1 ? 'btn big btn-secondary ' : 'btn big btn-secondary '\\\"\\r\\n          (click)=\\\"changePage(1)\\\">First</button>\\r\\n        <button class=\\\"btn\\\" [class]=\\\"'btn btn-secondary'\\\" (click)=\\\"changePage(tableData.page - 1)\\\">&lt;</button>\\r\\n        <ng-container *ngFor=\\\"let pageNumber of pageNumbers()\\\">\\r\\n          <button class=\\\"btn\\\" [class]=\\\"tableData.page === pageNumber ? 'btn btn-primary ' : 'btn btn-secondary '\\\"\\r\\n            (click)=\\\"changePage(pageNumber)\\\">{{pageNumber}}</button>\\r\\n        </ng-container>\\r\\n        <button class=\\\"btn\\\" [class]=\\\"'btn btn-secondary'\\\" (click)=\\\"changePage(tableData.page + 1)\\\">&gt;</button>\\r\\n        <button class=\\\"btn big\\\"\\r\\n          [class]=\\\"tableData.page === tableData.totalPagesCount() ? 'btn big btn-secondary ' : 'btn big btn-secondary '\\\"\\r\\n          (click)=\\\"changePage(tableData.totalPagesCount())\\\">Last</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\",\n                    styles: [\":host .dropDownBtn-data{overflow:visible;padding:5px}:host .tree-table-loading{width:100%;background-color:rgba(0,0,0,.5);overflow:auto;position:absolute}:host .tree-table-loading .loader-msg{color:#fff;font-weight:700;text-align:center;width:100%;height:100px;position:absolute;top:calc(50% - 50px)}:host .tree-table-loading.on{height:100%;z-index:1000}:host .tree-table-loading.off{height:0%}:host .tree-table{margin-top:10px;margin-bottom:10px;overflow:auto;position:relative}:host .tree-table .select-page-size{display:inline-block;width:auto}:host .tree-table .extraInfo-section .extraInfo{float:left}:host .tree-table .column-visibility{text-align:center}:host .tree-table .column-visibility .btnVis,:host .tree-table .dropDownBtn-data .btnVis{border-style:none;padding:7px;border-radius:2px;margin-right:5px;margin-bottom:5px}:host .tree-table .column-visibility .btnVis.active,:host .tree-table .column-visibility .btnVis.hover,:host .tree-table .column-visibility .btnVis:active,:host .tree-table .column-visibility .btnVis:hover,:host .tree-table .dropDownBtn-data .btnVis.active,:host .tree-table .dropDownBtn-data .btnVis.hover,:host .tree-table .dropDownBtn-data .btnVis:active,:host .tree-table .dropDownBtn-data .btnVis:hover{background-color:#666;color:#fff}:host .tree-table .action-container .btn{margin-right:5px}:host .tree-table .action-container .search-section{overflow:visible;margin-top:10px;margin-bottom:5px}:host .tree-table .action-container .search-section .first-part{width:40%;text-align:left;display:inline-block}:host .tree-table .action-container .search-section .second-part{width:60%;display:inline-block}:host .tree-table .table-bottom{overflow:auto}:host .tree-table .table-bottom .page-number-status{float:left;overflow:auto;padding-top:.375rem}:host .tree-table .table-bottom .btnGroup{float:right;padding-right:0;padding-top:0;padding-bottom:0}:host .tree-table .table-bottom .pagination-buttons{overflow:auto;position:relative}:host .tree-table .table-bottom .pagination-buttons .splash-message{float:right;position:absolute;right:0;z-index:9999;background:#ececec;border-radius:3px;color:#86adef;font-weight:700;padding:5.5px 15px;transition:opacity 1s ease-in-out}:host .tree-table .table-bottom .pagination-buttons .splash-message.show{opacity:1}:host .tree-table .table-bottom .pagination-buttons .splash-message.hide{padding:0;opacity:0}:host .tree-table .table-bottom .pagination-buttons button{width:48px}:host .tree-table .table-bottom .pagination-buttons button.big{width:50px}:host .tree-table table{width:100%;text-align:center;border-collapse:collapse;margin-bottom:5px}:host .tree-table table th{cursor:pointer;-moz-user-select:none;user-select:none;-ms-user-select:none;-webkit-user-select:none;font-weight:700}:host .tree-table table .expanded-row-content{background:0 0}:host .tree-table table tr>td:first-child.not-used,:host .tree-table table tr>th:first-child.not-used{display:none}:host .tree-table table tr>td:first-child.used,:host .tree-table table tr>th:first-child.used{width:50px}:host .tree-table table tr>td:first-child.used .collapsed-row-button:after,:host .tree-table table tr>th:first-child.used .collapsed-row-button:after{content:\\\"\\\";width:0;height:0;border-top:5px solid transparent;border-bottom:5px solid transparent;border-left:5px solid #fff;display:inline-block}:host .tree-table table tr>td:first-child.used .expanded-row-button:after,:host .tree-table table tr>th:first-child.used .expanded-row-button:after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid #fff;display:inline-block}:host .tree-table table tr .tt-row-action{margin-right:5px}:host .tree-table table td button.popup-link-button{border-style:none!important;background:0 0!important;color:#86adef!important}\"]\n                }] }\n    ];\n    /** @nocollapse */\n    AngularTreeTableComponent.ctorParameters = function () { return [\n        { type: KeyValueDiffers }\n    ]; };\n    AngularTreeTableComponent.propDecorators = {\n        tableData: [{ type: Input }],\n        rowSelectionChanged: [{ type: Output }],\n        inputRowSelectChanged: [{ type: Output }],\n        inputRowTextChanged: [{ type: Output }]\n    };\n    return AngularTreeTableComponent;\n}());\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    AngularTreeTableComponent.prototype.dataDiffers;\n    /** @type {?} */\n    AngularTreeTableComponent.prototype.tableData;\n    /** @type {?} */\n    AngularTreeTableComponent.prototype.filteredData;\n    /** @type {?} */\n    AngularTreeTableComponent.prototype.className;\n    /** @type {?} */\n    AngularTreeTableComponent.prototype.randomInstance;\n    /** @type {?} */\n    AngularTreeTableComponent.prototype.dropdownHideListenerAdded;\n    /** @type {?} */\n    AngularTreeTableComponent.prototype.currentPageData;\n    /**\n     * @type {?}\n     * @private\n     */\n    AngularTreeTableComponent.prototype.columnFiltersDiffers;\n    /** @type {?} */\n    AngularTreeTableComponent.prototype.json;\n    /** @type {?} */\n    AngularTreeTableComponent.prototype.extraInfoItemWidthPercent;\n    /** @type {?} */\n    AngularTreeTableComponent.prototype.rowSelectionChanged;\n    /** @type {?} */\n    AngularTreeTableComponent.prototype.inputRowSelectChanged;\n    /** @type {?} */\n    AngularTreeTableComponent.prototype.inputRowTextChanged;\n    /**\n     * @type {?}\n     * @private\n     */\n    AngularTreeTableComponent.prototype.differs;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar AngularTreeTableModule = /** @class */ (function () {\n    function AngularTreeTableModule() {\n    }\n    AngularTreeTableModule.decorators = [\n        { type: NgModule, args: [{\n                    declarations: [AngularTreeTableComponent],\n                    imports: [\n                        FormsModule,\n                        CommonModule\n                    ],\n                    exports: [\n                        AngularTreeTableComponent\n                    ]\n                },] }\n    ];\n    return AngularTreeTableModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar TreeTableHeaderObject = /** @class */ (function () {\n    function TreeTableHeaderObject(title, dataProperty, style, show) {\n        this.dataType = TtDataType.TEXT;\n        this.enableColumnSearch = true; //It will take effect when column search is enabled in data\n        this.dataProperty = dataProperty;\n        this.title = title;\n        this.style = style;\n        this.show = show;\n    }\n    return TreeTableHeaderObject;\n}());\nif (false) {\n    /** @type {?} */\n    TreeTableHeaderObject.prototype.dataProperty;\n    /** @type {?} */\n    TreeTableHeaderObject.prototype.title;\n    /** @type {?} */\n    TreeTableHeaderObject.prototype.style;\n    /** @type {?} */\n    TreeTableHeaderObject.prototype.show;\n    /** @type {?} */\n    TreeTableHeaderObject.prototype.dataType;\n    /** @type {?} */\n    TreeTableHeaderObject.prototype.enableColumnSearch;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar TreeTableRowAction = /** @class */ (function () {\n    function TreeTableRowAction(label, title, classes, action) {\n        this.type = TreeTableRowActionType.BUTTON;\n        this.label = label;\n        this.title = title;\n        this.classes = classes;\n        this.action = action;\n    }\n    return TreeTableRowAction;\n}());\nif (false) {\n    /** @type {?} */\n    TreeTableRowAction.prototype.label;\n    /** @type {?} */\n    TreeTableRowAction.prototype.title;\n    /** @type {?} */\n    TreeTableRowAction.prototype.classes;\n    /** @type {?} */\n    TreeTableRowAction.prototype.action;\n    /** @type {?} */\n    TreeTableRowAction.prototype.type;\n    /** @type {?} */\n    TreeTableRowAction.prototype.reference;\n    /** @type {?} */\n    TreeTableRowAction.prototype.context;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { AngularTreeTableComponent, AngularTreeTableModule, AngularTreeTableService, TreeTableData, TreeTableHeaderObject, TreeTableRow, TreeTableRowAction, TreeTableRowActionType, TtDataType, TreeTableDataConfig as ɵa, TreeTableDataServerConfig as ɵb };\n//# sourceMappingURL=angular-tree-table.js.map\n","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-SG\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-SG.js\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","module.exports = \"<div class=\\\"d-flex flex-column h-100\\\">\\r\\n  <div class=\\\"d-flex flex-column container main-content flex-grow-1\\\">\\r\\n    <div class=\\\"d-flex\\\">\\r\\n      <div class=\\\"project-details d-flex flex-column flex-item\\\">\\r\\n        <div class=\\\"project-heading\\\">Angular Tree Table</div>\\r\\n        <div class=\\\"project-description\\\">Expandanble and Collapsible Table structure in Angular in Angular Way</div>\\r\\n      </div>\\r\\n      <div class=\\\"d-flex flex-fill\\\"></div>\\r\\n      <div class=\\\"d-flex flex-item\\\">\\r\\n        <a class=\\\"doc-links\\\" target=\\\"AngularTreeTable\\\"\\r\\n          href=\\\"https://github.com/anjnkmr/angular-tree-table\\\">\\r\\n          <svg class=\\\"octicon octicon-mark-github v-align-middle\\\" height=\\\"35\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"32\\\" aria-hidden=\\\"true\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z\\\"></path></svg>\\r\\n        </a>\\r\\n        &nbsp;\\r\\n        <a class=\\\"doc-links\\\" target=\\\"AngularTreeTable\\\"\\r\\n          href=\\\"https://medium.com/@anjnkmr/angular-tree-table-bb9312c9720\\\">\\r\\n          <svg width=\\\"35\\\" height=\\\"35\\\" viewBox=\\\"5 5 35 35\\\" class=\\\"q\\\"><path d=\\\"M5 40V5h35v35H5zm8.56-12.63c0 .56-.03.69-.32 1.03L10.8 31.4v.4h6.97v-.4L15.3 28.4c-.29-.34-.34-.5-.34-1.03v-8.95l6.13 13.36h.71l5.26-13.36v10.64c0 .3 0 .35-.19.53l-1.85 1.8v.4h9.2v-.4l-1.83-1.8c-.18-.18-.2-.24-.2-.53V15.94c0-.3.02-.35.2-.53l1.82-1.8v-.4h-6.47l-4.62 11.55-5.2-11.54h-6.8v.4l2.15 2.63c.24.3.29.37.29.77v10.35z\\\"></path></svg>\\r\\n        </a>\\r\\n      </div>\\r\\n      <div class=\\\"d-flex flex-fill\\\"></div>\\r\\n      <a class=\\\" d-flex flex-item\\\" target=\\\"AngularTreeTable\\\" href=\\\"https://npmjs.com/package/angular-tree-table\\\"><img\\r\\n          src=\\\"https://nodei.co/npm/angular-tree-table.png?downloads=true\\\"></a>\\r\\n    </div>\\r\\n    <ul class=\\\"nav nav-fill nav-tabs\\\">\\r\\n      <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\r\\n        <a class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\" routerLink=\\\"basic\\\">Basic</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\r\\n        <a class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\" routerLink=\\\"select\\\">Select</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\r\\n        <a class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\" routerLink=\\\"expandable\\\">Expandable</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\r\\n        <a class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\" routerLink=\\\"expandable-header-less\\\">No Headers</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\r\\n        <a class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\" routerLink=\\\"inputs\\\">Inputs</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\r\\n        <a class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\" routerLink=\\\"server-side\\\">Server Side</a>\\r\\n      </li>\\r\\n    </ul>\\r\\n    <div class=\\\"nav-content container flex-grow-1\\\">\\r\\n      <router-outlet></router-outlet>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","module.exports = \"<angular-tree-table [tableData]=\\\"tableData\\\"></angular-tree-table>\\r\\n\"","module.exports = \"<angular-tree-table [tableData]=\\\"tableData\\\"></angular-tree-table>\\n\"","module.exports = \"<angular-tree-table [tableData]=\\\"tableData\\\"></angular-tree-table>\\r\\n\"","module.exports = \"<angular-tree-table [tableData]=\\\"tableData\\\"></angular-tree-table>\\n\"","module.exports = \"<angular-tree-table [tableData]=\\\"tableData\\\" \\r\\n                    (rowSelectionChanged)=\\\"rowSelectionChanged($event)\\\"></angular-tree-table>\\r\\n\"","module.exports = \"<p>We will add this example soon...</p>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { BasicComponent } from './components/basic/basic.component';\r\nimport { ExpandableComponent } from './components/expandable/expandable.component';\r\nimport { ServerSideComponent } from './components/server-side/server-side.component';\r\nimport { SelectComponent } from './components/select/select.component';\r\nimport { InputsComponent } from './components/inputs/inputs.component';\r\nimport { ExpandableHeaderLessComponent } from './components/expandable-header-less/expandable-header-less.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: 'basic',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'basic',\r\n    component: BasicComponent\r\n  },\r\n  {\r\n    path: 'select',\r\n    component: SelectComponent\r\n  },\r\n  {\r\n    path: 'expandable',\r\n    component: ExpandableComponent\r\n  },\r\n  {\r\n    path: 'expandable-header-less',\r\n    component: ExpandableHeaderLessComponent\r\n  },\r\n  {\r\n    path: 'inputs',\r\n    component: InputsComponent\r\n  },\r\n  {\r\n    path: 'server-side',\r\n    component: ServerSideComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'angularTreeTable';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { AngularTreeTableModule } from 'angular-tree-table';\r\nimport { BasicComponent } from './components/basic/basic.component';\r\nimport { ExpandableComponent } from './components/expandable/expandable.component';\r\nimport { ServerSideComponent } from './components/server-side/server-side.component';\r\nimport { SelectComponent } from './components/select/select.component';\r\nimport { InputsComponent } from './components/inputs/inputs.component';\r\nimport { ExpandableHeaderLessComponent } from './components/expandable-header-less/expandable-header-less.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    BasicComponent,\r\n    ExpandableComponent,\r\n    ServerSideComponent,\r\n    SelectComponent,\r\n    InputsComponent,\r\n    ExpandableHeaderLessComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    AngularTreeTableModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYmFzaWMvYmFzaWMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { TreeTableHeaderObject, TreeTableRow, TreeTableData } from 'angular-tree-table';\r\n\r\n@Component({\r\n  selector: 'app-basic',\r\n  templateUrl: './basic.component.html',\r\n  styleUrls: ['./basic.component.scss']\r\n})\r\nexport class BasicComponent implements OnInit {\r\n\r\n  tableData: TreeTableData = null;\r\n  tableConfig = {};\r\n  tableHeaders: TreeTableHeaderObject[] = [];\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.populateDummyData();\r\n  }\r\n\r\n  populateDummyData() {\r\n    const data = [];\r\n    for (let i = 0; i < 120; i++) {\r\n      const row = new TreeTableRow(i + '', { sno: i+1, name: 'John '+(i+1), age: i+1}, false, null);\r\n      data.push(row);\r\n    }\r\n    this.tableData = new TreeTableData(this.tableConfig);\r\n    this.populateHeaders();\r\n    this.tableData.data = data;\r\n  }\r\n\r\n  populateHeaders() {\r\n    this.tableHeaders.splice(0, this.tableHeaders.length);\r\n    this.tableHeaders.push(new TreeTableHeaderObject('Sno', 'sno', null, true));\r\n    this.tableHeaders.push(new TreeTableHeaderObject('Name', 'name', null, true));\r\n    this.tableHeaders.push(new TreeTableHeaderObject('Age', 'age', null, true));\r\n    this.tableData.headers = this.tableHeaders;\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZXhwYW5kYWJsZS1oZWFkZXItbGVzcy9leHBhbmRhYmxlLWhlYWRlci1sZXNzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { TreeTableData, TreeTableHeaderObject, TreeTableRow } from 'angular-tree-table';\n\n@Component({\n  selector: 'app-expandable-header-less',\n  templateUrl: './expandable-header-less.component.html',\n  styleUrls: ['./expandable-header-less.component.scss']\n})\nexport class ExpandableHeaderLessComponent implements OnInit {\n\n  tableData: TreeTableData = null;\n  tableConfig = {\n    showTableHeaders: false, // To show/ hide headers\n    showExpandArrows: true, // To show expand/ collapse button on each row wherever child available\n    showExpandAllArrows: true, // To show Expand/ collapse all button\n    columnVisibility: false, // To show columns visibility options on table\n    columnVisibilityDropDown: false, // To show columns visibility options on table as a popover\n    commonSearch: false,\n    excelExportButton: false,\n    showPageLengthDropdown: false\n  };\n  tableHeaders: TreeTableHeaderObject[] = [];\n\n  constructor() { }\n\n  ngOnInit() {\n    this.populateDummyData();\n  }\n\n  populateDummyData() {\n    const data = [];\n    for (let i = 0; i < 120; i++) {\n      const row = new TreeTableRow(i + '', { sno: i+1, name: 'John '+(i+1), age: i+1}, false, null);\n      if (i % 10 !== 0) {\n        row.expandable = true;\n        const subTableData = new TreeTableData(this.tableConfig); //We can add new config object if required\n        const subData = [];\n        for (let j = 0; j < (10 - i % 10); j++) {\n          const subRow = new TreeTableRow(j + '', { sno: j + 1, name: 'Paul ' + (j + 1), age: j + 1}, false, null);\n          subData.push(subRow);\n        }\n        subTableData.headers = this.tableHeaders; //Using the same headers as parent table, we can use separate if required\n        subTableData.data = subData;\n        row.children = subTableData;\n      }\n      data.push(row);\n    }\n    this.tableData = new TreeTableData(this.tableConfig);\n    this.populateHeaders();\n    this.tableData.data = data;\n  }\n\n  populateHeaders() {\n    this.tableHeaders.splice(0, this.tableHeaders.length);\n    this.tableHeaders.push(new TreeTableHeaderObject('Sno', 'sno', null, true));\n    this.tableHeaders.push(new TreeTableHeaderObject('Name', 'name', null, true));\n    this.tableHeaders.push(new TreeTableHeaderObject('Age', 'age', null, true));\n    this.tableData.headers = this.tableHeaders;\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZXhwYW5kYWJsZS9leHBhbmRhYmxlLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { TreeTableData, TreeTableHeaderObject, TreeTableRow } from 'angular-tree-table';\r\n\r\n@Component({\r\n  selector: 'app-expandable',\r\n  templateUrl: './expandable.component.html',\r\n  styleUrls: ['./expandable.component.scss']\r\n})\r\nexport class ExpandableComponent implements OnInit {\r\n\r\n  tableData: TreeTableData = null;\r\n  tableConfig = {\r\n    showExpandArrows: true, // To show expand/ collapse button on each row wherever child available\r\n    showExpandAllArrows: true, // To show Expand/ collapse all button\r\n    columnVisibility: true, // To show columns visibility options on table\r\n    columnVisibilityDropDown: true // To show columns visibility options on table as a popover\r\n  };\r\n  tableHeaders: TreeTableHeaderObject[] = [];\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.populateDummyData();\r\n  }\r\n\r\n  populateDummyData() {\r\n    const data = [];\r\n    for (let i = 0; i < 120; i++) {\r\n      const row = new TreeTableRow(i + '', { sno: i+1, name: 'John '+(i+1), age: i+1}, false, null);\r\n      if (i % 10 !== 0) {\r\n        row.expandable = true;\r\n        const subTableData = new TreeTableData(this.tableConfig); //We can add new config object if required\r\n        const subData = [];\r\n        for (let j = 0; j < (10 - i % 10); j++) {\r\n          const subRow = new TreeTableRow(j + '', { sno: j + 1, name: 'Paul ' + (j + 1), age: j + 1}, false, null);\r\n          subData.push(subRow);\r\n        }\r\n        subTableData.headers = this.tableHeaders; //Using the same headers as parent table, we can use separate if required\r\n        subTableData.data = subData;\r\n        row.children = subTableData;\r\n      }\r\n      data.push(row);\r\n    }\r\n    this.tableData = new TreeTableData(this.tableConfig);\r\n    this.populateHeaders();\r\n    this.tableData.data = data;\r\n  }\r\n\r\n  populateHeaders() {\r\n    this.tableHeaders.splice(0, this.tableHeaders.length);\r\n    this.tableHeaders.push(new TreeTableHeaderObject('Sno', 'sno', null, true));\r\n    this.tableHeaders.push(new TreeTableHeaderObject('Name', 'name', null, true));\r\n    this.tableHeaders.push(new TreeTableHeaderObject('Age', 'age', null, true));\r\n    this.tableData.headers = this.tableHeaders;\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaW5wdXRzL2lucHV0cy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { TreeTableData, TreeTableHeaderObject, TreeTableRow, TtDataType } from 'angular-tree-table';\n\n@Component({\n  selector: 'app-inputs',\n  templateUrl: './inputs.component.html',\n  styleUrls: ['./inputs.component.scss']\n})\nexport class InputsComponent implements OnInit {\n\n  tableData: TreeTableData = null;\n  tableConfig = {};\n  tableHeaders: TreeTableHeaderObject[] = [];\n\n  constructor() { }\n\n  ngOnInit() {\n    this.populateDummyData();\n  }\n\n  populateDummyData() {\n    const data = [];\n    for (let i = 0; i < 120; i++) {\n      const row = new TreeTableRow(i + '', { sno: i+1, name: 'John '+(i+1), age: i+1}, false, null);\n      row.options = [\n        {\n          displayText: 'Died',\n          value: 'died'\n        },\n        {\n          displayText: 'Alive',\n          value: 'alive'\n        }\n      ];\n      if (i % 2 !== 0) {\n        row.classes.push('even');\n      }\n      data.push(row);\n    }\n    this.tableData = new TreeTableData(this.tableConfig);\n    this.populateHeaders();\n    this.tableData.data = data;\n  }\n\n  populateHeaders() {\n    this.tableHeaders.splice(0, this.tableHeaders.length);\n    this.tableHeaders.push(new TreeTableHeaderObject('Sno', 'sno', null, true));\n    this.tableHeaders.push(new TreeTableHeaderObject('Name', 'name', null, true));\n    const ageHeader = new TreeTableHeaderObject('Age', 'age', null, true);\n    ageHeader.dataType = TtDataType.INPUT_TEXT;\n    this.tableHeaders.push(ageHeader);\n    const diedHeader = new TreeTableHeaderObject('Died', 'died', null, true);\n    diedHeader.dataType = TtDataType.INPUT_SELECT;\n    this.tableHeaders.push(diedHeader);\n    this.tableData.headers = this.tableHeaders;\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2VsZWN0L3NlbGVjdC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { TreeTableData, TreeTableHeaderObject, TreeTableRow, TtDataType } from 'angular-tree-table';\r\n\r\n@Component({\r\n  selector: 'app-select',\r\n  templateUrl: './select.component.html',\r\n  styleUrls: ['./select.component.scss']\r\n})\r\nexport class SelectComponent implements OnInit {\r\n\r\n  tableData: TreeTableData = null;\r\n  tableConfig = {};\r\n  tableHeaders: TreeTableHeaderObject[] = [];\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.populateDummyData();\r\n  }\r\n\r\n  populateDummyData() {\r\n    const data = [];\r\n    for (let i = 0; i < 120; i++) {\r\n      const row = new TreeTableRow(i + '', { sno: i+1, name: 'John '+(i+1), age: i+1}, false, null);\r\n      data.push(row);\r\n    }\r\n    this.tableData = new TreeTableData(this.tableConfig);\r\n    this.populateHeaders();\r\n    this.tableData.data = data;\r\n  }\r\n\r\n  rowSelectionChanged(selected: any[]) {\r\n    console.log('Selection changed', selected);\r\n  }\r\n\r\n  populateHeaders() {\r\n    this.tableHeaders.splice(0, this.tableHeaders.length);\r\n    const selectAllHeader = new TreeTableHeaderObject('Select All', null, null, true);\r\n    selectAllHeader.dataType = TtDataType.SELECT;\r\n    this.tableHeaders.push(selectAllHeader);\r\n    this.tableHeaders.push(new TreeTableHeaderObject('Sno', 'sno', null, true));\r\n    this.tableHeaders.push(new TreeTableHeaderObject('Name', 'name', null, true));\r\n    this.tableHeaders.push(new TreeTableHeaderObject('Age', 'age', null, true));\r\n    this.tableData.headers = this.tableHeaders;\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2VydmVyLXNpZGUvc2VydmVyLXNpZGUuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-server-side',\r\n  templateUrl: './server-side.component.html',\r\n  styleUrls: ['./server-side.component.scss']\r\n})\r\nexport class ServerSideComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"sourceRoot":"webpack:///"}