{"version":3,"file":"angular-tree-table.js","sources":["ng://angular-tree-table/lib/angular-tree-table.service.ts","ng://angular-tree-table/classes/tree-table-data-config.ts","ng://angular-tree-table/classes/tree-table-data.ts","ng://angular-tree-table/classes/tt-data-type.ts","ng://angular-tree-table/classes/tree-table-row-action-type.ts","ng://angular-tree-table/lib/angular-tree-table.component.ts","ng://angular-tree-table/lib/angular-tree-table.module.ts","ng://angular-tree-table/classes/tree-table-header-object.ts","ng://angular-tree-table/classes/tree-table-row-action.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AngularTreeTableService {\r\n\r\n  constructor() { }\r\n}\r\n","export class TreeTableDataConfig {\n    /**\n     * Context should be Host component instance of tree table\n     * \n     * Default value is `null`\n     */\n    context? = null;\n    /**\n     * This is two dimensional array, each subarray should contain 2 or less strings, and there is no limit for subarrays count\n     * \n     * Default value is `[]`\n     */\n    extraInfos?:[][] = [];\n    /**\n     * This is used to show/ hide Table Headers\n     * \n     * Default value is `true` - Shows Table Headers\n     */\n    showTableHeaders? = true;\n    /**\n     * Column Visibility will show the group of buttons on top of table, which will allow us to toggle the visibility of each column\n     * \n     * Default value is `false` - hidden\n     */\n    columnVisibility? = false;\n    /**\n     * Same as Column Visibility but it shown as popover. It requires popper js library to work\n     * \n     * Default value is `false` - hidden\n     */\n    columnVisibilityDropDown? = false;\n    /**\n     * Enables seperate search field for each column under each table header\n     * \n     * Default value is `false` - Disabled\n     */\n    visibleColumnFiltersVisibility? = false;\n    /**\n     * This is used to set the search value by default based on `dataProperty`\n     * \n     * Ex: {country: 'India'}\n     * \n     * Default value is `{}`\n     */\n    visibleColumnFilters? = {};\n    /**\n     * Class name for table tag\n     * \n     * Default value is `stacktable table-bordered large-only table table-sm`\n     */\n    fullClassName? = 'stacktable table-bordered large-only table table-sm';\n    /**\n     * Class name for th tag which is sorted in `ascending` order\n     * \n     * Default value is `col-sort col-sort-asc`\n     */\n    sortAscClassName? = 'col-sort col-sort-asc';\n    /**\n     * Class name for th tag which is sorted in `descending` order\n     * \n     * Default value is `col-sort col-sort-desc`\n     */\n    sortDescClassName? = 'col-sort col-sort-desc';\n    /**\n     * Class name for th tag which is `not sorted`\n     * \n     * Default value is `col-sort col-sort-nothing`\n     */\n    sortNothingClassName? = 'col-sort col-sort-nothing';\n    /**\n     * Extra class name for table tag\n     * \n     * Default value is `null`\n     */\n    customClassName? = null;\n    /**\n     * This option will show the Expand Row Button on each row, if child exists\n     * \n     * Default value is `false`\n     */\n    showExpandArrows? = false;\n    /**\n     * This option will show the Expand Row Button on table header, which will expand/ collapse all rows with children at a time\n     * \n     * Default value is `false`\n     */\n    showExpandAllArrows? = false;\n    /**\n     * If this option is `true` then it will expand all the rows irrespective of child table has rows or not\n     * \n     * Default value is `false` - Only expand rows with child which has rows\n     */\n    showExpandAllEmptyChildren? = false;\n    /**\n     * This is used set the default sorted column and order based on dataProperty\n     * \n     * Ex: {firstName: 'asc'}\n     * \n     * Default value is `{}`\n     */\n    sortedColumn? = {};\n    /**\n     * This will shows the page length dropdown, which will used to render the no of rows on each page\n     * \n     * Default value is `true`\n     */\n    showPageLengthDropdown? = true;\n    /**\n     * This will used to customize page length dropdown options\n     * \n     * Default value is `[10, 25, 50, 100]`\n     */\n    pageSizes? = [10, 25, 50, 100];\n    /**\n     * This is for internal pupose of the `angular-tree-table`. Don't use it.\n     * \n     * Default value is `0`\n     */\n    level? = 0;\n    /**\n     * Column Filters are used to send the column wise search keywords to server. Don't use it. It will be used by `angular-tree-table` itself.\n     */\n    columnFilters? = {};\n    /**\n     * Row clickables are allows you to configure the row detail clicking actions with a callback method based on dataProperty\n     * \n     * Default value is `{}`\n     */\n    rowClickables? = {};\n    /**\n     * This should be instance of component or the instance of class where the callbacks of rowClickables implemented\n     * \n     * Default value is `null`\n     */\n    rowClickablesContext? = null;\n    /**\n     * This is used to show/ hide the common search box\n     * \n     * Default value is `true`\n     */\n    commonSearch? = true;\n    /**\n     * This is used to show/ hide Export Excel Button\n     * \n     * Default value is `false`\n     */\n    excelExportButton? = false;\n    /**\n     * This is used to configure the ExcelExport only filtered true\n     * \n     * Default value is `false`\n     */\n    excelExportOnlyFilteredRows? = false;\n    /**\n     * This is used to configure the ExcelExport file name\n     * \n     * Default value is `ExportFile`\n     */\n    excelExportFileName? = 'ExportFile';\n    /**\n     * This is used to configure the Excel Export Button text\n     * \n     * Default value is `Excel Export`\n     */\n    excelExportButtonText? = 'Excel Export';\n    /**\n     * It is WIP, Which will be used to export to excel file along with all children of rows\n     * \n     * Default value is `true`\n     */\n    excelExportAllChildren? = true;\n    /**\n     * It is WIP, Which will be used to export to excel file along with all children of rows\n     * \n     * Default value is `true`\n     */\n    excelExportOnlyExpanded? = false;\n    /**\n     * It is WIP, which will used to configure the callbacks for events of the `angular-tree-table`\n     */\n    events?: TreeTableDataEvents = new TreeTableDataEvents();\n\n    /**\n     * Expandable Type\n     * Default: `ExpandableType.DIFFERENT_HEADERS`\n     */\n    expandableType?: ExpandableType = ExpandableType.DIFFERENT_HEADERS;\n\n    expandableArrowPlacement?: ExpandableArrowPlacement = ExpandableArrowPlacement.SEPERATE_COLUMN;\n}\n\nexport enum ExpandableType {\n    DIFFERENT_HEADERS = 'DIFFERENT_HEADERS', \n    SAME_HEADERS = 'SAME_HEADERS'\n}\n\nexport enum ExpandableArrowPlacement {\n    SEPERATE_COLUMN = 'SEPERATE_COLUMN', \n    FIRST_COLUMN = 'FIRST_COLUMN'\n}\n\nexport class TreeTableDataEvents {\n    shouldRowExpand? = null;\n    rowExpanded? = null;\n    shouldRowCollapse? = null;\n    rowCollapsed? = null;\n}\n\nexport class TreeTableDataServerConfig {\n    /**\n     * `url` to invoke for the data from server\n     * \n     * Ex: `https://restapisample.com/entities`\n     * \n     * Default value is `null`\n     */\n    url = null;\n    /**\n     * `url` to invoke for the data from server as a file\n     * \n     * Ex: `https://restapisample.com/entities/export`\n     * \n     * Default value is `null`\n     */\n    excelExportUrl? = null;\n    /**\n     * HTTP Method for `url` and `excelExportUrl`\n     * \n     * Default value is `null`\n     */\n    method? = null;\n    /**\n     * `angular-tree-table` handles all the events, page change, next page, prev page, page length change through api call and using different parameter. These are used to customize those parameter keys as per the server side requirements\n     *\n     * Default values are `page, limit, sort, search, colSearch, colFilters, pageToken`\n     */\n    paramNames? = new TreeTableDataServerConfigParamMapping();\n    /**\n     * This is used to configure the property key of array in the api response\n     * \n     * Default value is `rows`\n     */\n    rowsKey? = 'rows';\n    /** \n     * This is used to configure the property key of totalRowsCount in the api response\n     * \n     * Default value is `totalRowsCount`\n     */\n    totalRowsCountKey? = 'totalRowsCount';\n    /**\n     * This is used to configure the property key of filteredRowsCount in the api response\n     * \n     * Default value is `filteredRowCount`\n     */\n    filteredRowsCountKey? = 'filteredRowsCount';\n    /**\n     * This is used to configure the unique key in the each row of the response\n     * \n     * Default value is `null`\n     */\n    rowUniqueKey? = null\n}\n\nexport class TreeTableDataServerConfigParamMapping {\n    /**\n     * Page number of the page will send under key configured here\n     * \n     * Default value is `page`\n     */\n    page? = 'page';\n    /**\n     * Limit of the page will send under key configured here\n     * \n     * Default value is `limit`\n     */\n    limit? = 'limit';\n    /**\n     * Sort of the table of each column will send under key configured here\n     * \n     * Default value is `sort`\n     */\n    sort? = 'sort';\n    /**\n     * Search keyword wil be send under key configured here\n     * \n     * Default value is `search`\n     */\n    search? = 'search';\n    /**\n     * Search keyword of each column will be send under key configured here\n     * \n     * Default value is `colSearch`\n     */\n    colSearch? = 'colSearch';\n    /**\n     * Filter of each column will be send under key configured here\n     * \n     * Default value is `colFilters`\n     */\n    colFilters? = 'colFilters';\n    /**\n     * Not using right now\n     * \n     * Default value is `pageToken`\n     */\n    pageToken? = 'pageToken';\n}","import { TreeTableHeaderObject } from './tree-table-header-object';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { saveAs } from 'file-saver';\r\nimport { TreeTableDataConfig, TreeTableDataServerConfig } from './tree-table-data-config';\r\nimport { TreeTableRowAction } from './tree-table-row-action';\r\n\r\nexport class TreeTableRow {\r\n    id: string = null;\r\n    data: {} = {};\r\n    expandable = false;\r\n    children: TreeTableData = null;\r\n    expanded = false;\r\n    // Clickables Context for Actions\r\n    clickablesContext: any = null;\r\n    // Clickable Properties and Actions\r\n    clickables: {} = {};\r\n    styles: {} = {};\r\n    classes: string[] = [];\r\n    // Actions Header Buttons\r\n    actions: TreeTableRowAction[] = [];\r\n    // Is row selected\r\n    selected: boolean = false;\r\n    options: {value: string, displayText: string}[] =  [];\r\n\r\n    constructor(id: string, data: {}, expandable: boolean, children: TreeTableData) {\r\n        this.id = id;\r\n        this.data = data;\r\n        this.expandable = expandable;\r\n        this.children = children;\r\n    }\r\n}\r\n\r\n\r\nexport class TreeTableData {\r\n    headers: TreeTableHeaderObject[] = [];\r\n    data: TreeTableRow[] = [];\r\n\r\n    isLoading = false;\r\n    keyword: string = null;\r\n    page = 1;\r\n    pageSize = 10;\r\n    lastParams = null;\r\n    totalRowsCount = 0;\r\n    filteredRowsCount = 0;\r\n    splashMessageFlag = false;\r\n    splashMessageContent = '';\r\n    tokens = [null];\r\n    isAllRowsExpanded = false;\r\n\r\n    serverConfig = new TreeTableDataServerConfig();\r\n    config = new TreeTableDataConfig();\r\n    loadCounter = 0;\r\n\r\n    private http: HttpClient = null;\r\n\r\n    constructor(config?: TreeTableDataConfig, serverConfig?: TreeTableDataServerConfig, http?: HttpClient) {\r\n        this.http = http;\r\n        if (serverConfig !== undefined && serverConfig !== null) {\r\n            if (serverConfig.paramNames === undefined || serverConfig.paramNames === null) {\r\n                serverConfig.paramNames = this.serverConfig.paramNames;\r\n            }\r\n            if (serverConfig.rowsKey === undefined || serverConfig.rowsKey === null) {\r\n                serverConfig.rowsKey = this.serverConfig.rowsKey;\r\n            }\r\n            if (serverConfig.rowUniqueKey === undefined || serverConfig.rowUniqueKey === null) {\r\n                serverConfig.rowUniqueKey = this.serverConfig.rowUniqueKey;\r\n            }\r\n            this.serverConfig = serverConfig;\r\n            this.loadData();\r\n        } else {\r\n            // console.log('No Server Properties');\r\n        }\r\n        if (config !== undefined && config !== null) {\r\n            if (config.extraInfos !== undefined && config.extraInfos !== null) {\r\n                this.config.extraInfos = config.extraInfos;\r\n            }\r\n            if (config.context !== undefined && config.context !== null) {\r\n                this.config.context = config.context;\r\n            }\r\n            if (config.showTableHeaders !== undefined && config.showTableHeaders !== null) {\r\n                this.config.showTableHeaders = config.showTableHeaders;\r\n            }\r\n            if (config.showExpandArrows !== undefined && config.showExpandArrows !== null) {\r\n                this.config.showExpandArrows = config.showExpandArrows;\r\n            }\r\n            if (config.expandableType !== undefined && config.expandableType !== null) {\r\n                this.config.expandableType = config.expandableType;\r\n            }\r\n            if (config.expandableArrowPlacement !== undefined && config.expandableArrowPlacement !== null) {\r\n                this.config.expandableArrowPlacement = config.expandableArrowPlacement;\r\n            }\r\n            if (config.events === undefined || config.events === null) {\r\n                config.events = this.config.events;\r\n            } else {\r\n                if (config.events.rowExpanded !== undefined\r\n                    && config.events.rowExpanded !== null) {\r\n                    this.config.events.rowExpanded = config.events.rowExpanded;\r\n                }\r\n                if (config.events.rowCollapsed !== undefined\r\n                    && config.events.rowCollapsed !== null) {\r\n                    this.config.events.rowCollapsed = config.events.rowCollapsed;\r\n                }\r\n            }\r\n            if (config.fullClassName !== undefined && config.fullClassName !== null) {\r\n                this.config.fullClassName = config.fullClassName;\r\n            }\r\n            if (config.excelExportFileName !== undefined && config.excelExportFileName !== null) {\r\n                this.config.excelExportFileName = config.excelExportFileName;\r\n            }\r\n            if (config.excelExportButtonText !== undefined && config.excelExportButtonText !== null) {\r\n                this.config.excelExportButtonText = config.excelExportButtonText;\r\n            }\r\n            if (config.sortAscClassName !== undefined && config.sortAscClassName !== null) {\r\n                this.config.sortAscClassName = config.sortAscClassName;\r\n            }\r\n            if (config.sortDescClassName !== undefined && config.sortDescClassName !== null) {\r\n                this.config.sortDescClassName = config.sortDescClassName;\r\n            }\r\n            if (config.sortNothingClassName !== undefined && config.sortNothingClassName !== null) {\r\n                this.config.sortNothingClassName = config.sortNothingClassName;\r\n            }\r\n            if (config.customClassName !== undefined && config.customClassName !== null) {\r\n                this.config.customClassName = config.customClassName;\r\n            }\r\n            if (config.showExpandAllArrows !== undefined && config.showExpandAllArrows !== null) {\r\n                this.config.showExpandAllArrows = config.showExpandAllArrows;\r\n            }\r\n            if (config.showExpandAllEmptyChildren !== undefined && config.showExpandAllEmptyChildren !== null) {\r\n                this.config.showExpandAllEmptyChildren = config.showExpandAllEmptyChildren;\r\n            }\r\n            if (config.showPageLengthDropdown !== undefined && config.showPageLengthDropdown !== null) {\r\n                this.config.showPageLengthDropdown = config.showPageLengthDropdown;\r\n            }\r\n            if (config.columnVisibility !== undefined && config.columnVisibility !== null) {\r\n                this.config.columnVisibility = config.columnVisibility;\r\n            }\r\n            if (config.columnVisibilityDropDown !== undefined && config.columnVisibilityDropDown !== null) {\r\n                this.config.columnVisibilityDropDown = config.columnVisibilityDropDown;\r\n            }\r\n            if (config.visibleColumnFiltersVisibility !== undefined && config.visibleColumnFiltersVisibility !== null) {\r\n                this.config.visibleColumnFiltersVisibility = config.visibleColumnFiltersVisibility;\r\n            }\r\n            if (config.sortedColumn !== undefined && config.sortedColumn !== null) {\r\n                this.config.sortedColumn = config.sortedColumn;\r\n            }\r\n            if (config.level !== undefined && config.level !== null) {\r\n                this.config.level = config.level;\r\n            }\r\n            if (config.commonSearch !== undefined && config.commonSearch !== null) {\r\n                this.config.commonSearch = config.commonSearch;\r\n            }\r\n            if (config.columnFilters !== undefined && config.columnFilters !== null) {\r\n                this.config.columnFilters = config.columnFilters;\r\n            }\r\n            if (config.pageSizes !== undefined && config.pageSizes !== null && config.pageSizes.length > 0) {\r\n                this.config.pageSizes.splice(0, this.config.pageSizes.length);\r\n                for (let p = 0; p < config.pageSizes.length; p++) {\r\n                    if (config.pageSizes[p] > 0) {\r\n                        this.config.pageSizes.push(config.pageSizes[p]);\r\n                    }\r\n                }\r\n                // this.config.pageSizes = config.pageSizes;\r\n            }\r\n            if (config.visibleColumnFilters !== undefined && config.visibleColumnFilters !== null) {\r\n                this.config.visibleColumnFilters = config.visibleColumnFilters;\r\n            }\r\n            if (config.rowClickablesContext !== undefined && config.rowClickablesContext !== null) {\r\n                this.config.rowClickablesContext = config.rowClickablesContext;\r\n            }\r\n            if (config.rowClickables !== undefined && config.rowClickables !== null) {\r\n                this.config.rowClickables = config.rowClickables;\r\n            }\r\n            if (config.commonSearch !== undefined && config.commonSearch !== null) {\r\n                this.config.commonSearch = config.commonSearch;\r\n            }\r\n            if (config.excelExportButton !== undefined && config.excelExportButton !== null) {\r\n                this.config.excelExportButton = config.excelExportButton;\r\n            }\r\n            if (config.excelExportOnlyFilteredRows !== undefined && config.excelExportOnlyFilteredRows !== null) {\r\n                this.config.excelExportOnlyFilteredRows = config.excelExportOnlyFilteredRows;\r\n            }\r\n        } else {\r\n            // console.log('No Properties');\r\n        }\r\n        // console.log('Properties', config);\r\n    }\r\n\r\n    totalPagesCount() {\r\n        const pages = this.filteredRowsCount / this.pageSize;\r\n        return Math.ceil(pages);\r\n    }\r\n\r\n    getParams() {\r\n        const params = {};\r\n        if (this.page - 1 >= 0) {\r\n            if (this.tokens[this.page - 1] !== undefined && this.tokens[this.page - 1] !== null) {\r\n                params[this.serverConfig.paramNames.pageToken] = this.tokens[this.page - 1];\r\n            }\r\n        }\r\n        params[this.serverConfig.paramNames.page] = this.page;\r\n        params[this.serverConfig.paramNames.search] = this.keyword;\r\n        params[this.serverConfig.paramNames.limit] = this.pageSize;\r\n        params[this.serverConfig.paramNames.colFilters] = JSON.stringify(this.config.columnFilters);\r\n        params[this.serverConfig.paramNames.sort] = JSON.stringify(this.config.sortedColumn);\r\n        const colSearchKeys = Object.keys(this.config.visibleColumnFilters);\r\n        for (let key of colSearchKeys) {\r\n            if (this.config.visibleColumnFilters[key] === null) {\r\n                delete this.config.visibleColumnFilters[key];\r\n            }\r\n            if (this.config.visibleColumnFilters[key] === undefined) {\r\n                delete this.config.visibleColumnFilters[key];\r\n            }\r\n            if (this.config.visibleColumnFilters[key] === '') {\r\n                delete this.config.visibleColumnFilters[key];\r\n            }\r\n            if (this.config.visibleColumnFilters[key].trim() === '') {\r\n                delete this.config.visibleColumnFilters[key];\r\n            }\r\n        }\r\n        params[this.serverConfig.paramNames.colSearch] = JSON.stringify(this.config.visibleColumnFilters);\r\n        return params;\r\n    }\r\n\r\n    loadExcelData(callback?: any) {\r\n        if (this.serverConfig.excelExportUrl === null) {\r\n            console.warn('ExcelExportUrl not specified');\r\n            return;\r\n        }\r\n        const params = this.getParams();\r\n        // delete params[this.serverConfig.paramNames.limit];\r\n        const dis = this;\r\n        dis.isLoading = true;\r\n        if (this.serverConfig.method === 'GET') {\r\n            this.http.get(this.serverConfig.excelExportUrl, { params, responseType: 'blob' }).subscribe(resp => {\r\n                dis.isLoading = false;\r\n                const blob = new Blob([resp], {type: 'application/vnd.ms-excel'} );\r\n                saveAs(blob, 'Orders.xlsx');\r\n            });\r\n        }\r\n    }\r\n\r\n    loadData(callback?: any) {\r\n        if (this.serverConfig.url === null) {\r\n            console.warn('URL not specified');\r\n            return;\r\n        }\r\n        const params = this.getParams();\r\n        if (this.lastParams !== undefined && this.lastParams !== null) {\r\n            if (this.lastParams === JSON.stringify(params)) {\r\n                return;\r\n            }\r\n        }\r\n        this.lastParams = JSON.stringify(params);\r\n        const dis = this;\r\n        dis.isLoading = true;\r\n        dis.loadCounter++;\r\n        if (this.serverConfig.method === 'GET') {\r\n            this.http.get(this.serverConfig.url, { params }).subscribe(resp => {\r\n                if (callback !== undefined && callback !== null) {\r\n                    const rows = [];\r\n                    if (resp[this.serverConfig.rowsKey] === undefined || resp[this.serverConfig.rowsKey] === null) {\r\n                        callback([]);\r\n                        dis.loadCounter--;\r\n                        if (dis.loadCounter <= 0) {\r\n                            dis.isLoading = false;\r\n                            dis.loadCounter = 0;\r\n                        }\r\n                    } else {\r\n                        this.totalRowsCount = resp[this.serverConfig.totalRowsCountKey];\r\n                        this.filteredRowsCount = resp[this.serverConfig.filteredRowsCountKey];\r\n                        for (const rawRow of resp[this.serverConfig.rowsKey]) {\r\n                            let uniqueVal = null;\r\n                            if (this.serverConfig.rowUniqueKey === undefined || this.serverConfig.rowUniqueKey === null) {\r\n                                uniqueVal = new Date().getTime();\r\n                            } else {\r\n                                uniqueVal = rawRow[this.serverConfig.rowUniqueKey];\r\n                            }\r\n                            const row = new TreeTableRow(uniqueVal, rawRow, false, undefined);\r\n                            row.clickablesContext = this.config.rowClickablesContext;\r\n                            row.clickables = this.config.rowClickables;\r\n                            rows.push(row);\r\n                        }\r\n                        const lastRawRow = resp[this.serverConfig.rowsKey][resp[this.serverConfig.rowsKey].length - 1];\r\n                        if (lastRawRow !== undefined && lastRawRow !== null) {\r\n                            if (this.serverConfig.rowUniqueKey !== undefined && this.serverConfig.rowUniqueKey !== null) {\r\n                                this.tokens[this.page] = lastRawRow[this.serverConfig.rowUniqueKey];\r\n                            }\r\n                        }\r\n                        callback(rows);\r\n                        dis.loadCounter--;\r\n                        if (dis.loadCounter <= 0) {\r\n                            dis.isLoading = false;\r\n                            dis.loadCounter = 0;\r\n                        }\r\n                    }\r\n                } else {\r\n                    dis.loadCounter--;\r\n                    if (dis.loadCounter <= 0) {\r\n                        dis.isLoading = false;\r\n                        dis.loadCounter = 0;\r\n                    }\r\n                }\r\n            }, err => {\r\n                dis.loadCounter--;\r\n                if (dis.loadCounter <= 0) {\r\n                    dis.isLoading = false;\r\n                    dis.loadCounter = 0;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    allRowsExpanded(): boolean {\r\n        return false;\r\n    }\r\n\r\n    allRowsCollapsed(): boolean {\r\n        return false;\r\n    }\r\n\r\n    splashMessage(msg: string) {\r\n        this.splashMessageContent = msg;\r\n        this.splashMessageFlag = true;\r\n        const dis = this;\r\n        setTimeout(() => {\r\n            dis.splashMessageFlag  = false;\r\n        }, 2000);\r\n    }\r\n}\r\n","export enum TtDataType {\r\n    NUMBER = 'NUMBER',\r\n    TEXT = 'TEXT',\r\n    DATE = 'DATE',\r\n    ACTIONS = 'ACTIONS',\r\n    SELECT = 'SELECT',\r\n    INPUT_TEXT = 'INPUT_TEXT',\r\n    INPUT_SELECT = 'INPUT_SELECT'\r\n}\r\n","export enum TreeTableRowActionType {\r\n    BUTTON, LINK, TOGGLE_CHILD, TOGGLE_SELECT\r\n}\r\n","import {\r\n  Component, OnInit, KeyValueDiffer, Input, KeyValueDiffers,\r\n  KeyValueChanges, Output, EventEmitter, DoCheck, HostBinding\r\n} from '@angular/core';\r\nimport * as moment_ from 'moment';\r\nimport { TreeTableData, TreeTableRow } from '../classes/tree-table-data';\r\nimport { TreeTableRowAction } from '../classes/tree-table-row-action';\r\nimport { TreeTableHeaderObject } from '../classes/tree-table-header-object';\r\nimport { TtDataType } from '../classes/tt-data-type';\r\nimport * as XLSX from 'xlsx';\r\nimport * as FileSaver from 'file-saver';\r\nimport { TreeTableRowActionType } from '../classes/tree-table-row-action-type';\r\n\r\ndeclare var $: any;\r\n\r\nconst moment = moment_;\r\n\r\n@Component({\r\n  selector: 'angular-tree-table',\r\n  templateUrl: './angular-tree-table.component.html',\r\n  styleUrls: ['./angular-tree-table.component.scss']\r\n})\r\nexport class AngularTreeTableComponent implements OnInit, DoCheck {\r\n\r\n  @HostBinding('class') componentClass = '';\r\n  private dataDiffers: KeyValueDiffer<string, any>;\r\n  @Input() tableData = new TreeTableData();\r\n  filteredData: TreeTableRow[] = [];\r\n  className = '';\r\n  randomInstance = null;\r\n  dropdownHideListenerAdded = false;\r\n  currentPageData = new TreeTableData();\r\n  private columnFiltersDiffers: KeyValueDiffer<string, any>;\r\n  json = null;\r\n  extraInfoItemWidthPercent = 100;\r\n  @Output() rowSelectionChanged = new EventEmitter<any[]>();\r\n  @Output() inputRowSelectChanged = new EventEmitter<{ event: any, rowData: any, headerKey: string, value: any, level: number }>();\r\n  @Output() inputRowTextChanged = new EventEmitter<{ event: any, rowData: any, headerKey: string, value: any, level: number }>();\r\n\r\n  constructor(private differs: KeyValueDiffers) {\r\n    this.json = JSON;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.validateData();\r\n    this.setPageData(this.tableData.page);\r\n    this.componentClass = 'slevel-'+this.tableData.config.level + ' expandable-arrow-position-' + this.tableData.config.expandableArrowPlacement + ' expandable-type-' + this.tableData.config.expandableType;\r\n    this.className = 'table-tree level' + this.tableData.config.level;\r\n    if (this.tableData.config.level === 0) {\r\n      console.warn('Initialize Search Functionality');\r\n    }\r\n    this.dataDiffers = this.differs.find(this.tableData).create();\r\n    this.columnFiltersDiffers = this.differs.find(this.tableData.config.columnFilters).create();\r\n    this.randomInstance = Math.floor(Math.random() * Math.floor(9999));\r\n    this.extraInfoItemWidthPercent = 100 / this.tableData.config.extraInfos.length;\r\n\r\n    this.redefineTableDataFunctions();\r\n  }\r\n\r\n  redefineTableDataFunctions() {\r\n    const dis = this;\r\n    this.tableData.allRowsCollapsed = (): boolean => {\r\n      return dis.currentPageData.data.length === dis.currentPageData.data.filter(v => !v.expanded).length;\r\n    };\r\n\r\n    this.tableData.allRowsExpanded = (): boolean => {\r\n      return dis.currentPageData.data.length === dis.currentPageData.data.filter(v => v.expanded).length;\r\n    };\r\n  }\r\n\r\n  dataChanged(changes: KeyValueChanges<string, any>) {\r\n    this.redefineTableDataFunctions();\r\n    this.evaluateExpressionsInTableData();\r\n    this.setPageData(this.tableData.page);\r\n  }\r\n\r\n  evaluateExpressionsInTableData() {\r\n    for (let i = 0; i < this.tableData.data.length; i++) {\r\n      const rowData = this.tableData.data[i];\r\n      this.tableData.headers.forEach(header => {\r\n        rowData.data[header.dataProperty] = this.evaluateConcat(header.dataProperty, rowData.data);\r\n      });\r\n    }\r\n  }\r\n\r\n  executeExpression(expression: string, data: any): any {\r\n    let result = undefined;\r\n    if (expression.indexOf(' - ') > -1) {\r\n      const expressionParts = expression.split(' - ');\r\n      for (let [index, expressionPart] of expressionParts.entries()) {\r\n        expressionParts[index] = this.executeExpression(expressionPart, data);\r\n      }\r\n      expressionParts.forEach(v => {\r\n        if (result === undefined) {\r\n          result = v;\r\n        } else {\r\n          result = result - parseFloat(v);\r\n        }\r\n      });\r\n      return result;\r\n    } else if (expression.indexOf(' + ') > -1) {\r\n      const expressionParts = expression.split(' + ');\r\n      for (let [index, expressionPart] of expressionParts.entries()) {\r\n        expressionParts[index] = this.executeExpression(expressionPart, data);\r\n      }\r\n      expressionParts.forEach(v => {\r\n        if (result === undefined) {\r\n          result = v;\r\n        } else {\r\n          result = result + parseFloat(v);\r\n        }\r\n      });\r\n      return result;\r\n    } else if (expression.indexOf(' * ') > -1) {\r\n      const expressionParts = expression.split(' * ');\r\n      for (let [index, expressionPart] of expressionParts.entries()) {\r\n        expressionParts[index] = this.executeExpression(expressionPart, data);\r\n      }\r\n      expressionParts.forEach(v => {\r\n        if (result === undefined) {\r\n          result = v;\r\n        } else {\r\n          result = result * parseFloat(v);\r\n        }\r\n      });\r\n      return result;\r\n    } else if (expression.indexOf(' / ') > -1) {\r\n      const expressionParts = expression.split(' / ');\r\n      for (let [index, expressionPart] of expressionParts.entries()) {\r\n        expressionParts[index] = this.executeExpression(expressionPart, data);\r\n      }\r\n      expressionParts.forEach(v => {\r\n        if (result === undefined) {\r\n          result = v;\r\n        } else {\r\n          result = result / parseFloat(v);\r\n        }\r\n      });\r\n      return result;\r\n    } else {\r\n      return this.getValueWithPathFromObject(expression, data);\r\n    }\r\n  }\r\n\r\n  evaluateConcat(expression: string, data: any) {\r\n    if (data === undefined) {\r\n      return undefined;\r\n    }\r\n    if (data[expression] !== undefined && data[expression] !== null) {\r\n      return data[expression];\r\n    }\r\n    if (expression.startsWith('=CONCAT(') && expression.endsWith(')')) {\r\n        expression = expression.replace('=CONCAT(', '');\r\n        expression = expression.substring(0, expression.length - 1);\r\n        const expressionParts = expression.split('|||');\r\n        let result = '';\r\n        expressionParts.forEach(v => {\r\n            result += '' + this.executeExpression(v, data);\r\n        });\r\n        return result;\r\n    } else {\r\n        return this.executeExpression(expression, data);\r\n    }\r\n}\r\n\r\n  /**\r\n   * {\r\n   *    \"PO_NUMBER\": \"123456\",\r\n   *    \"PO_TAX\": [{\r\n   *        \"SGST\": 15\r\n   *    }]\r\n   * }\r\n   * \r\n   * PO_TAX.SGST\r\n   * PO_TAX[0].SGST\r\n   * PO_TAX[0].SGST + PO_TAX[0].CGST\r\n   * =CONCAT('SGST: '|||PO_TAX[0].SGST + PO_TAX[0].CGST|||'\\r\\n')\r\n   */\r\n  getValueWithPathFromObject(path: string, data: any) {\r\n    const pathParts = path.split('.');\r\n    let result = data;\r\n    for (let part of pathParts) {\r\n      if (part.endsWith(']')) {\r\n        const subParts = part.split('[');\r\n        const arrayProperty = subParts[0];\r\n        if (result[arrayProperty] === undefined || result[arrayProperty] === null || !Array.isArray(result[arrayProperty])) {\r\n          return '';\r\n        }\r\n        const arrayIndex = parseInt(subParts[1].replace(']', ''));\r\n        if (isNaN(arrayIndex)) {\r\n          return '#ERR: NaN';\r\n        }\r\n        result = result[arrayProperty][arrayIndex];\r\n      } else {\r\n        if (result === undefined) {\r\n          return '';\r\n        }\r\n        if (part === ' ') {\r\n          return ' ';\r\n        }\r\n        if (result[part] === undefined) {\r\n          return part;\r\n        }\r\n        result = result[part];\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  refreshTable() {\r\n    this.setPageData(this.tableData.page);\r\n  }\r\n\r\n  ngDoCheck(): void {\r\n    let changes = this.dataDiffers.diff(this.tableData);\r\n    if (changes) {\r\n      this.dataChanged(changes);\r\n    }\r\n    changes = this.columnFiltersDiffers.diff(this.tableData.config.columnFilters);\r\n    if (changes) {\r\n      this.dataChanged(changes);\r\n    }\r\n    if (!this.dropdownHideListenerAdded) {\r\n      $('#dropDownVisCon' + this.randomInstance).on('hide.bs.dropdown', function (e) {\r\n        if (e.clickEvent !== undefined) {\r\n          if ($(e.clickEvent.target).hasClass('btnVis')) {\r\n            return false;\r\n          }\r\n        }\r\n        this.dropdownHideListenerAdded = true;\r\n        return true;\r\n      });\r\n    }\r\n  }\r\n\r\n  expandRow(row: TreeTableRow) {\r\n    row.expanded = true;\r\n    row.children.config.level = this.tableData.config.level + 1;\r\n    if (this.tableData.config.events.rowExpanded !== null) {\r\n      this.tableData.config.events.rowExpanded(row, this.tableData);\r\n    }\r\n  }\r\n\r\n  collapseRow(row: TreeTableRow) {\r\n    row.expanded = false;\r\n    this.tableData.isAllRowsExpanded = false;\r\n    if (this.tableData.config.events.rowCollapsed !== null) {\r\n      this.tableData.config.events.rowCollapsed(row, this.tableData);\r\n    }\r\n  }\r\n\r\n  expandAllRows() {\r\n    this.expandAllRowsInData(this.currentPageData.data);\r\n    this.tableData.isAllRowsExpanded = true;\r\n  }\r\n\r\n  expandAllRowsInData(data: TreeTableRow[]) {\r\n    for (const row of data) {\r\n      if (row.expandable) {\r\n        if (row.children !== null) {\r\n          if (row.children.data !== null) {\r\n            if (this.tableData.config.showExpandAllEmptyChildren) {\r\n              // row.expanded = true;\r\n              this.expandRow(row);\r\n              this.expandAllRowsInData(row.children.data);\r\n              row.children.isAllRowsExpanded = true;\r\n            } else {\r\n              if (row.children.data.length > 0) {\r\n                // row.expanded = true;\r\n                this.expandRow(row);\r\n                this.expandAllRowsInData(row.children.data);\r\n                row.children.isAllRowsExpanded = true;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  collapseAllRows() {\r\n    this.collapseAllRowsInData(this.currentPageData.data);\r\n    this.tableData.isAllRowsExpanded = false;\r\n  }\r\n\r\n  collapseAllRowsInData(data: TreeTableRow[]) {\r\n    for (const row of data) {\r\n      if (row.expandable) {\r\n        if (row.children !== null) {\r\n          if (row.children.data !== null) {\r\n            if (this.tableData.config.showExpandAllEmptyChildren) {\r\n              // row.expanded = false;\r\n              this.collapseRow(row);\r\n              this.collapseAllRowsInData(row.children.data);\r\n              row.children.isAllRowsExpanded = false;\r\n            } else {\r\n              if (row.children.data.length > 0) {\r\n                // row.expanded = false;\r\n                this.collapseRow(row);\r\n                this.collapseAllRowsInData(row.children.data);\r\n                row.children.isAllRowsExpanded = false;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  toggleRow(row: TreeTableRow) {\r\n    row.expanded ? this.collapseRow(row) : this.expandRow(row);\r\n  }\r\n\r\n  rowAction(row: TreeTableRow, action: TreeTableRowAction) {\r\n    if (action.type === TreeTableRowActionType.TOGGLE_CHILD) {\r\n      this.toggleRow(row);\r\n    }\r\n    if (action.action !== undefined && action.action !== null) {\r\n      action.action.bind(action.context, row.data, action)();\r\n    }\r\n  }\r\n\r\n  changePage(page: number) {\r\n    if (this.tableData.page === page || page < 1) {\r\n      return;\r\n    }\r\n    if (page > this.tableData.totalPagesCount()) {\r\n      return;\r\n    }\r\n    // if (this.currentPageData.data.length < this.tableData.pageSize && this.tableData.page < page) {\r\n    //   this.tableData.splashMessage('Reached last page');\r\n    //   return;\r\n    // }\r\n    this.setPageData(page);\r\n    this.collapseAllRows();\r\n  }\r\n\r\n  setPageData(pageNumber: number) {\r\n    this.extraInfoItemWidthPercent = 100 / this.tableData.config.extraInfos.length;\r\n    const dis = this;\r\n    if (this.tableData.serverConfig.url !== undefined && this.tableData.serverConfig.url !== null) {\r\n      if (pageNumber !== 1) {\r\n        if ((pageNumber - 1) * this.tableData.pageSize > this.tableData.totalRowsCount) {\r\n          console.warn('Invalid Page', (pageNumber - 1) * this.tableData.pageSize, this.tableData.totalRowsCount);\r\n          return;\r\n        }\r\n      }\r\n      this.tableData.page = pageNumber;\r\n      this.tableData.loadData(rows => {\r\n        // if (rows.length === 0) {\r\n        //   dis.changePage(dis.tableData.page - 1);\r\n        //   dis.tableData.splashMessage('Reached last page');\r\n        //   console.warn('No data on the next page');\r\n        //   // return;\r\n        // }\r\n        dis.filteredData.splice(0, this.filteredData.length);\r\n        for (const row of rows) {\r\n          dis.filteredData.push(row);\r\n        }\r\n        const rowsCount = dis.filteredData.length;\r\n        // dis.tableData.pagesCount = Math.floor(rowsCount / this.tableData.pageSize);\r\n        // if (dis.tableData.pageSize * dis.tableData.pagesCount < rowsCount) {\r\n        //   dis.tableData.pagesCount++;\r\n        // }\r\n        dis.currentPageData.headers = dis.tableData.headers;\r\n        const startIndex = (pageNumber - 1) * this.tableData.pageSize;\r\n        if (this.currentPageData.data === undefined) {\r\n          this.currentPageData.data = [];\r\n        }\r\n        this.currentPageData.data.splice(0, this.currentPageData.data.length);\r\n        for (let i = 0; i < parseInt(this.tableData.pageSize + '', 10); i++) {\r\n          // console.log('Adding Vvalue', this.filteredData[i], i);\r\n          if (this.filteredData[i] !== null && this.filteredData[i] !== undefined) {\r\n            this.currentPageData.data.push(this.filteredData[i]);\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      dis.tableData.totalRowsCount = dis.tableData.data.length;\r\n      if (pageNumber !== 1) {\r\n        if ((pageNumber - 1) * this.tableData.pageSize > this.tableData.totalRowsCount) {\r\n          console.warn('Invalid Page', (pageNumber - 1) * this.tableData.pageSize, this.tableData.totalRowsCount);\r\n          return;\r\n        }\r\n      }\r\n      this.tableData.page = pageNumber;\r\n      this.filteredData.splice(0, this.filteredData.length);\r\n      this.filteredData = this.tableData.data.filter((v) => {\r\n        const keys = Object.keys(v.data);\r\n        // Need to do calculations\r\n        let matched = false;\r\n        if (this.tableData.keyword !== undefined && this.tableData.keyword !== null && this.tableData.keyword.trim() !== '') {\r\n          for (const key of keys) {\r\n            if (v.data[key] === undefined || v.data[key] === null) {\r\n              continue;\r\n            }\r\n            matched = v.data[key].toString().toLowerCase().indexOf(this.tableData.keyword.toLowerCase()) > -1;\r\n            if (matched) {\r\n              break;\r\n            }\r\n          }\r\n        } else {\r\n          matched = true;\r\n        }\r\n        if (matched && this.tableData.config.columnFilters !== undefined && this.tableData.config.columnFilters !== null) {\r\n          for (const key of keys) {\r\n            if (this.tableData.config.columnFilters[key] !== undefined &&\r\n              this.tableData.config.columnFilters[key] !== null &&\r\n              Array.isArray(this.tableData.config.columnFilters[key])) {\r\n              if (v.data[key] === undefined || v.data[key] === null) {\r\n                matched = false;\r\n                break;\r\n              }\r\n              let orMatch = false;\r\n              for (const orFilter of this.tableData.config.columnFilters[key]) {\r\n                orMatch = v.data[key].toString().toLowerCase().indexOf(orFilter.toLowerCase()) > -1;\r\n                if (orMatch) {\r\n                  break;\r\n                }\r\n              }\r\n              matched = orMatch;\r\n              if (!matched) {\r\n                break;\r\n              }\r\n            }\r\n          }\r\n        }\r\n        if (matched && this.tableData.config.visibleColumnFilters !== undefined && this.tableData.config.visibleColumnFilters !== null) {\r\n          for (const key of keys) {\r\n            if (this.tableData.config.visibleColumnFilters[key] !== undefined &&\r\n              this.tableData.config.visibleColumnFilters[key] !== null &&\r\n              this.tableData.config.visibleColumnFilters[key].trim() !== '') {\r\n              if (v.data[key] === undefined || v.data[key] === null) {\r\n                matched = false;\r\n                break;\r\n              }\r\n              matched = v.data[key].toString().toLowerCase().indexOf(this.tableData.config.visibleColumnFilters[key].toLowerCase()) > -1;\r\n              if (!matched) {\r\n                break;\r\n              }\r\n            }\r\n          }\r\n        }\r\n        return matched;\r\n      });\r\n      const rowsCount = dis.filteredData.length;\r\n      dis.tableData.filteredRowsCount = rowsCount;\r\n      // dis.tableData.pagesCount = Math.floor(rowsCount / this.tableData.pageSize);\r\n      // if (dis.tableData.pageSize * dis.tableData.pagesCount < rowsCount) {\r\n      //   dis.tableData.pagesCount++;\r\n      // }\r\n      dis.currentPageData.headers = dis.tableData.headers;\r\n      const startIndex = (pageNumber - 1) * this.tableData.pageSize;\r\n      if (this.currentPageData.data === undefined) {\r\n        this.currentPageData.data = [];\r\n      }\r\n      this.currentPageData.data.splice(0, this.currentPageData.data.length);\r\n      for (let i = startIndex; i < parseInt(startIndex + '', 10) + parseInt(this.tableData.pageSize + '', 10); i++) {\r\n        if (this.filteredData[i] !== null && this.filteredData[i] !== undefined) {\r\n          // Inserting into current page\r\n          this.currentPageData.data.push(this.filteredData[i]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  clickableClicked(row: TreeTableRow, dataProperty: string) {\r\n    if (typeof row.clickables[dataProperty] === 'string') {\r\n      if (row.clickables[dataProperty] === TreeTableRowActionType.TOGGLE_CHILD.toString()) {\r\n        this.toggleRow(row);\r\n        return;\r\n      }\r\n    }\r\n    if (row.clickablesContext !== null) {\r\n      row.clickables[dataProperty].bind(row.clickablesContext, row.data, dataProperty)();\r\n    } else {\r\n      row.clickables[dataProperty](row.data, dataProperty);\r\n    }\r\n  }\r\n\r\n  validateData() {\r\n    console.warn('Data Schema need to be validated');\r\n  }\r\n\r\n  columnSearchChanged(dataProperty: string) {\r\n    this.setPageData(1);\r\n  }\r\n\r\n  pageNumbers() {\r\n    const pageNumbers = [];\r\n    const limit = 2;\r\n    const maxLimit = 4;\r\n    for (let p = this.tableData.page - limit; p < this.tableData.page; p++) {\r\n      if (p > 0) {\r\n        pageNumbers.push(p);\r\n      }\r\n    }\r\n    const unfilledCount = limit - pageNumbers.length;\r\n    for (let q = this.tableData.page; q <= this.tableData.page + unfilledCount + limit; q++) {\r\n      if (q <= this.tableData.totalPagesCount()) {\r\n        pageNumbers.push(q);\r\n      }\r\n    }\r\n    if (pageNumbers.length < maxLimit) {\r\n      for (let p = this.tableData.page - limit * 2; p < this.tableData.page - limit; p++) {\r\n        if (p > 0) {\r\n          pageNumbers.unshift(p);\r\n        }\r\n      }\r\n    }\r\n    return pageNumbers;\r\n  }\r\n\r\n  exportExcelLocal() {\r\n    const dataRows = [];\r\n    let dataRowsSource = this.tableData.data;\r\n    if (this.tableData.config.excelExportOnlyFilteredRows) {\r\n      dataRowsSource = this.filteredData;\r\n    }\r\n    for (let d of dataRowsSource) {\r\n      const obj = {};\r\n      for (let h of this.tableData.headers) {\r\n        obj[h.title] = d.data[h.dataProperty];\r\n      }\r\n      dataRows.push(obj);\r\n    }\r\n    const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n    const fileExtension = '.xlsx';\r\n    const ws: XLSX.WorkSheet = XLSX.utils.json_to_sheet(dataRows);\r\n    const wb: XLSX.WorkBook = { Sheets: { data: ws }, SheetNames: ['data'] };\r\n    const excelBuffer: any = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\r\n    const data: Blob = new Blob([excelBuffer], { type: fileType });\r\n    FileSaver.saveAs(data, this.tableData.config.excelExportFileName + fileExtension);\r\n  }\r\n\r\n  sortColumn(header: TreeTableHeaderObject) {\r\n    const propertyName = header.dataProperty;\r\n    if (this.tableData.config.sortedColumn[propertyName] === undefined) {\r\n      this.tableData.config.sortedColumn = {};\r\n      this.tableData.config.sortedColumn[propertyName] = 'DESC';\r\n      this.sortDescend(header);\r\n    } else if (this.tableData.config.sortedColumn[propertyName] === 'DESC') {\r\n      this.tableData.config.sortedColumn[propertyName] = 'ASC';\r\n      this.sortAscend(header);\r\n    } else {\r\n      delete this.tableData.config.sortedColumn[propertyName];\r\n    }\r\n  }\r\n\r\n  sortAscend(header: TreeTableHeaderObject) {\r\n    const propertyName = header.dataProperty;\r\n    if (header.dataType === TtDataType.NUMBER) {\r\n      this.tableData.data.sort((a, b) => {\r\n        if (parseFloat(a.data[propertyName]) < parseFloat(b.data[propertyName])) {\r\n          return -1;\r\n        } else if (parseFloat(a.data[propertyName]) > parseFloat(b.data[propertyName])) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n      });\r\n    } else if (header.dataType === TtDataType.DATE) {\r\n      this.tableData.data.sort((a, b) => {\r\n        if (moment(a.data[propertyName]).toDate().getTime() < moment(b.data[propertyName]).toDate().getTime()) {\r\n          return -1;\r\n        } else if (moment(a.data[propertyName]).toDate().getTime() > moment(b.data[propertyName]).toDate().getTime()) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n      });\r\n    } else {\r\n      this.tableData.data.sort((a, b) => {\r\n        if (a.data[propertyName] < b.data[propertyName]) {\r\n          return -1;\r\n        } else if (a.data[propertyName] > b.data[propertyName]) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n      });\r\n    }\r\n    this.setPageData(this.tableData.page);\r\n  }\r\n\r\n  sortDescend(header: TreeTableHeaderObject) {\r\n    const propertyName = header.dataProperty;\r\n    if (header.dataType === TtDataType.NUMBER) {\r\n      this.tableData.data.sort((a, b) => {\r\n        if (parseFloat(a.data[propertyName]) < parseFloat(b.data[propertyName])) {\r\n          return 1;\r\n        } else if (parseFloat(a.data[propertyName]) > parseFloat(b.data[propertyName])) {\r\n          return -1;\r\n        }\r\n        return 0;\r\n      });\r\n    } else if (header.dataType === TtDataType.DATE) {\r\n      this.tableData.data.sort((a, b) => {\r\n        if (moment(a.data[propertyName]).toDate().getTime() < moment(b.data[propertyName]).toDate().getTime()) {\r\n          return 1;\r\n        } else if (moment(a.data[propertyName]).toDate().getTime() > moment(b.data[propertyName]).toDate().getTime()) {\r\n          return -1;\r\n        }\r\n        return 0;\r\n      });\r\n    } else {\r\n      this.tableData.data.sort((a, b) => {\r\n        if (a.data[propertyName] < b.data[propertyName]) {\r\n          return 1;\r\n        } else if (a.data[propertyName] > b.data[propertyName]) {\r\n          return -1;\r\n        }\r\n        return 0;\r\n      });\r\n    }\r\n    this.setPageData(this.tableData.page);\r\n  }\r\n\r\n  search() {\r\n    this.setPageData(1);\r\n  }\r\n\r\n  pageSizeChanged() {\r\n    this.setPageData(1);\r\n  }\r\n\r\n  excelExportClicked() {\r\n    if (this.tableData.serverConfig !== undefined && this.tableData.serverConfig !== null && this.tableData.serverConfig.excelExportUrl !== undefined && this.tableData.serverConfig.excelExportUrl !== null) {\r\n      this.tableData.loadExcelData();\r\n    } else {\r\n      this.exportExcelLocal();\r\n    }\r\n  }\r\n\r\n  getPageTo() {\r\n    let to = this.tableData.pageSize * this.tableData.page;\r\n    if (to > this.tableData.filteredRowsCount) {\r\n      to = this.tableData.filteredRowsCount;\r\n    }\r\n    return to;\r\n  }\r\n\r\n  isAllRowsSelected(header: TreeTableHeaderObject): boolean {\r\n    return this.tableData.data.filter(v => v.selected).length === this.tableData.data.length;\r\n  }\r\n\r\n  toggleSelectAllRows(header: TreeTableHeaderObject) {\r\n    this.isAllRowsSelected(header) ? this.deselectAllRows(header) : this.selectAllRows(header);\r\n  }\r\n\r\n  private selectAllRows(header: TreeTableHeaderObject) {\r\n    this.tableData.data = this.tableData.data.map(v => { v.selected = true; return v; });\r\n    this.updateHost();\r\n  }\r\n\r\n  private deselectAllRows(header: TreeTableHeaderObject) {\r\n    this.tableData.data = this.tableData.data.map(v => { v.selected = false; return v; });\r\n    this.updateHost();\r\n  }\r\n\r\n  toggleSelectRow(row: TreeTableRow) {\r\n    row.selected = !row.selected;\r\n    this.updateHost();\r\n  }\r\n\r\n  getRowClass(row: TreeTableRow) {\r\n    let classes = { 'expanded-row': row.expanded, 'collapsed-row': !row.expanded, 'selected': 'row.selected', 'unselected': '!row.selected' };\r\n    for (const cls of row.classes) {\r\n      classes[cls] = true;\r\n    }\r\n    return classes;\r\n  }\r\n\r\n  getSelectedRows() {\r\n    const rows = [...this.tableData.data.filter(v => {\r\n      if (v.selected) {\r\n        return v.data;\r\n      }\r\n    })];\r\n    return rows.map(v => v.data);\r\n  }\r\n\r\n  childRowSelectionChanged(data: TreeTableRow[]) {\r\n    if (this.rowSelectionChanged !== undefined && this.rowSelectionChanged !== null) {\r\n      this.rowSelectionChanged.emit(data);\r\n    }\r\n  }\r\n\r\n  updateHost() {\r\n    if (this.rowSelectionChanged !== undefined && this.rowSelectionChanged !== null) {\r\n      this.rowSelectionChanged.emit(this.getSelectedRows());\r\n    }\r\n  }\r\n\r\n  inputRowSelectChangedInternal(event: any, rowData: any, headerKey: string, value: any, level: number) {\r\n    this.inputRowSelectChanged.emit({ event, rowData, headerKey, value, level });\r\n  }\r\n\r\n  inputRowTextChangedInternal(event: any, rowData: any, headerKey: string, value: any, level: number) {\r\n    this.inputRowTextChanged.emit({ event, rowData, headerKey, value, level });\r\n  }\r\n\r\n  inputRowSelectChangedChild(data: { event: any, rowData: any, headerKey: string, value: any, level: number }) {\r\n    this.inputRowSelectChanged.emit(data);\r\n  }\r\n\r\n  inputRowTextChangedChild(data: { event: any, rowData: any, headerKey: string, value: any, level: number }) {\r\n    this.inputRowTextChanged.emit(data);\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AngularTreeTableComponent } from './angular-tree-table.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [AngularTreeTableComponent],\r\n  imports: [\r\n    FormsModule,\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    AngularTreeTableComponent\r\n  ]\r\n})\r\nexport class AngularTreeTableModule { }\r\n","import { TtDataType } from './tt-data-type';\r\n\r\nexport class TreeTableHeaderObject {\r\n    dataProperty: string;\r\n    title: string;\r\n    style: string;\r\n    show: boolean;\r\n    dataType: TtDataType = TtDataType.TEXT;\r\n    enableColumnSearch = true; //It will take effect when column search is enabled in data\r\n    canChangeVisbilityOnRuntime = true;\r\n    constructor(title: string, dataProperty: string, style: string, show: boolean, canChangeVisibilityOnRuntime: boolean = true) {\r\n        this.dataProperty = dataProperty;\r\n        this.title = title;\r\n        this.style = style;\r\n        this.show = show;\r\n        this.canChangeVisbilityOnRuntime = canChangeVisibilityOnRuntime;\r\n    }\r\n}\r\n","import { TreeTableRowActionType } from './tree-table-row-action-type';\r\n\r\nexport class TreeTableRowAction {\r\n    label: string;\r\n    title: string;\r\n    classes: string;\r\n    action: (rowData: any, rowAction: TreeTableRowAction) => void;\r\n    type: TreeTableRowActionType = TreeTableRowActionType.BUTTON;\r\n    reference: any;\r\n    context: any;\r\n\r\n    constructor(label: string, title: string, classes: string, action: (rowData: any, rowAction: TreeTableRowAction) => void) {\r\n        this.label = label;\r\n        this.title = title;\r\n        this.classes = classes;\r\n        this.action = action;\r\n    }\r\n}\r\n"],"names":["XLSX.utils","XLSX.write","FileSaver.saveAs"],"mappings":";;;;;;;;;;;AAAA,MAKa,uBAAuB;IAElC,iBAAiB;;;YALlB,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;ACJD,MAAa,mBAAmB;IAAhC;;;;;;QAMI,YAAO,GAAI,IAAI,CAAC;;;;;;QAMhB,eAAU,GAAS,EAAE,CAAC;;;;;;QAMtB,qBAAgB,GAAI,IAAI,CAAC;;;;;;QAMzB,qBAAgB,GAAI,KAAK,CAAC;;;;;;QAM1B,6BAAwB,GAAI,KAAK,CAAC;;;;;;QAMlC,mCAA8B,GAAI,KAAK,CAAC;;;;;;;;QAQxC,yBAAoB,GAAI,EAAE,CAAC;;;;;;QAM3B,kBAAa,GAAI,qDAAqD,CAAC;;;;;;QAMvE,qBAAgB,GAAI,uBAAuB,CAAC;;;;;;QAM5C,sBAAiB,GAAI,wBAAwB,CAAC;;;;;;QAM9C,yBAAoB,GAAI,2BAA2B,CAAC;;;;;;QAMpD,oBAAe,GAAI,IAAI,CAAC;;;;;;QAMxB,qBAAgB,GAAI,KAAK,CAAC;;;;;;QAM1B,wBAAmB,GAAI,KAAK,CAAC;;;;;;QAM7B,+BAA0B,GAAI,KAAK,CAAC;;;;;;;;QAQpC,iBAAY,GAAI,EAAE,CAAC;;;;;;QAMnB,2BAAsB,GAAI,IAAI,CAAC;;;;;;QAM/B,cAAS,GAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;;;;;;QAM/B,UAAK,GAAI,CAAC,CAAC;;;;QAIX,kBAAa,GAAI,EAAE,CAAC;;;;;;QAMpB,kBAAa,GAAI,EAAE,CAAC;;;;;;QAMpB,yBAAoB,GAAI,IAAI,CAAC;;;;;;QAM7B,iBAAY,GAAI,IAAI,CAAC;;;;;;QAMrB,sBAAiB,GAAI,KAAK,CAAC;;;;;;QAM3B,gCAA2B,GAAI,KAAK,CAAC;;;;;;QAMrC,wBAAmB,GAAI,YAAY,CAAC;;;;;;QAMpC,0BAAqB,GAAI,cAAc,CAAC;;;;;;QAMxC,2BAAsB,GAAI,IAAI,CAAC;;;;;;QAM/B,4BAAuB,GAAI,KAAK,CAAC;;;;QAIjC,WAAM,GAAyB,IAAI,mBAAmB,EAAE,CAAC;;;;;QAMzD,mBAAc,GAAoB,cAAc,CAAC,iBAAiB,CAAC;QAEnE,6BAAwB,GAA8B,wBAAwB,CAAC,eAAe,CAAC;KAClG;CAAA;;;;;;;;IAvLG,sCAAgB;;;;;;;IAMhB,yCAAsB;;;;;;;IAMtB,+CAAyB;;;;;;;IAMzB,+CAA0B;;;;;;;IAM1B,uDAAkC;;;;;;;IAMlC,6DAAwC;;;;;;;;;IAQxC,mDAA2B;;;;;;;IAM3B,4CAAuE;;;;;;;IAMvE,+CAA4C;;;;;;;IAM5C,gDAA8C;;;;;;;IAM9C,mDAAoD;;;;;;;IAMpD,8CAAwB;;;;;;;IAMxB,+CAA0B;;;;;;;IAM1B,kDAA6B;;;;;;;IAM7B,yDAAoC;;;;;;;;;IAQpC,2CAAmB;;;;;;;IAMnB,qDAA+B;;;;;;;IAM/B,wCAA+B;;;;;;;IAM/B,oCAAW;;;;;IAIX,4CAAoB;;;;;;;IAMpB,4CAAoB;;;;;;;IAMpB,mDAA6B;;;;;;;IAM7B,2CAAqB;;;;;;;IAMrB,gDAA2B;;;;;;;IAM3B,0DAAqC;;;;;;;IAMrC,kDAAoC;;;;;;;IAMpC,oDAAwC;;;;;;;IAMxC,qDAA+B;;;;;;;IAM/B,sDAAiC;;;;;IAIjC,qCAAyD;;;;;;IAMzD,6CAAmE;;IAEnE,uDAA+F;;;;IAI/F,mBAAoB,mBAAmB;IACvC,cAAe,cAAc;;;;IAI7B,iBAAkB,iBAAiB;IACnC,cAAe,cAAc;;MAGpB,mBAAmB;IAAhC;QACI,oBAAe,GAAI,IAAI,CAAC;QACxB,gBAAW,GAAI,IAAI,CAAC;QACpB,sBAAiB,GAAI,IAAI,CAAC;QAC1B,iBAAY,GAAI,IAAI,CAAC;KACxB;CAAA;;;IAJG,8CAAwB;;IACxB,0CAAoB;;IACpB,gDAA0B;;IAC1B,2CAAqB;;AAGzB,MAAa,yBAAyB;IAAtC;;;;;;;;QAQI,QAAG,GAAG,IAAI,CAAC;;;;;;;;QAQX,mBAAc,GAAI,IAAI,CAAC;;;;;;QAMvB,WAAM,GAAI,IAAI,CAAC;;;;;;QAMf,eAAU,GAAI,IAAI,qCAAqC,EAAE,CAAC;;;;;;QAM1D,YAAO,GAAI,MAAM,CAAC;;;;;;QAMlB,sBAAiB,GAAI,gBAAgB,CAAC;;;;;;QAMtC,yBAAoB,GAAI,mBAAmB,CAAC;;;;;;QAM5C,iBAAY,GAAI,IAAI,CAAA;KACvB;CAAA;;;;;;;;;;IA7CG,wCAAW;;;;;;;;;IAQX,mDAAuB;;;;;;;IAMvB,2CAAe;;;;;;;IAMf,+CAA0D;;;;;;;IAM1D,4CAAkB;;;;;;;IAMlB,sDAAsC;;;;;;;IAMtC,yDAA4C;;;;;;;IAM5C,iDAAoB;;AAGxB,MAAa,qCAAqC;IAAlD;;;;;;QAMI,SAAI,GAAI,MAAM,CAAC;;;;;;QAMf,UAAK,GAAI,OAAO,CAAC;;;;;;QAMjB,SAAI,GAAI,MAAM,CAAC;;;;;;QAMf,WAAM,GAAI,QAAQ,CAAC;;;;;;QAMnB,cAAS,GAAI,WAAW,CAAC;;;;;;QAMzB,eAAU,GAAI,YAAY,CAAC;;;;;;QAM3B,cAAS,GAAI,WAAW,CAAC;KAC5B;CAAA;;;;;;;;IArCG,qDAAe;;;;;;;IAMf,sDAAiB;;;;;;;IAMjB,qDAAe;;;;;;;IAMf,uDAAmB;;;;;;;IAMnB,0DAAyB;;;;;;;IAMzB,2DAA2B;;;;;;;IAM3B,0DAAyB;;;;;;;AC/S7B,MAIa,YAAY;;;;;;;IAkBrB,YAAY,EAAU,EAAE,IAAQ,EAAE,UAAmB,EAAE,QAAuB;QAjB9E,OAAE,GAAW,IAAI,CAAC;QAClB,SAAI,GAAO,EAAE,CAAC;QACd,eAAU,GAAG,KAAK,CAAC;QACnB,aAAQ,GAAkB,IAAI,CAAC;QAC/B,aAAQ,GAAG,KAAK,CAAC;;QAEjB,sBAAiB,GAAQ,IAAI,CAAC;;QAE9B,eAAU,GAAO,EAAE,CAAC;QACpB,WAAM,GAAO,EAAE,CAAC;QAChB,YAAO,GAAa,EAAE,CAAC;;QAEvB,YAAO,GAAyB,EAAE,CAAC;;QAEnC,aAAQ,GAAY,KAAK,CAAC;QAC1B,YAAO,GAA4C,EAAE,CAAC;QAGlD,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAC5B;CACJ;;;IAvBG,0BAAkB;;IAClB,4BAAc;;IACd,kCAAmB;;IACnB,gCAA+B;;IAC/B,gCAAiB;;IAEjB,yCAA8B;;IAE9B,kCAAoB;;IACpB,8BAAgB;;IAChB,+BAAuB;;IAEvB,+BAAmC;;IAEnC,gCAA0B;;IAC1B,+BAAsD;;AAW1D,MAAa,aAAa;;;;;;IAsBtB,YAAY,MAA4B,EAAE,YAAwC,EAAE,IAAiB;QArBrG,YAAO,GAA4B,EAAE,CAAC;QACtC,SAAI,GAAmB,EAAE,CAAC;QAE1B,cAAS,GAAG,KAAK,CAAC;QAClB,YAAO,GAAW,IAAI,CAAC;QACvB,SAAI,GAAG,CAAC,CAAC;QACT,aAAQ,GAAG,EAAE,CAAC;QACd,eAAU,GAAG,IAAI,CAAC;QAClB,mBAAc,GAAG,CAAC,CAAC;QACnB,sBAAiB,GAAG,CAAC,CAAC;QACtB,sBAAiB,GAAG,KAAK,CAAC;QAC1B,yBAAoB,GAAG,EAAE,CAAC;QAC1B,WAAM,GAAG,CAAC,IAAI,CAAC,CAAC;QAChB,sBAAiB,GAAG,KAAK,CAAC;QAE1B,iBAAY,GAAG,IAAI,yBAAyB,EAAE,CAAC;QAC/C,WAAM,GAAG,IAAI,mBAAmB,EAAE,CAAC;QACnC,gBAAW,GAAG,CAAC,CAAC;QAER,SAAI,GAAe,IAAI,CAAC;QAG5B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,YAAY,KAAK,SAAS,IAAI,YAAY,KAAK,IAAI,EAAE;YACrD,IAAI,YAAY,CAAC,UAAU,KAAK,SAAS,IAAI,YAAY,CAAC,UAAU,KAAK,IAAI,EAAE;gBAC3E,YAAY,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC;aAC1D;YACD,IAAI,YAAY,CAAC,OAAO,KAAK,SAAS,IAAI,YAAY,CAAC,OAAO,KAAK,IAAI,EAAE;gBACrE,YAAY,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC;aACpD;YACD,IAAI,YAAY,CAAC,YAAY,KAAK,SAAS,IAAI,YAAY,CAAC,YAAY,KAAK,IAAI,EAAE;gBAC/E,YAAY,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC;aAC9D;YACD,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;YACjC,IAAI,CAAC,QAAQ,EAAE,CAAC;SACnB;aAAM;;SAEN;QACD,IAAI,MAAM,KAAK,SAAS,IAAI,MAAM,KAAK,IAAI,EAAE;YACzC,IAAI,MAAM,CAAC,UAAU,KAAK,SAAS,IAAI,MAAM,CAAC,UAAU,KAAK,IAAI,EAAE;gBAC/D,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;aAC9C;YACD,IAAI,MAAM,CAAC,OAAO,KAAK,SAAS,IAAI,MAAM,CAAC,OAAO,KAAK,IAAI,EAAE;gBACzD,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;aACxC;YACD,IAAI,MAAM,CAAC,gBAAgB,KAAK,SAAS,IAAI,MAAM,CAAC,gBAAgB,KAAK,IAAI,EAAE;gBAC3E,IAAI,CAAC,MAAM,CAAC,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,CAAC;aAC1D;YACD,IAAI,MAAM,CAAC,gBAAgB,KAAK,SAAS,IAAI,MAAM,CAAC,gBAAgB,KAAK,IAAI,EAAE;gBAC3E,IAAI,CAAC,MAAM,CAAC,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,CAAC;aAC1D;YACD,IAAI,MAAM,CAAC,cAAc,KAAK,SAAS,IAAI,MAAM,CAAC,cAAc,KAAK,IAAI,EAAE;gBACvE,IAAI,CAAC,MAAM,CAAC,cAAc,GAAG,MAAM,CAAC,cAAc,CAAC;aACtD;YACD,IAAI,MAAM,CAAC,wBAAwB,KAAK,SAAS,IAAI,MAAM,CAAC,wBAAwB,KAAK,IAAI,EAAE;gBAC3F,IAAI,CAAC,MAAM,CAAC,wBAAwB,GAAG,MAAM,CAAC,wBAAwB,CAAC;aAC1E;YACD,IAAI,MAAM,CAAC,MAAM,KAAK,SAAS,IAAI,MAAM,CAAC,MAAM,KAAK,IAAI,EAAE;gBACvD,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;aACtC;iBAAM;gBACH,IAAI,MAAM,CAAC,MAAM,CAAC,WAAW,KAAK,SAAS;uBACpC,MAAM,CAAC,MAAM,CAAC,WAAW,KAAK,IAAI,EAAE;oBACvC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC;iBAC9D;gBACD,IAAI,MAAM,CAAC,MAAM,CAAC,YAAY,KAAK,SAAS;uBACrC,MAAM,CAAC,MAAM,CAAC,YAAY,KAAK,IAAI,EAAE;oBACxC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC;iBAChE;aACJ;YACD,IAAI,MAAM,CAAC,aAAa,KAAK,SAAS,IAAI,MAAM,CAAC,aAAa,KAAK,IAAI,EAAE;gBACrE,IAAI,CAAC,MAAM,CAAC,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC;aACpD;YACD,IAAI,MAAM,CAAC,mBAAmB,KAAK,SAAS,IAAI,MAAM,CAAC,mBAAmB,KAAK,IAAI,EAAE;gBACjF,IAAI,CAAC,MAAM,CAAC,mBAAmB,GAAG,MAAM,CAAC,mBAAmB,CAAC;aAChE;YACD,IAAI,MAAM,CAAC,qBAAqB,KAAK,SAAS,IAAI,MAAM,CAAC,qBAAqB,KAAK,IAAI,EAAE;gBACrF,IAAI,CAAC,MAAM,CAAC,qBAAqB,GAAG,MAAM,CAAC,qBAAqB,CAAC;aACpE;YACD,IAAI,MAAM,CAAC,gBAAgB,KAAK,SAAS,IAAI,MAAM,CAAC,gBAAgB,KAAK,IAAI,EAAE;gBAC3E,IAAI,CAAC,MAAM,CAAC,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,CAAC;aAC1D;YACD,IAAI,MAAM,CAAC,iBAAiB,KAAK,SAAS,IAAI,MAAM,CAAC,iBAAiB,KAAK,IAAI,EAAE;gBAC7E,IAAI,CAAC,MAAM,CAAC,iBAAiB,GAAG,MAAM,CAAC,iBAAiB,CAAC;aAC5D;YACD,IAAI,MAAM,CAAC,oBAAoB,KAAK,SAAS,IAAI,MAAM,CAAC,oBAAoB,KAAK,IAAI,EAAE;gBACnF,IAAI,CAAC,MAAM,CAAC,oBAAoB,GAAG,MAAM,CAAC,oBAAoB,CAAC;aAClE;YACD,IAAI,MAAM,CAAC,eAAe,KAAK,SAAS,IAAI,MAAM,CAAC,eAAe,KAAK,IAAI,EAAE;gBACzE,IAAI,CAAC,MAAM,CAAC,eAAe,GAAG,MAAM,CAAC,eAAe,CAAC;aACxD;YACD,IAAI,MAAM,CAAC,mBAAmB,KAAK,SAAS,IAAI,MAAM,CAAC,mBAAmB,KAAK,IAAI,EAAE;gBACjF,IAAI,CAAC,MAAM,CAAC,mBAAmB,GAAG,MAAM,CAAC,mBAAmB,CAAC;aAChE;YACD,IAAI,MAAM,CAAC,0BAA0B,KAAK,SAAS,IAAI,MAAM,CAAC,0BAA0B,KAAK,IAAI,EAAE;gBAC/F,IAAI,CAAC,MAAM,CAAC,0BAA0B,GAAG,MAAM,CAAC,0BAA0B,CAAC;aAC9E;YACD,IAAI,MAAM,CAAC,sBAAsB,KAAK,SAAS,IAAI,MAAM,CAAC,sBAAsB,KAAK,IAAI,EAAE;gBACvF,IAAI,CAAC,MAAM,CAAC,sBAAsB,GAAG,MAAM,CAAC,sBAAsB,CAAC;aACtE;YACD,IAAI,MAAM,CAAC,gBAAgB,KAAK,SAAS,IAAI,MAAM,CAAC,gBAAgB,KAAK,IAAI,EAAE;gBAC3E,IAAI,CAAC,MAAM,CAAC,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,CAAC;aAC1D;YACD,IAAI,MAAM,CAAC,wBAAwB,KAAK,SAAS,IAAI,MAAM,CAAC,wBAAwB,KAAK,IAAI,EAAE;gBAC3F,IAAI,CAAC,MAAM,CAAC,wBAAwB,GAAG,MAAM,CAAC,wBAAwB,CAAC;aAC1E;YACD,IAAI,MAAM,CAAC,8BAA8B,KAAK,SAAS,IAAI,MAAM,CAAC,8BAA8B,KAAK,IAAI,EAAE;gBACvG,IAAI,CAAC,MAAM,CAAC,8BAA8B,GAAG,MAAM,CAAC,8BAA8B,CAAC;aACtF;YACD,IAAI,MAAM,CAAC,YAAY,KAAK,SAAS,IAAI,MAAM,CAAC,YAAY,KAAK,IAAI,EAAE;gBACnE,IAAI,CAAC,MAAM,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;aAClD;YACD,IAAI,MAAM,CAAC,KAAK,KAAK,SAAS,IAAI,MAAM,CAAC,KAAK,KAAK,IAAI,EAAE;gBACrD,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;aACpC;YACD,IAAI,MAAM,CAAC,YAAY,KAAK,SAAS,IAAI,MAAM,CAAC,YAAY,KAAK,IAAI,EAAE;gBACnE,IAAI,CAAC,MAAM,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;aAClD;YACD,IAAI,MAAM,CAAC,aAAa,KAAK,SAAS,IAAI,MAAM,CAAC,aAAa,KAAK,IAAI,EAAE;gBACrE,IAAI,CAAC,MAAM,CAAC,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC;aACpD;YACD,IAAI,MAAM,CAAC,SAAS,KAAK,SAAS,IAAI,MAAM,CAAC,SAAS,KAAK,IAAI,IAAI,MAAM,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC5F,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;gBAC9D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAC9C,IAAI,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;wBACzB,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;qBACnD;iBACJ;;aAEJ;YACD,IAAI,MAAM,CAAC,oBAAoB,KAAK,SAAS,IAAI,MAAM,CAAC,oBAAoB,KAAK,IAAI,EAAE;gBACnF,IAAI,CAAC,MAAM,CAAC,oBAAoB,GAAG,MAAM,CAAC,oBAAoB,CAAC;aAClE;YACD,IAAI,MAAM,CAAC,oBAAoB,KAAK,SAAS,IAAI,MAAM,CAAC,oBAAoB,KAAK,IAAI,EAAE;gBACnF,IAAI,CAAC,MAAM,CAAC,oBAAoB,GAAG,MAAM,CAAC,oBAAoB,CAAC;aAClE;YACD,IAAI,MAAM,CAAC,aAAa,KAAK,SAAS,IAAI,MAAM,CAAC,aAAa,KAAK,IAAI,EAAE;gBACrE,IAAI,CAAC,MAAM,CAAC,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC;aACpD;YACD,IAAI,MAAM,CAAC,YAAY,KAAK,SAAS,IAAI,MAAM,CAAC,YAAY,KAAK,IAAI,EAAE;gBACnE,IAAI,CAAC,MAAM,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;aAClD;YACD,IAAI,MAAM,CAAC,iBAAiB,KAAK,SAAS,IAAI,MAAM,CAAC,iBAAiB,KAAK,IAAI,EAAE;gBAC7E,IAAI,CAAC,MAAM,CAAC,iBAAiB,GAAG,MAAM,CAAC,iBAAiB,CAAC;aAC5D;YACD,IAAI,MAAM,CAAC,2BAA2B,KAAK,SAAS,IAAI,MAAM,CAAC,2BAA2B,KAAK,IAAI,EAAE;gBACjG,IAAI,CAAC,MAAM,CAAC,2BAA2B,GAAG,MAAM,CAAC,2BAA2B,CAAC;aAChF;SACJ;aAAM;;SAEN;;KAEJ;;;;IAED,eAAe;;cACL,KAAK,GAAG,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,QAAQ;QACpD,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC3B;;;;IAED,SAAS;;cACC,MAAM,GAAG,EAAE;QACjB,IAAI,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,EAAE;YACpB,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,KAAK,SAAS,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,KAAK,IAAI,EAAE;gBACjF,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;aAC/E;SACJ;QACD,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC;QACtD,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC;QAC3D,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC3D,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;QAC5F,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;;cAC/E,aAAa,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC;QACnE,KAAK,IAAI,GAAG,IAAI,aAAa,EAAE;YAC3B,IAAI,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,GAAG,CAAC,KAAK,IAAI,EAAE;gBAChD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,GAAG,CAAC,CAAC;aAChD;YACD,IAAI,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,GAAG,CAAC,KAAK,SAAS,EAAE;gBACrD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,GAAG,CAAC,CAAC;aAChD;YACD,IAAI,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,GAAG,CAAC,KAAK,EAAE,EAAE;gBAC9C,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,GAAG,CAAC,CAAC;aAChD;YACD,IAAI,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;gBACrD,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,GAAG,CAAC,CAAC;aAChD;SACJ;QACD,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,CAAC;QAClG,OAAO,MAAM,CAAC;KACjB;;;;;IAED,aAAa,CAAC,QAAc;QACxB,IAAI,IAAI,CAAC,YAAY,CAAC,cAAc,KAAK,IAAI,EAAE;YAC3C,OAAO,CAAC,IAAI,CAAC,8BAA8B,CAAC,CAAC;YAC7C,OAAO;SACV;;cACK,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE;;;cAEzB,GAAG,GAAG,IAAI;QAChB,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC;QACrB,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,KAAK,KAAK,EAAE;YACpC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,EAAE,MAAM,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC,SAAS;;;;YAAC,IAAI;gBAC5F,GAAG,CAAC,SAAS,GAAG,KAAK,CAAC;;sBAChB,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,EAAC,IAAI,EAAE,0BAA0B,EAAC,CAAE;gBAClE,MAAM,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;aAC/B,EAAC,CAAC;SACN;KACJ;;;;;IAED,QAAQ,CAAC,QAAc;QACnB,IAAI,IAAI,CAAC,YAAY,CAAC,GAAG,KAAK,IAAI,EAAE;YAChC,OAAO,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;YAClC,OAAO;SACV;;cACK,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE;QAC/B,IAAI,IAAI,CAAC,UAAU,KAAK,SAAS,IAAI,IAAI,CAAC,UAAU,KAAK,IAAI,EAAE;YAC3D,IAAI,IAAI,CAAC,UAAU,KAAK,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;gBAC5C,OAAO;aACV;SACJ;QACD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;;cACnC,GAAG,GAAG,IAAI;QAChB,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC;QACrB,GAAG,CAAC,WAAW,EAAE,CAAC;QAClB,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,KAAK,KAAK,EAAE;YACpC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC,SAAS;;;;YAAC,IAAI;gBAC3D,IAAI,QAAQ,KAAK,SAAS,IAAI,QAAQ,KAAK,IAAI,EAAE;;0BACvC,IAAI,GAAG,EAAE;oBACf,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,SAAS,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,IAAI,EAAE;wBAC3F,QAAQ,CAAC,EAAE,CAAC,CAAC;wBACb,GAAG,CAAC,WAAW,EAAE,CAAC;wBAClB,IAAI,GAAG,CAAC,WAAW,IAAI,CAAC,EAAE;4BACtB,GAAG,CAAC,SAAS,GAAG,KAAK,CAAC;4BACtB,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC;yBACvB;qBACJ;yBAAM;wBACH,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC;wBAChE,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,CAAC;wBACtE,KAAK,MAAM,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,EAAE;;gCAC9C,SAAS,GAAG,IAAI;4BACpB,IAAI,IAAI,CAAC,YAAY,CAAC,YAAY,KAAK,SAAS,IAAI,IAAI,CAAC,YAAY,CAAC,YAAY,KAAK,IAAI,EAAE;gCACzF,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;6BACpC;iCAAM;gCACH,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;6BACtD;;kCACK,GAAG,GAAG,IAAI,YAAY,CAAC,SAAS,EAAE,MAAM,EAAE,KAAK,EAAE,SAAS,CAAC;4BACjE,GAAG,CAAC,iBAAiB,GAAG,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC;4BACzD,GAAG,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC;4BAC3C,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;yBAClB;;8BACK,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;wBAC9F,IAAI,UAAU,KAAK,SAAS,IAAI,UAAU,KAAK,IAAI,EAAE;4BACjD,IAAI,IAAI,CAAC,YAAY,CAAC,YAAY,KAAK,SAAS,IAAI,IAAI,CAAC,YAAY,CAAC,YAAY,KAAK,IAAI,EAAE;gCACzF,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;6BACvE;yBACJ;wBACD,QAAQ,CAAC,IAAI,CAAC,CAAC;wBACf,GAAG,CAAC,WAAW,EAAE,CAAC;wBAClB,IAAI,GAAG,CAAC,WAAW,IAAI,CAAC,EAAE;4BACtB,GAAG,CAAC,SAAS,GAAG,KAAK,CAAC;4BACtB,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC;yBACvB;qBACJ;iBACJ;qBAAM;oBACH,GAAG,CAAC,WAAW,EAAE,CAAC;oBAClB,IAAI,GAAG,CAAC,WAAW,IAAI,CAAC,EAAE;wBACtB,GAAG,CAAC,SAAS,GAAG,KAAK,CAAC;wBACtB,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC;qBACvB;iBACJ;aACJ;;;;YAAE,GAAG;gBACF,GAAG,CAAC,WAAW,EAAE,CAAC;gBAClB,IAAI,GAAG,CAAC,WAAW,IAAI,CAAC,EAAE;oBACtB,GAAG,CAAC,SAAS,GAAG,KAAK,CAAC;oBACtB,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC;iBACvB;aACJ,EAAC,CAAC;SACN;KACJ;;;;IAED,eAAe;QACX,OAAO,KAAK,CAAC;KAChB;;;;IAED,gBAAgB;QACZ,OAAO,KAAK,CAAC;KAChB;;;;;IAED,aAAa,CAAC,GAAW;QACrB,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC;QAChC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;;cACxB,GAAG,GAAG,IAAI;QAChB,UAAU;;;QAAC;YACP,GAAG,CAAC,iBAAiB,GAAI,KAAK,CAAC;SAClC,GAAE,IAAI,CAAC,CAAC;KACZ;CACJ;;;IAtSG,gCAAsC;;IACtC,6BAA0B;;IAE1B,kCAAkB;;IAClB,gCAAuB;;IACvB,6BAAS;;IACT,iCAAc;;IACd,mCAAkB;;IAClB,uCAAmB;;IACnB,0CAAsB;;IACtB,0CAA0B;;IAC1B,6CAA0B;;IAC1B,+BAAgB;;IAChB,0CAA0B;;IAE1B,qCAA+C;;IAC/C,+BAAmC;;IACnC,oCAAgB;;;;;IAEhB,6BAAgC;;;;;;;;;ICpDhC,QAAS,QAAQ;IACjB,MAAO,MAAM;IACb,MAAO,MAAM;IACb,SAAU,SAAS;IACnB,QAAS,QAAQ;IACjB,YAAa,YAAY;IACzB,cAAe,cAAc;;;;;;;;;ICN7B,SAAM,EAAE,OAAI,EAAE,eAAY,EAAE,gBAAa;;;;;;;;;;;ACD7C;MAeM,MAAM,GAAG,OAAO;AAOtB,MAAa,yBAAyB;;;;IAiBpC,YAAoB,OAAwB;QAAxB,YAAO,GAAP,OAAO,CAAiB;QAftB,mBAAc,GAAG,EAAE,CAAC;QAEjC,cAAS,GAAG,IAAI,aAAa,EAAE,CAAC;QACzC,iBAAY,GAAmB,EAAE,CAAC;QAClC,cAAS,GAAG,EAAE,CAAC;QACf,mBAAc,GAAG,IAAI,CAAC;QACtB,8BAAyB,GAAG,KAAK,CAAC;QAClC,oBAAe,GAAG,IAAI,aAAa,EAAE,CAAC;QAEtC,SAAI,GAAG,IAAI,CAAC;QACZ,8BAAyB,GAAG,GAAG,CAAC;QACtB,wBAAmB,GAAG,IAAI,YAAY,EAAS,CAAC;QAChD,0BAAqB,GAAG,IAAI,YAAY,EAA8E,CAAC;QACvH,wBAAmB,GAAG,IAAI,YAAY,EAA8E,CAAC;QAG7H,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;KAClB;;;;IAED,QAAQ;QACN,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QACtC,IAAI,CAAC,cAAc,GAAG,SAAS,GAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,GAAG,6BAA6B,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,wBAAwB,GAAG,mBAAmB,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,cAAc,CAAC;QAC1M,IAAI,CAAC,SAAS,GAAG,kBAAkB,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC;QAClE,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,KAAK,CAAC,EAAE;YACrC,OAAO,CAAC,IAAI,CAAC,iCAAiC,CAAC,CAAC;SACjD;QACD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,CAAC;QAC9D,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,MAAM,EAAE,CAAC;QAC5F,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;QACnE,IAAI,CAAC,yBAAyB,GAAG,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC;QAE/E,IAAI,CAAC,0BAA0B,EAAE,CAAC;KACnC;;;;IAED,0BAA0B;;cAClB,GAAG,GAAG,IAAI;QAChB,IAAI,CAAC,SAAS,CAAC,gBAAgB;;;QAAG;YAChC,OAAO,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,KAAK,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM;;;;YAAC,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,EAAC,CAAC,MAAM,CAAC;SACrG,CAAA,CAAC;QAEF,IAAI,CAAC,SAAS,CAAC,eAAe;;;QAAG;YAC/B,OAAO,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,KAAK,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM;;;;YAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAC,CAAC,MAAM,CAAC;SACpG,CAAA,CAAC;KACH;;;;;IAED,WAAW,CAAC,OAAqC;QAC/C,IAAI,CAAC,0BAA0B,EAAE,CAAC;QAClC,IAAI,CAAC,8BAA8B,EAAE,CAAC;QACtC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;KACvC;;;;IAED,8BAA8B;QAC5B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;;kBAC7C,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;YACtC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO;;;;YAAC,MAAM;gBACnC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,YAAY,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC;aAC5F,EAAC,CAAC;SACJ;KACF;;;;;;IAED,iBAAiB,CAAC,UAAkB,EAAE,IAAS;;YACzC,MAAM,GAAG,SAAS;QACtB,IAAI,UAAU,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE;;kBAC5B,eAAe,GAAG,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC;YAC/C,KAAK,IAAI,CAAC,KAAK,EAAE,cAAc,CAAC,IAAI,eAAe,CAAC,OAAO,EAAE,EAAE;gBAC7D,eAAe,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;aACvE;YACD,eAAe,CAAC,OAAO;;;;YAAC,CAAC;gBACvB,IAAI,MAAM,KAAK,SAAS,EAAE;oBACxB,MAAM,GAAG,CAAC,CAAC;iBACZ;qBAAM;oBACL,MAAM,GAAG,MAAM,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;iBACjC;aACF,EAAC,CAAC;YACH,OAAO,MAAM,CAAC;SACf;aAAM,IAAI,UAAU,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE;;kBACnC,eAAe,GAAG,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC;YAC/C,KAAK,IAAI,CAAC,KAAK,EAAE,cAAc,CAAC,IAAI,eAAe,CAAC,OAAO,EAAE,EAAE;gBAC7D,eAAe,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;aACvE;YACD,eAAe,CAAC,OAAO;;;;YAAC,CAAC;gBACvB,IAAI,MAAM,KAAK,SAAS,EAAE;oBACxB,MAAM,GAAG,CAAC,CAAC;iBACZ;qBAAM;oBACL,MAAM,GAAG,MAAM,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;iBACjC;aACF,EAAC,CAAC;YACH,OAAO,MAAM,CAAC;SACf;aAAM,IAAI,UAAU,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE;;kBACnC,eAAe,GAAG,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC;YAC/C,KAAK,IAAI,CAAC,KAAK,EAAE,cAAc,CAAC,IAAI,eAAe,CAAC,OAAO,EAAE,EAAE;gBAC7D,eAAe,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;aACvE;YACD,eAAe,CAAC,OAAO;;;;YAAC,CAAC;gBACvB,IAAI,MAAM,KAAK,SAAS,EAAE;oBACxB,MAAM,GAAG,CAAC,CAAC;iBACZ;qBAAM;oBACL,MAAM,GAAG,MAAM,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;iBACjC;aACF,EAAC,CAAC;YACH,OAAO,MAAM,CAAC;SACf;aAAM,IAAI,UAAU,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE;;kBACnC,eAAe,GAAG,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC;YAC/C,KAAK,IAAI,CAAC,KAAK,EAAE,cAAc,CAAC,IAAI,eAAe,CAAC,OAAO,EAAE,EAAE;gBAC7D,eAAe,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;aACvE;YACD,eAAe,CAAC,OAAO;;;;YAAC,CAAC;gBACvB,IAAI,MAAM,KAAK,SAAS,EAAE;oBACxB,MAAM,GAAG,CAAC,CAAC;iBACZ;qBAAM;oBACL,MAAM,GAAG,MAAM,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;iBACjC;aACF,EAAC,CAAC;YACH,OAAO,MAAM,CAAC;SACf;aAAM;YACL,OAAO,IAAI,CAAC,0BAA0B,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;SAC1D;KACF;;;;;;IAED,cAAc,CAAC,UAAkB,EAAE,IAAS;QAC1C,IAAI,IAAI,KAAK,SAAS,EAAE;YACtB,OAAO,SAAS,CAAC;SAClB;QACD,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,SAAS,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,IAAI,EAAE;YAC/D,OAAO,IAAI,CAAC,UAAU,CAAC,CAAC;SACzB;QACD,IAAI,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,UAAU,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;YAC/D,UAAU,GAAG,UAAU,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;YAChD,UAAU,GAAG,UAAU,CAAC,SAAS,CAAC,CAAC,EAAE,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;;kBACtD,eAAe,GAAG,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC;;gBAC3C,MAAM,GAAG,EAAE;YACf,eAAe,CAAC,OAAO;;;;YAAC,CAAC;gBACrB,MAAM,IAAI,EAAE,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;aAClD,EAAC,CAAC;YACH,OAAO,MAAM,CAAC;SACjB;aAAM;YACH,OAAO,IAAI,CAAC,iBAAiB,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;SACnD;KACJ;;;;;;;;;;;;;;;;;IAeC,0BAA0B,CAAC,IAAY,EAAE,IAAS;;cAC1C,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;;YAC7B,MAAM,GAAG,IAAI;QACjB,KAAK,IAAI,IAAI,IAAI,SAAS,EAAE;YAC1B,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;;sBAChB,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;;sBAC1B,aAAa,GAAG,QAAQ,CAAC,CAAC,CAAC;gBACjC,IAAI,MAAM,CAAC,aAAa,CAAC,KAAK,SAAS,IAAI,MAAM,CAAC,aAAa,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,EAAE;oBAClH,OAAO,EAAE,CAAC;iBACX;;sBACK,UAAU,GAAG,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;gBACzD,IAAI,KAAK,CAAC,UAAU,CAAC,EAAE;oBACrB,OAAO,WAAW,CAAC;iBACpB;gBACD,MAAM,GAAG,MAAM,CAAC,aAAa,CAAC,CAAC,UAAU,CAAC,CAAC;aAC5C;iBAAM;gBACL,IAAI,MAAM,KAAK,SAAS,EAAE;oBACxB,OAAO,EAAE,CAAC;iBACX;gBACD,IAAI,IAAI,KAAK,GAAG,EAAE;oBAChB,OAAO,GAAG,CAAC;iBACZ;gBACD,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,SAAS,EAAE;oBAC9B,OAAO,IAAI,CAAC;iBACb;gBACD,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;aACvB;SACF;QACD,OAAO,MAAM,CAAC;KACf;;;;IAED,YAAY;QACV,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;KACvC;;;;IAED,SAAS;;YACH,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;QACnD,IAAI,OAAO,EAAE;YACX,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;SAC3B;QACD,OAAO,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;QAC9E,IAAI,OAAO,EAAE;YACX,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;SAC3B;QACD,IAAI,CAAC,IAAI,CAAC,yBAAyB,EAAE;YACnC,CAAC,CAAC,iBAAiB,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE,CAAC,kBAAkB;;;;YAAE,UAAU,CAAC;gBAC3E,IAAI,CAAC,CAAC,UAAU,KAAK,SAAS,EAAE;oBAC9B,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;wBAC7C,OAAO,KAAK,CAAC;qBACd;iBACF;gBACD,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC;gBACtC,OAAO,IAAI,CAAC;aACb,EAAC,CAAC;SACJ;KACF;;;;;IAED,SAAS,CAAC,GAAiB;QACzB,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC;QACpB,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC;QAC5D,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,KAAK,IAAI,EAAE;YACrD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;SAC/D;KACF;;;;;IAED,WAAW,CAAC,GAAiB;QAC3B,GAAG,CAAC,QAAQ,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,SAAS,CAAC,iBAAiB,GAAG,KAAK,CAAC;QACzC,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,YAAY,KAAK,IAAI,EAAE;YACtD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;SAChE;KACF;;;;IAED,aAAa;QACX,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QACpD,IAAI,CAAC,SAAS,CAAC,iBAAiB,GAAG,IAAI,CAAC;KACzC;;;;;IAED,mBAAmB,CAAC,IAAoB;QACtC,KAAK,MAAM,GAAG,IAAI,IAAI,EAAE;YACtB,IAAI,GAAG,CAAC,UAAU,EAAE;gBAClB,IAAI,GAAG,CAAC,QAAQ,KAAK,IAAI,EAAE;oBACzB,IAAI,GAAG,CAAC,QAAQ,CAAC,IAAI,KAAK,IAAI,EAAE;wBAC9B,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,0BAA0B,EAAE;;4BAEpD,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;4BACpB,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;4BAC5C,GAAG,CAAC,QAAQ,CAAC,iBAAiB,GAAG,IAAI,CAAC;yBACvC;6BAAM;4BACL,IAAI,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;;gCAEhC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;gCACpB,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;gCAC5C,GAAG,CAAC,QAAQ,CAAC,iBAAiB,GAAG,IAAI,CAAC;6BACvC;yBACF;qBACF;iBACF;aACF;SACF;KACF;;;;IAED,eAAe;QACb,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QACtD,IAAI,CAAC,SAAS,CAAC,iBAAiB,GAAG,KAAK,CAAC;KAC1C;;;;;IAED,qBAAqB,CAAC,IAAoB;QACxC,KAAK,MAAM,GAAG,IAAI,IAAI,EAAE;YACtB,IAAI,GAAG,CAAC,UAAU,EAAE;gBAClB,IAAI,GAAG,CAAC,QAAQ,KAAK,IAAI,EAAE;oBACzB,IAAI,GAAG,CAAC,QAAQ,CAAC,IAAI,KAAK,IAAI,EAAE;wBAC9B,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,0BAA0B,EAAE;;4BAEpD,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;4BACtB,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;4BAC9C,GAAG,CAAC,QAAQ,CAAC,iBAAiB,GAAG,KAAK,CAAC;yBACxC;6BAAM;4BACL,IAAI,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;;gCAEhC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;gCACtB,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;gCAC9C,GAAG,CAAC,QAAQ,CAAC,iBAAiB,GAAG,KAAK,CAAC;6BACxC;yBACF;qBACF;iBACF;aACF;SACF;KACF;;;;;IAED,SAAS,CAAC,GAAiB;QACzB,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;KAC5D;;;;;;IAED,SAAS,CAAC,GAAiB,EAAE,MAA0B;QACrD,IAAI,MAAM,CAAC,IAAI,KAAK,sBAAsB,CAAC,YAAY,EAAE;YACvD,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;SACrB;QACD,IAAI,MAAM,CAAC,MAAM,KAAK,SAAS,IAAI,MAAM,CAAC,MAAM,KAAK,IAAI,EAAE;YACzD,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,GAAG,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE,CAAC;SACxD;KACF;;;;;IAED,UAAU,CAAC,IAAY;QACrB,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,KAAK,IAAI,IAAI,IAAI,GAAG,CAAC,EAAE;YAC5C,OAAO;SACR;QACD,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,eAAe,EAAE,EAAE;YAC3C,OAAO;SACR;;;;;QAKD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACvB,IAAI,CAAC,eAAe,EAAE,CAAC;KACxB;;;;;IAED,WAAW,CAAC,UAAkB;QAC5B,IAAI,CAAC,yBAAyB,GAAG,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC;;cACzE,GAAG,GAAG,IAAI;QAChB,IAAI,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,GAAG,KAAK,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,GAAG,KAAK,IAAI,EAAE;YAC7F,IAAI,UAAU,KAAK,CAAC,EAAE;gBACpB,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,cAAc,EAAE;oBAC9E,OAAO,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,UAAU,GAAG,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;oBACxG,OAAO;iBACR;aACF;YACD,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,UAAU,CAAC;YACjC,IAAI,CAAC,SAAS,CAAC,QAAQ;;;;YAAC,IAAI;;;;;;;gBAO1B,GAAG,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;gBACrD,KAAK,MAAM,GAAG,IAAI,IAAI,EAAE;oBACtB,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBAC5B;;sBACK,SAAS,GAAG,GAAG,CAAC,YAAY,CAAC,MAAM;;;;;gBAKzC,GAAG,CAAC,eAAe,CAAC,OAAO,GAAG,GAAG,CAAC,SAAS,CAAC,OAAO,CAAC;;sBAC9C,UAAU,GAAG,CAAC,UAAU,GAAG,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ;gBAC7D,IAAI,IAAI,CAAC,eAAe,CAAC,IAAI,KAAK,SAAS,EAAE;oBAC3C,IAAI,CAAC,eAAe,CAAC,IAAI,GAAG,EAAE,CAAC;iBAChC;gBACD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACtE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;;oBAEnE,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,KAAK,IAAI,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,KAAK,SAAS,EAAE;wBACvE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;qBACtD;iBACF;aACF,EAAC,CAAC;SACJ;aAAM;YACL,GAAG,CAAC,SAAS,CAAC,cAAc,GAAG,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC;YACzD,IAAI,UAAU,KAAK,CAAC,EAAE;gBACpB,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,cAAc,EAAE;oBAC9E,OAAO,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,UAAU,GAAG,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;oBACxG,OAAO;iBACR;aACF;YACD,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,UAAU,CAAC;YACjC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;YACtD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM;;;;YAAC,CAAC,CAAC;;sBACzC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;;;oBAE5B,OAAO,GAAG,KAAK;gBACnB,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,KAAK,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,KAAK,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;oBACnH,KAAK,MAAM,GAAG,IAAI,IAAI,EAAE;wBACtB,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,SAAS,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,EAAE;4BACrD,SAAS;yBACV;wBACD,OAAO,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;wBAClG,IAAI,OAAO,EAAE;4BACX,MAAM;yBACP;qBACF;iBACF;qBAAM;oBACL,OAAO,GAAG,IAAI,CAAC;iBAChB;gBACD,IAAI,OAAO,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,aAAa,KAAK,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,aAAa,KAAK,IAAI,EAAE;oBAChH,KAAK,MAAM,GAAG,IAAI,IAAI,EAAE;wBACtB,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,KAAK,SAAS;4BACxD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,KAAK,IAAI;4BACjD,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,EAAE;4BACzD,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,SAAS,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,EAAE;gCACrD,OAAO,GAAG,KAAK,CAAC;gCAChB,MAAM;6BACP;;gCACG,OAAO,GAAG,KAAK;4BACnB,KAAK,MAAM,QAAQ,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,EAAE;gCAC/D,OAAO,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;gCACpF,IAAI,OAAO,EAAE;oCACX,MAAM;iCACP;6BACF;4BACD,OAAO,GAAG,OAAO,CAAC;4BAClB,IAAI,CAAC,OAAO,EAAE;gCACZ,MAAM;6BACP;yBACF;qBACF;iBACF;gBACD,IAAI,OAAO,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,oBAAoB,KAAK,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,oBAAoB,KAAK,IAAI,EAAE;oBAC9H,KAAK,MAAM,GAAG,IAAI,IAAI,EAAE;wBACtB,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,oBAAoB,CAAC,GAAG,CAAC,KAAK,SAAS;4BAC/D,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,oBAAoB,CAAC,GAAG,CAAC,KAAK,IAAI;4BACxD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,oBAAoB,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;4BAC/D,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,SAAS,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,EAAE;gCACrD,OAAO,GAAG,KAAK,CAAC;gCAChB,MAAM;6BACP;4BACD,OAAO,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,oBAAoB,CAAC,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;4BAC3H,IAAI,CAAC,OAAO,EAAE;gCACZ,MAAM;6BACP;yBACF;qBACF;iBACF;gBACD,OAAO,OAAO,CAAC;aAChB,EAAC,CAAC;;kBACG,SAAS,GAAG,GAAG,CAAC,YAAY,CAAC,MAAM;YACzC,GAAG,CAAC,SAAS,CAAC,iBAAiB,GAAG,SAAS,CAAC;;;;;YAK5C,GAAG,CAAC,eAAe,CAAC,OAAO,GAAG,GAAG,CAAC,SAAS,CAAC,OAAO,CAAC;;kBAC9C,UAAU,GAAG,CAAC,UAAU,GAAG,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ;YAC7D,IAAI,IAAI,CAAC,eAAe,CAAC,IAAI,KAAK,SAAS,EAAE;gBAC3C,IAAI,CAAC,eAAe,CAAC,IAAI,GAAG,EAAE,CAAC;aAChC;YACD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACtE,KAAK,IAAI,CAAC,GAAG,UAAU,EAAE,CAAC,GAAG,QAAQ,CAAC,UAAU,GAAG,EAAE,EAAE,EAAE,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;gBAC5G,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,KAAK,IAAI,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,KAAK,SAAS,EAAE;;oBAEvE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;iBACtD;aACF;SACF;KACF;;;;;;IAED,gBAAgB,CAAC,GAAiB,EAAE,YAAoB;QACtD,IAAI,OAAO,GAAG,CAAC,UAAU,CAAC,YAAY,CAAC,KAAK,QAAQ,EAAE;YACpD,IAAI,GAAG,CAAC,UAAU,CAAC,YAAY,CAAC,KAAK,sBAAsB,CAAC,YAAY,CAAC,QAAQ,EAAE,EAAE;gBACnF,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;gBACpB,OAAO;aACR;SACF;QACD,IAAI,GAAG,CAAC,iBAAiB,KAAK,IAAI,EAAE;YAClC,GAAG,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,iBAAiB,EAAE,GAAG,CAAC,IAAI,EAAE,YAAY,CAAC,EAAE,CAAC;SACpF;aAAM;YACL,GAAG,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;SACtD;KACF;;;;IAED,YAAY;QACV,OAAO,CAAC,IAAI,CAAC,kCAAkC,CAAC,CAAC;KAClD;;;;;IAED,mBAAmB,CAAC,YAAoB;QACtC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;KACrB;;;;IAED,WAAW;;cACH,WAAW,GAAG,EAAE;;cAChB,KAAK,GAAG,CAAC;;cACT,QAAQ,GAAG,CAAC;QAClB,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;YACtE,IAAI,CAAC,GAAG,CAAC,EAAE;gBACT,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACrB;SACF;;cACK,aAAa,GAAG,KAAK,GAAG,WAAW,CAAC,MAAM;QAChD,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,aAAa,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;YACvF,IAAI,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,eAAe,EAAE,EAAE;gBACzC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACrB;SACF;QACD,IAAI,WAAW,CAAC,MAAM,GAAG,QAAQ,EAAE;YACjC,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,KAAK,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;gBAClF,IAAI,CAAC,GAAG,CAAC,EAAE;oBACT,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;iBACxB;aACF;SACF;QACD,OAAO,WAAW,CAAC;KACpB;;;;IAED,gBAAgB;;cACR,QAAQ,GAAG,EAAE;;YACf,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI;QACxC,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,2BAA2B,EAAE;YACrD,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC;SACpC;QACD,KAAK,IAAI,CAAC,IAAI,cAAc,EAAE;;kBACtB,GAAG,GAAG,EAAE;YACd,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE;gBACpC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC;aACvC;YACD,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACpB;;cACK,QAAQ,GAAG,iFAAiF;;cAC5F,aAAa,GAAG,OAAO;;cACvB,EAAE,GAAmBA,KAAU,CAAC,aAAa,CAAC,QAAQ,CAAC;;cACvD,EAAE,GAAkB,EAAE,MAAM,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,UAAU,EAAE,CAAC,MAAM,CAAC,EAAE;;cAClE,WAAW,GAAQC,KAAU,CAAC,EAAE,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;;cACtE,IAAI,GAAS,IAAI,IAAI,CAAC,CAAC,WAAW,CAAC,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC;QAC9DC,MAAgB,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,mBAAmB,GAAG,aAAa,CAAC,CAAC;KACnF;;;;;IAED,UAAU,CAAC,MAA6B;;cAChC,YAAY,GAAG,MAAM,CAAC,YAAY;QACxC,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,YAAY,CAAC,YAAY,CAAC,KAAK,SAAS,EAAE;YAClE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,YAAY,GAAG,EAAE,CAAC;YACxC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,YAAY,CAAC,YAAY,CAAC,GAAG,MAAM,CAAC;YAC1D,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;SAC1B;aAAM,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,YAAY,CAAC,YAAY,CAAC,KAAK,MAAM,EAAE;YACtE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,YAAY,CAAC,YAAY,CAAC,GAAG,KAAK,CAAC;YACzD,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;SACzB;aAAM;YACL,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;SACzD;KACF;;;;;IAED,UAAU,CAAC,MAA6B;;cAChC,YAAY,GAAG,MAAM,CAAC,YAAY;QACxC,IAAI,MAAM,CAAC,QAAQ,KAAK,UAAU,CAAC,MAAM,EAAE;YACzC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI;;;;;YAAC,CAAC,CAAC,EAAE,CAAC;gBAC5B,IAAI,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE;oBACvE,OAAO,CAAC,CAAC,CAAC;iBACX;qBAAM,IAAI,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE;oBAC9E,OAAO,CAAC,CAAC;iBACV;gBACD,OAAO,CAAC,CAAC;aACV,EAAC,CAAC;SACJ;aAAM,IAAI,MAAM,CAAC,QAAQ,KAAK,UAAU,CAAC,IAAI,EAAE;YAC9C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI;;;;;YAAC,CAAC,CAAC,EAAE,CAAC;gBAC5B,IAAI,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,OAAO,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,OAAO,EAAE,EAAE;oBACrG,OAAO,CAAC,CAAC,CAAC;iBACX;qBAAM,IAAI,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,OAAO,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,OAAO,EAAE,EAAE;oBAC5G,OAAO,CAAC,CAAC;iBACV;gBACD,OAAO,CAAC,CAAC;aACV,EAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI;;;;;YAAC,CAAC,CAAC,EAAE,CAAC;gBAC5B,IAAI,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE;oBAC/C,OAAO,CAAC,CAAC,CAAC;iBACX;qBAAM,IAAI,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE;oBACtD,OAAO,CAAC,CAAC;iBACV;gBACD,OAAO,CAAC,CAAC;aACV,EAAC,CAAC;SACJ;QACD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;KACvC;;;;;IAED,WAAW,CAAC,MAA6B;;cACjC,YAAY,GAAG,MAAM,CAAC,YAAY;QACxC,IAAI,MAAM,CAAC,QAAQ,KAAK,UAAU,CAAC,MAAM,EAAE;YACzC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI;;;;;YAAC,CAAC,CAAC,EAAE,CAAC;gBAC5B,IAAI,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE;oBACvE,OAAO,CAAC,CAAC;iBACV;qBAAM,IAAI,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE;oBAC9E,OAAO,CAAC,CAAC,CAAC;iBACX;gBACD,OAAO,CAAC,CAAC;aACV,EAAC,CAAC;SACJ;aAAM,IAAI,MAAM,CAAC,QAAQ,KAAK,UAAU,CAAC,IAAI,EAAE;YAC9C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI;;;;;YAAC,CAAC,CAAC,EAAE,CAAC;gBAC5B,IAAI,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,OAAO,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,OAAO,EAAE,EAAE;oBACrG,OAAO,CAAC,CAAC;iBACV;qBAAM,IAAI,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,OAAO,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,OAAO,EAAE,EAAE;oBAC5G,OAAO,CAAC,CAAC,CAAC;iBACX;gBACD,OAAO,CAAC,CAAC;aACV,EAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI;;;;;YAAC,CAAC,CAAC,EAAE,CAAC;gBAC5B,IAAI,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE;oBAC/C,OAAO,CAAC,CAAC;iBACV;qBAAM,IAAI,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE;oBACtD,OAAO,CAAC,CAAC,CAAC;iBACX;gBACD,OAAO,CAAC,CAAC;aACV,EAAC,CAAC;SACJ;QACD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;KACvC;;;;IAED,MAAM;QACJ,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;KACrB;;;;IAED,eAAe;QACb,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;KACrB;;;;IAED,kBAAkB;QAChB,IAAI,IAAI,CAAC,SAAS,CAAC,YAAY,KAAK,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,YAAY,KAAK,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,cAAc,KAAK,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,cAAc,KAAK,IAAI,EAAE;YACxM,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC;SAChC;aAAM;YACL,IAAI,CAAC,gBAAgB,EAAE,CAAC;SACzB;KACF;;;;IAED,SAAS;;YACH,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI;QACtD,IAAI,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,iBAAiB,EAAE;YACzC,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC;SACvC;QACD,OAAO,EAAE,CAAC;KACX;;;;;IAED,iBAAiB,CAAC,MAA6B;QAC7C,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM;;;;QAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAC,CAAC,MAAM,KAAK,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC;KAC1F;;;;;IAED,mBAAmB,CAAC,MAA6B;QAC/C,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;KAC5F;;;;;;IAEO,aAAa,CAAC,MAA6B;QACjD,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG;;;;QAAC,CAAC,MAAM,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,EAAC,CAAC;QACrF,IAAI,CAAC,UAAU,EAAE,CAAC;KACnB;;;;;;IAEO,eAAe,CAAC,MAA6B;QACnD,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG;;;;QAAC,CAAC,MAAM,CAAC,CAAC,QAAQ,GAAG,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,EAAC,CAAC;QACtF,IAAI,CAAC,UAAU,EAAE,CAAC;KACnB;;;;;IAED,eAAe,CAAC,GAAiB;QAC/B,GAAG,CAAC,QAAQ,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC;QAC7B,IAAI,CAAC,UAAU,EAAE,CAAC;KACnB;;;;;IAED,WAAW,CAAC,GAAiB;;YACvB,OAAO,GAAG,EAAE,cAAc,EAAE,GAAG,CAAC,QAAQ,EAAE,eAAe,EAAE,CAAC,GAAG,CAAC,QAAQ,EAAE,UAAU,EAAE,cAAc,EAAE,YAAY,EAAE,eAAe,EAAE;QACzI,KAAK,MAAM,GAAG,IAAI,GAAG,CAAC,OAAO,EAAE;YAC7B,OAAO,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;SACrB;QACD,OAAO,OAAO,CAAC;KAChB;;;;IAED,eAAe;;cACP,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM;;;;YAAC,CAAC;gBAC3C,IAAI,CAAC,CAAC,QAAQ,EAAE;oBACd,OAAO,CAAC,CAAC,IAAI,CAAC;iBACf;aACF,EAAC,CAAC;QACH,OAAO,IAAI,CAAC,GAAG;;;;QAAC,CAAC,IAAI,CAAC,CAAC,IAAI,EAAC,CAAC;KAC9B;;;;;IAED,wBAAwB,CAAC,IAAoB;QAC3C,IAAI,IAAI,CAAC,mBAAmB,KAAK,SAAS,IAAI,IAAI,CAAC,mBAAmB,KAAK,IAAI,EAAE;YAC/E,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACrC;KACF;;;;IAED,UAAU;QACR,IAAI,IAAI,CAAC,mBAAmB,KAAK,SAAS,IAAI,IAAI,CAAC,mBAAmB,KAAK,IAAI,EAAE;YAC/E,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;SACvD;KACF;;;;;;;;;IAED,6BAA6B,CAAC,KAAU,EAAE,OAAY,EAAE,SAAiB,EAAE,KAAU,EAAE,KAAa;QAClG,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC;KAC9E;;;;;;;;;IAED,2BAA2B,CAAC,KAAU,EAAE,OAAY,EAAE,SAAiB,EAAE,KAAU,EAAE,KAAa;QAChG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC;KAC5E;;;;;IAED,0BAA0B,CAAC,IAAgF;QACzG,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACvC;;;;;IAED,wBAAwB,CAAC,IAAgF;QACvG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACrC;;;YAhrBF,SAAS,SAAC;gBACT,QAAQ,EAAE,oBAAoB;gBAC9B,+oqBAAkD;;aAEnD;;;;YApB2C,eAAe;;;6BAuBxD,WAAW,SAAC,OAAO;wBAEnB,KAAK;kCASL,MAAM;oCACN,MAAM;kCACN,MAAM;;;;IAbP,mDAA0C;;;;;IAC1C,gDAAiD;;IACjD,8CAAyC;;IACzC,iDAAkC;;IAClC,8CAAe;;IACf,mDAAsB;;IACtB,8DAAkC;;IAClC,oDAAsC;;;;;IACtC,yDAA0D;;IAC1D,yCAAY;;IACZ,8DAAgC;;IAChC,wDAA0D;;IAC1D,0DAAiI;;IACjI,wDAA+H;;;;;IAEnH,4CAAgC;;;;;;;ACvC9C,MAiBa,sBAAsB;;;YAVlC,QAAQ,SAAC;gBACR,YAAY,EAAE,CAAC,yBAAyB,CAAC;gBACzC,OAAO,EAAE;oBACP,WAAW;oBACX,YAAY;iBACb;gBACD,OAAO,EAAE;oBACP,yBAAyB;iBAC1B;aACF;;;;;;;AChBD,MAEa,qBAAqB;;;;;;;;IAQ9B,YAAY,KAAa,EAAE,YAAoB,EAAE,KAAa,EAAE,IAAa,EAAE,+BAAwC,IAAI;QAH3H,aAAQ,GAAe,UAAU,CAAC,IAAI,CAAC;QACvC,uBAAkB,GAAG,IAAI,CAAC;;QAC1B,gCAA2B,GAAG,IAAI,CAAC;QAE/B,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,2BAA2B,GAAG,4BAA4B,CAAC;KACnE;CACJ;;;IAdG,6CAAqB;;IACrB,sCAAc;;IACd,sCAAc;;IACd,qCAAc;;IACd,yCAAuC;;IACvC,mDAA0B;;IAC1B,4DAAmC;;;;;;;ACTvC,MAEa,kBAAkB;;;;;;;IAS3B,YAAY,KAAa,EAAE,KAAa,EAAE,OAAe,EAAE,MAA6D;QAJxH,SAAI,GAA2B,sBAAsB,CAAC,MAAM,CAAC;QAKzD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACxB;CACJ;;;IAdG,mCAAc;;IACd,mCAAc;;IACd,qCAAgB;;IAChB,oCAA8D;;IAC9D,kCAA6D;;IAC7D,uCAAe;;IACf,qCAAa;;;;;;;;;;;;;;;"}